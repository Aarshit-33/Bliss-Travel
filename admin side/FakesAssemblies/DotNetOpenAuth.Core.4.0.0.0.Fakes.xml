<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetOpenAuth.Core.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:DotNetOpenAuth.Configuration.Fakes.ShimDotNetOpenAuthSection">
            <summary>Shim type of DotNetOpenAuth.Configuration.DotNetOpenAuthSection</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.ShimDotNetOpenAuthSection.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.ShimDotNetOpenAuthSection.#ctor(DotNetOpenAuth.Configuration.DotNetOpenAuthSection)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.ShimDotNetOpenAuthSection.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.ShimDotNetOpenAuthSection.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimDotNetOpenAuthSection.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimDotNetOpenAuthSection.Constructor">
            <summary>Sets the shim of DotNetOpenAuthSection.DotNetOpenAuthSection()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimDotNetOpenAuthSection.GetNamedSectionString">
            <summary>Sets the shim of DotNetOpenAuthSection.GetNamedSection(String name)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimDotNetOpenAuthSection.MessagingGet">
            <summary>Sets the shim of DotNetOpenAuthSection.get_Messaging()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Configuration.Fakes.ShimDotNetOpenAuthSection.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement">
            <summary>Shim type of DotNetOpenAuth.Configuration.MessagingElement</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.#ctor(DotNetOpenAuth.Configuration.MessagingElement)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.ConfigurationGet">
            <summary>Sets the shim of MessagingElement.get_Configuration()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.Constructor">
            <summary>Sets the shim of MessagingElement.MessagingElement()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.MaximumClockSkewGet">
            <summary>Sets the shim of MessagingElement.get_MaximumClockSkew()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.MaximumClockSkewSetTimeSpan">
            <summary>Sets the shim of MessagingElement.set_MaximumClockSkew(TimeSpan value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.MaximumIndirectMessageUrlLengthGet">
            <summary>Sets the shim of MessagingElement.get_MaximumIndirectMessageUrlLength()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.MaximumIndirectMessageUrlLengthSetInt32">
            <summary>Sets the shim of MessagingElement.set_MaximumIndirectMessageUrlLength(Int32 value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.MaximumMessageLifetimeGet">
            <summary>Sets the shim of MessagingElement.get_MaximumMessageLifetime()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.MaximumMessageLifetimeNoSkewGet">
            <summary>Sets the shim of MessagingElement.get_MaximumMessageLifetimeNoSkew()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.MaximumMessageLifetimeNoSkewSetTimeSpan">
            <summary>Sets the shim of MessagingElement.set_MaximumMessageLifetimeNoSkew(TimeSpan value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.PrivateSecretMaximumAgeGet">
            <summary>Sets the shim of MessagingElement.get_PrivateSecretMaximumAge()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.PrivateSecretMaximumAgeSetTimeSpan">
            <summary>Sets the shim of MessagingElement.set_PrivateSecretMaximumAge(TimeSpan value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.RelaxSslRequirementsGet">
            <summary>Sets the shim of MessagingElement.get_RelaxSslRequirements()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.RelaxSslRequirementsSetBoolean">
            <summary>Sets the shim of MessagingElement.set_RelaxSslRequirements(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.StrictGet">
            <summary>Sets the shim of MessagingElement.get_Strict()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.StrictSetBoolean">
            <summary>Sets the shim of MessagingElement.set_Strict(Boolean value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances.MaximumClockSkewGet">
            <summary>Sets the shim of MessagingElement.get_MaximumClockSkew()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances.MaximumClockSkewSetTimeSpan">
            <summary>Sets the shim of MessagingElement.set_MaximumClockSkew(TimeSpan value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances.MaximumIndirectMessageUrlLengthGet">
            <summary>Sets the shim of MessagingElement.get_MaximumIndirectMessageUrlLength()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances.MaximumIndirectMessageUrlLengthSetInt32">
            <summary>Sets the shim of MessagingElement.set_MaximumIndirectMessageUrlLength(Int32 value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances.MaximumMessageLifetimeGet">
            <summary>Sets the shim of MessagingElement.get_MaximumMessageLifetime()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances.MaximumMessageLifetimeNoSkewGet">
            <summary>Sets the shim of MessagingElement.get_MaximumMessageLifetimeNoSkew()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances.MaximumMessageLifetimeNoSkewSetTimeSpan">
            <summary>Sets the shim of MessagingElement.set_MaximumMessageLifetimeNoSkew(TimeSpan value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances.PrivateSecretMaximumAgeGet">
            <summary>Sets the shim of MessagingElement.get_PrivateSecretMaximumAge()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances.PrivateSecretMaximumAgeSetTimeSpan">
            <summary>Sets the shim of MessagingElement.set_PrivateSecretMaximumAge(TimeSpan value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances.RelaxSslRequirementsGet">
            <summary>Sets the shim of MessagingElement.get_RelaxSslRequirements()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances.RelaxSslRequirementsSetBoolean">
            <summary>Sets the shim of MessagingElement.set_RelaxSslRequirements(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances.StrictGet">
            <summary>Sets the shim of MessagingElement.get_Strict()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.ShimMessagingElement.AllInstances.StrictSetBoolean">
            <summary>Sets the shim of MessagingElement.set_Strict(Boolean value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement">
            <summary>Stub type of DotNetOpenAuth.Configuration.MessagingElement</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.DeserializeElementXmlReaderBoolean">
            <summary>Sets the stub of ConfigurationElement.DeserializeElement(XmlReader reader, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.DeserializeSection(System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.DeserializeSectionXmlReader">
            <summary>Sets the stub of ConfigurationSection.DeserializeSection(XmlReader reader)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.ElementPropertyGet">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.Equals(System.Object)">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.EqualsObject">
            <summary>Sets the stub of ConfigurationElement.Equals(Object compareTo)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.GetHashCode">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.GetHashCode01">
            <summary>Sets the stub of ConfigurationElement.GetHashCode()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.GetRuntimeObject">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.GetRuntimeObject01">
            <summary>Sets the stub of ConfigurationSection.GetRuntimeObject()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.GetTransformedAssemblyString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.GetTransformedAssemblyStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedAssemblyString(String assemblyName)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.GetTransformedTypeString(System.String)">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.GetTransformedTypeStringString">
            <summary>Sets the stub of ConfigurationElement.GetTransformedTypeString(String typeName)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.Init">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.Init01">
            <summary>Sets the stub of ConfigurationElement.Init()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.InitializeDefault">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.InitializeDefault01">
            <summary>Sets the stub of ConfigurationElement.InitializeDefault()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.InitializeStub">
            <summary>Initializes a new instance of type StubMessagingElement</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.IsModified">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.IsModified01">
            <summary>Sets the stub of ConfigurationSection.IsModified()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.IsReadOnly">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.IsReadOnly01">
            <summary>Sets the stub of ConfigurationElement.IsReadOnly()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.ListErrors(System.Collections.IList)">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.ListErrorsIList">
            <summary>Sets the stub of ConfigurationElement.ListErrors(IList errorList)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.OnDeserializeUnrecognizedAttributeStringString">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedAttribute(String name, String value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.OnDeserializeUnrecognizedElementStringXmlReader">
            <summary>Sets the stub of ConfigurationElement.OnDeserializeUnrecognizedElement(String elementName, XmlReader reader)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.OnRequiredPropertyNotFound(System.String)">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.OnRequiredPropertyNotFoundString">
            <summary>Sets the stub of ConfigurationElement.OnRequiredPropertyNotFound(String name)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.PostDeserialize">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.PostDeserialize01">
            <summary>Sets the stub of ConfigurationElement.PostDeserialize()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.PreSerialize(System.Xml.XmlWriter)">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.PreSerializeXmlWriter">
            <summary>Sets the stub of ConfigurationElement.PreSerialize(XmlWriter writer)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.PropertiesGet">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.Reset(System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.ResetConfigurationElement">
            <summary>Sets the stub of ConfigurationElement.Reset(ConfigurationElement parentElement)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.ResetModified">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.ResetModified01">
            <summary>Sets the stub of ConfigurationSection.ResetModified()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.SerializeElementXmlWriterBoolean">
            <summary>Sets the stub of ConfigurationElement.SerializeElement(XmlWriter writer, Boolean serializeCollectionKey)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.SerializeSectionConfigurationElementStringConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationSection.SerializeSection(ConfigurationElement parentElement, String name, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.SerializeToXmlElementXmlWriterString">
            <summary>Sets the stub of ConfigurationElement.SerializeToXmlElement(XmlWriter writer, String elementName)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.SetReadOnly">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.SetReadOnly01">
            <summary>Sets the stub of ConfigurationElement.SetReadOnly()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.ShouldSerializeElementInTargetVersionConfigurationElementStringFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeElementInTargetVersion(ConfigurationElement element, String elementName, FrameworkName targetFramework)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.ShouldSerializePropertyInTargetVersionConfigurationPropertyStringFrameworkNameConfigurationElement">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializePropertyInTargetVersion(ConfigurationProperty property, String propertyName, FrameworkName targetFramework, ConfigurationElement parentConfigurationElement)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.ShouldSerializeSectionInTargetVersionFrameworkName">
            <summary>Sets the stub of ConfigurationSection.ShouldSerializeSectionInTargetVersion(FrameworkName targetFramework)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.UnmergeConfigurationElementConfigurationElementConfigurationSaveMode">
            <summary>Sets the stub of ConfigurationElement.Unmerge(ConfigurationElement sourceElement, ConfigurationElement parentElement, ConfigurationSaveMode saveMode)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.ElementProperty">
            <summary>Sets the stub of ConfigurationElement.get_ElementProperty()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Configuration.Fakes.StubMessagingElement.Properties">
            <summary>Sets the stub of ConfigurationElement.get_Properties()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Fakes.ShimReporting">
            <summary>Shim type of DotNetOpenAuth.Reporting</summary>
        </member>
        <member name="M:DotNetOpenAuth.Fakes.ShimReporting.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Fakes.ShimReporting.#ctor(DotNetOpenAuth.Reporting)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Fakes.ShimReporting.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Fakes.ShimReporting.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.Constructor">
            <summary>Sets the shim of Reporting.Reporting()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.DemuxLogMessageString">
            <summary>Sets the shim of Reporting.DemuxLogMessage(String line)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.EnabledGet">
            <summary>Sets the shim of Reporting.get_Enabled()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.EnabledSetBoolean">
            <summary>Sets the shim of Reporting.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.GetIsolatedStorage">
            <summary>Sets the shim of Reporting.GetIsolatedStorage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.GetOrCreateOriginIdentity">
            <summary>Sets the shim of Reporting.GetOrCreateOriginIdentity()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.GetReport">
            <summary>Sets the shim of Reporting.GetReport()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.Initialize">
            <summary>Sets the shim of Reporting.Initialize()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.RecordEventOccurrenceObjectString">
            <summary>Sets the shim of Reporting.RecordEventOccurrence(Object eventNameByObjectType, String category)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.RecordEventOccurrenceStringString">
            <summary>Sets the shim of Reporting.RecordEventOccurrence(String eventName, String category)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.RecordFeatureAndDependencyUseObjectObject">
            <summary>Sets the shim of Reporting.RecordFeatureAndDependencyUse(Object value, Object dependency1)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.RecordFeatureAndDependencyUseObjectObjectObject">
            <summary>Sets the shim of Reporting.RecordFeatureAndDependencyUse(Object value, Object dependency1, Object dependency2)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.RecordFeatureUseObject">
            <summary>Sets the shim of Reporting.RecordFeatureUse(Object value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.RecordFeatureUseString">
            <summary>Sets the shim of Reporting.RecordFeatureUse(String feature)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.RecordRequestStatisticsHttpRequestBase">
            <summary>Sets the shim of Reporting.RecordRequestStatistics(HttpRequestBase request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.SanitizeFileNameString">
            <summary>Sets the shim of Reporting.SanitizeFileName(String fileName)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.SendStats">
            <summary>Sets the shim of Reporting.SendStats()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.SendStatsAsync">
            <summary>Sets the shim of Reporting.SendStatsAsync()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.StaticConstructor">
            <summary>Sets the shim of Reporting.Reporting()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting.Touch">
            <summary>Sets the shim of Reporting.Touch()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.ShimReporting._SendStatsAsyncb__8Object">
            <summary>Sets the shim of Reporting.&lt;SendStatsAsync&gt;b__8(Object state)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Fakes.ShimReporting.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:DotNetOpenAuth.Fakes.StubIEmbeddedResourceRetrieval">
            <summary>Stub type of DotNetOpenAuth.IEmbeddedResourceRetrieval</summary>
        </member>
        <member name="M:DotNetOpenAuth.Fakes.StubIEmbeddedResourceRetrieval.#ctor">
            <summary>Initializes a new instance of type StubIEmbeddedResourceRetrieval</summary>
        </member>
        <member name="M:DotNetOpenAuth.Fakes.StubIEmbeddedResourceRetrieval.dnoac::DotNetOpenAuth#IEmbeddedResourceRetrieval#GetWebResourceUrl(System.Type,System.String)">
            <summary>Sets the stub of IEmbeddedResourceRetrieval.GetWebResourceUrl(Type someTypeInResourceAssembly, String manifestResourceName)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Fakes.StubIEmbeddedResourceRetrieval.GetWebResourceUrlTypeString">
            <summary>Sets the stub of IEmbeddedResourceRetrieval.GetWebResourceUrl(Type someTypeInResourceAssembly, String manifestResourceName)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Fakes.StubReporting">
            <summary>Stub type of DotNetOpenAuth.Reporting</summary>
        </member>
        <member name="M:DotNetOpenAuth.Fakes.StubReporting.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Fakes.StubReporting.InitializeStub">
            <summary>Initializes a new instance of type StubReporting</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.StubReporting.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.StubReporting.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Fakes.StubReporting.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper">
            <summary>Shim type of DotNetOpenAuth.Messaging.Bindings.AsymmetricCryptoKeyStoreWrapper</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.#ctor(DotNetOpenAuth.Messaging.Bindings.AsymmetricCryptoKeyStoreWrapper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.Bind(DotNetOpenAuth.Messaging.Bindings.ICryptoKeyStore)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.ConstructorICryptoKeyStoreRSACryptoServiceProvider">
            <summary>Sets the shim of AsymmetricCryptoKeyStoreWrapper.AsymmetricCryptoKeyStoreWrapper(ICryptoKeyStore dataStore, RSACryptoServiceProvider asymmetricCrypto)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.DecryptStringStringCryptoKey">
            <summary>Sets the shim of AsymmetricCryptoKeyStoreWrapper.Decrypt(String bucket, String handle, CryptoKey encryptedCryptoKey)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.GetKeyStringString">
            <summary>Sets the shim of AsymmetricCryptoKeyStoreWrapper.GetKey(String bucket, String handle)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.GetKeysString">
            <summary>Sets the shim of AsymmetricCryptoKeyStoreWrapper.GetKeys(String bucket)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.RemoveKeyStringString">
            <summary>Sets the shim of AsymmetricCryptoKeyStoreWrapper.RemoveKey(String bucket, String handle)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.StoreKeyStringStringCryptoKey">
            <summary>Sets the shim of AsymmetricCryptoKeyStoreWrapper.StoreKey(String bucket, String handle, CryptoKey decryptedCryptoKey)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.AllInstances.DecryptStringStringCryptoKey">
            <summary>Sets the shim of AsymmetricCryptoKeyStoreWrapper.Decrypt(String bucket, String handle, CryptoKey encryptedCryptoKey)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.AllInstances.GetKeyStringString">
            <summary>Sets the shim of AsymmetricCryptoKeyStoreWrapper.GetKey(String bucket, String handle)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.AllInstances.GetKeysString">
            <summary>Sets the shim of AsymmetricCryptoKeyStoreWrapper.GetKeys(String bucket)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.AllInstances.RemoveKeyStringString">
            <summary>Sets the shim of AsymmetricCryptoKeyStoreWrapper.RemoveKey(String bucket, String handle)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimAsymmetricCryptoKeyStoreWrapper.AllInstances.StoreKeyStringStringCryptoKey">
            <summary>Sets the shim of AsymmetricCryptoKeyStoreWrapper.StoreKey(String bucket, String handle, CryptoKey decryptedCryptoKey)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey">
            <summary>Shim type of DotNetOpenAuth.Messaging.Bindings.CryptoKey</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.#ctor(DotNetOpenAuth.Messaging.Bindings.CryptoKey)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.ConstructorByteArrayDateTime">
            <summary>Sets the shim of CryptoKey.CryptoKey(Byte[] key, DateTime expiresUtc)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.EqualsObject">
            <summary>Sets the shim of CryptoKey.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.ExpiresUtcGet">
            <summary>Sets the shim of CryptoKey.get_ExpiresUtc()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.GetHashCode">
            <summary>Sets the shim of CryptoKey.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.KeyGet">
            <summary>Sets the shim of CryptoKey.get_Key()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.AllInstances.EqualsObject">
            <summary>Sets the shim of CryptoKey.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.AllInstances.ExpiresUtcGet">
            <summary>Sets the shim of CryptoKey.get_ExpiresUtc()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.AllInstances.GetHashCode01">
            <summary>Sets the shim of CryptoKey.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKey.AllInstances.KeyGet">
            <summary>Sets the shim of CryptoKey.get_Key()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKeyCollisionException">
            <summary>Shim type of DotNetOpenAuth.Messaging.Bindings.CryptoKeyCollisionException</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKeyCollisionException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKeyCollisionException.#ctor(DotNetOpenAuth.Messaging.Bindings.CryptoKeyCollisionException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKeyCollisionException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKeyCollisionException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKeyCollisionException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKeyCollisionException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKeyCollisionException.Constructor">
            <summary>Sets the shim of CryptoKeyCollisionException.CryptoKeyCollisionException()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKeyCollisionException.ConstructorException">
            <summary>Sets the shim of CryptoKeyCollisionException.CryptoKeyCollisionException(Exception inner)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKeyCollisionException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of CryptoKeyCollisionException.CryptoKeyCollisionException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Bindings.Fakes.ShimCryptoKeyCollisionException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Bindings.Fakes.StubAsymmetricCryptoKeyStoreWrapper">
            <summary>Stub type of DotNetOpenAuth.Messaging.Bindings.AsymmetricCryptoKeyStoreWrapper</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubAsymmetricCryptoKeyStoreWrapper.#ctor(DotNetOpenAuth.Messaging.Bindings.ICryptoKeyStore,System.Security.Cryptography.RSACryptoServiceProvider)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubAsymmetricCryptoKeyStoreWrapper.InitializeStub">
            <summary>Initializes a new instance of type StubAsymmetricCryptoKeyStoreWrapper</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubAsymmetricCryptoKeyStoreWrapper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubAsymmetricCryptoKeyStoreWrapper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubAsymmetricCryptoKeyStoreWrapper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKey">
            <summary>Stub type of DotNetOpenAuth.Messaging.Bindings.CryptoKey</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKey.#ctor(System.Byte[],System.DateTime)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKey.Equals(System.Object)">
            <summary>Sets the stub of CryptoKey.Equals(Object obj)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKey.EqualsObject">
            <summary>Sets the stub of CryptoKey.Equals(Object obj)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKey.GetHashCode">
            <summary>Sets the stub of CryptoKey.GetHashCode()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKey.GetHashCode01">
            <summary>Sets the stub of CryptoKey.GetHashCode()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKey.InitializeStub">
            <summary>Initializes a new instance of type StubCryptoKey</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKey.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKey.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKey.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException">
            <summary>Stub type of DotNetOpenAuth.Messaging.Bindings.CryptoKeyCollisionException</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.#ctor(System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubCryptoKeyCollisionException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubCryptoKeyCollisionException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of ArgumentException.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.InitializeStub">
            <summary>Initializes a new instance of type StubCryptoKeyCollisionException</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.MessageGet">
            <summary>Sets the stub of ArgumentException.get_Message()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.ParamNameGet">
            <summary>Sets the stub of ArgumentException.get_ParamName()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.Message">
            <summary>Sets the stub of ArgumentException.get_Message()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.ParamName">
            <summary>Sets the stub of ArgumentException.get_ParamName()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Bindings.Fakes.StubCryptoKeyCollisionException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Bindings.Fakes.StubICryptoKeyStore">
            <summary>Stub type of DotNetOpenAuth.Messaging.Bindings.ICryptoKeyStore</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubICryptoKeyStore.#ctor">
            <summary>Initializes a new instance of type StubICryptoKeyStore</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubICryptoKeyStore.dnoac::DotNetOpenAuth#Messaging#Bindings#ICryptoKeyStore#GetKey(System.String,System.String)">
            <summary>Sets the stub of ICryptoKeyStore.GetKey(String bucket, String handle)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubICryptoKeyStore.dnoac::DotNetOpenAuth#Messaging#Bindings#ICryptoKeyStore#GetKeys(System.String)">
            <summary>Sets the stub of ICryptoKeyStore.GetKeys(String bucket)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubICryptoKeyStore.dnoac::DotNetOpenAuth#Messaging#Bindings#ICryptoKeyStore#RemoveKey(System.String,System.String)">
            <summary>Sets the stub of ICryptoKeyStore.RemoveKey(String bucket, String handle)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubICryptoKeyStore.dnoac::DotNetOpenAuth#Messaging#Bindings#ICryptoKeyStore#StoreKey(System.String,System.String,DotNetOpenAuth.Messaging.Bindings.CryptoKey)">
            <summary>Sets the stub of ICryptoKeyStore.StoreKey(String bucket, String handle, CryptoKey key)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubICryptoKeyStore.GetKeyStringString">
            <summary>Sets the stub of ICryptoKeyStore.GetKey(String bucket, String handle)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubICryptoKeyStore.GetKeysString">
            <summary>Sets the stub of ICryptoKeyStore.GetKeys(String bucket)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubICryptoKeyStore.RemoveKeyStringString">
            <summary>Sets the stub of ICryptoKeyStore.RemoveKey(String bucket, String handle)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubICryptoKeyStore.StoreKeyStringStringCryptoKey">
            <summary>Sets the stub of ICryptoKeyStore.StoreKey(String bucket, String handle, CryptoKey key)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Bindings.Fakes.StubINonceStore">
            <summary>Stub type of DotNetOpenAuth.Messaging.Bindings.INonceStore</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubINonceStore.#ctor">
            <summary>Initializes a new instance of type StubINonceStore</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Bindings.Fakes.StubINonceStore.dnoac::DotNetOpenAuth#Messaging#Bindings#INonceStore#StoreNonce(System.String,System.String,System.DateTime)">
            <summary>Sets the stub of INonceStore.StoreNonce(String context, String nonce, DateTime timestampUtc)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Bindings.Fakes.StubINonceStore.StoreNonceStringStringDateTime">
            <summary>Sets the stub of INonceStore.StoreNonce(String context, String nonce, DateTime timestampUtc)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimChannel">
            <summary>Shim type of DotNetOpenAuth.Messaging.Channel</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimChannel.#ctor(DotNetOpenAuth.Messaging.Channel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimChannel.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.ApplyMessageTemplateIMessageOutgoingWebResponse">
            <summary>Sets the shim of Channel.ApplyMessageTemplate(IMessage message, OutgoingWebResponse response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.BindingElementOutgoingMessageApplicationOrderMessageProtectionsMessageProtections">
            <summary>Sets the shim of Channel.BindingElementOutgoingMessageApplicationOrder(MessageProtections protection1, MessageProtections protection2)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.BindingElementsGet">
            <summary>Sets the shim of Channel.get_BindingElements()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.CachePolicyGet">
            <summary>Sets the shim of Channel.get_CachePolicy()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.CachePolicySetRequestCachePolicy">
            <summary>Sets the shim of Channel.set_CachePolicy(RequestCachePolicy value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.ConstructorIMessageFactoryIChannelBindingElementArray">
            <summary>Sets the shim of Channel.Channel(IMessageFactory messageTypeProvider, IChannelBindingElement[] bindingElements)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.Create301RedirectResponseIDirectedProtocolMessageIDictionaryOfStringStringBoolean">
            <summary>Sets the shim of Channel.Create301RedirectResponse(IDirectedProtocolMessage message, IDictionary`2&lt;String,String&gt; fields, Boolean payloadInFragment)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.CreateFormPostResponseIDirectedProtocolMessageIDictionaryOfStringString">
            <summary>Sets the shim of Channel.CreateFormPostResponse(IDirectedProtocolMessage message, IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.CreateHttpRequestIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.CreateHttpRequest(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.CreateHttpRequestTestHookIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.CreateHttpRequestTestHook(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.CustomizeBindingElementOrderIEnumerableOfIChannelBindingElementIEnumerableOfIChannelBindingElement">
            <summary>Sets the shim of Channel.CustomizeBindingElementOrder(IEnumerable`1&lt;IChannelBindingElement&gt; outgoingOrder, IEnumerable`1&lt;IChannelBindingElement&gt; incomingOrder)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.DeserializeFromJsonString">
            <summary>Sets the shim of Channel.DeserializeFromJson(String json)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.Dispose">
            <summary>Sets the shim of Channel.Dispose()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.DisposeBoolean">
            <summary>Sets the shim of Channel.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.EnsureValidMessagePartsIProtocolMessage">
            <summary>Sets the shim of Channel.EnsureValidMessageParts(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.FilterReceivedFieldsIDictionaryOfStringString">
            <summary>Sets the shim of Channel.FilterReceivedFields(IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.GetDirectResponseHttpWebRequest">
            <summary>Sets the shim of Channel.GetDirectResponse(HttpWebRequest webRequest)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.GetHttpContext">
            <summary>Sets the shim of Channel.GetHttpContext()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.GetRequestFromContext">
            <summary>Sets the shim of Channel.GetRequestFromContext()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.HttpMethodHasEntityString">
            <summary>Sets the shim of Channel.HttpMethodHasEntity(String httpMethod)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.IncomingBindingElementsGet">
            <summary>Sets the shim of Channel.get_IncomingBindingElements()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.InitializeRequestAsDeleteIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.InitializeRequestAsDelete(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.InitializeRequestAsGetIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.InitializeRequestAsGet(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.InitializeRequestAsHeadIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.InitializeRequestAsHead(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.InitializeRequestAsPostIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.InitializeRequestAsPost(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.InitializeRequestAsPutIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.InitializeRequestAsPut(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.IsBindingElementOrderValidIEnumerableOfIChannelBindingElement">
            <summary>Sets the shim of Channel.IsBindingElementOrderValid(IEnumerable`1&lt;IChannelBindingElement&gt; order)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.IsDisposedGet">
            <summary>Sets the shim of Channel.get_IsDisposed()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.IsDisposedSetBoolean">
            <summary>Sets the shim of Channel.set_IsDisposed(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.MaximumIndirectMessageUrlLengthGet">
            <summary>Sets the shim of Channel.get_MaximumIndirectMessageUrlLength()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.MaximumIndirectMessageUrlLengthSetInt32">
            <summary>Sets the shim of Channel.set_MaximumIndirectMessageUrlLength(Int32 value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.MessageFactoryGet">
            <summary>Sets the shim of Channel.get_MessageFactory()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.MessageFactorySetIMessageFactory">
            <summary>Sets the shim of Channel.set_MessageFactory(IMessageFactory value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.MessageFactoryTestHookGet">
            <summary>Sets the shim of Channel.get_MessageFactoryTestHook()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.OnReceivingDirectResponseIncomingWebResponseIDirectResponseProtocolMessage">
            <summary>Sets the shim of Channel.OnReceivingDirectResponse(IncomingWebResponse response, IDirectResponseProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.OnSendingIProtocolMessage">
            <summary>Sets the shim of Channel.OnSending(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.OutgoingBindingElementsGet">
            <summary>Sets the shim of Channel.get_OutgoingBindingElements()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.PrepareDirectResponseTestHookIProtocolMessage">
            <summary>Sets the shim of Channel.PrepareDirectResponseTestHook(IProtocolMessage response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.PrepareIndirectResponseIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.PrepareIndirectResponse(IDirectedProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.PrepareResponseIProtocolMessage">
            <summary>Sets the shim of Channel.PrepareResponse(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.ProcessIncomingMessageIProtocolMessage">
            <summary>Sets the shim of Channel.ProcessIncomingMessage(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.ProcessIncomingMessageTestHookIProtocolMessage">
            <summary>Sets the shim of Channel.ProcessIncomingMessageTestHook(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.ProcessOutgoingMessageIProtocolMessage">
            <summary>Sets the shim of Channel.ProcessOutgoingMessage(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.ProcessOutgoingMessageTestHookIProtocolMessage">
            <summary>Sets the shim of Channel.ProcessOutgoingMessageTestHook(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.ReadFromRequest">
            <summary>Sets the shim of Channel.ReadFromRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.ReadFromRequestCoreHttpRequestBase">
            <summary>Sets the shim of Channel.ReadFromRequestCore(HttpRequestBase request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.ReadFromRequestHttpRequestBase">
            <summary>Sets the shim of Channel.ReadFromRequest(HttpRequestBase httpRequest)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.ReadFromResponseCoreTestHookIncomingWebResponse">
            <summary>Sets the shim of Channel.ReadFromResponseCoreTestHook(IncomingWebResponse response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.ReceiveDictionaryOfStringStringMessageReceivingEndpoint">
            <summary>Sets the shim of Channel.Receive(Dictionary`2&lt;String,String&gt; fields, MessageReceivingEndpoint recipient)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.RequestCoreIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.RequestCore(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.RequestIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.Request(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.RespondIProtocolMessage">
            <summary>Sets the shim of Channel.Respond(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.SendIProtocolMessage">
            <summary>Sets the shim of Channel.Send(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.SendParametersInEntityAsMultipartHttpWebRequestIEnumerableOfMultipartPostPart">
            <summary>Sets the shim of Channel.SendParametersInEntityAsMultipart(HttpWebRequest httpRequest, IEnumerable`1&lt;MultipartPostPart&gt; fields)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.SendParametersInEntityHttpWebRequestIDictionaryOfStringString">
            <summary>Sets the shim of Channel.SendParametersInEntity(HttpWebRequest httpRequest, IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.SendingAddEventHandlerOfChannelEventArgs">
            <summary>Sets the shim of Channel.add_Sending(EventHandler`1&lt;ChannelEventArgs&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.SendingRemoveEventHandlerOfChannelEventArgs">
            <summary>Sets the shim of Channel.remove_Sending(EventHandler`1&lt;ChannelEventArgs&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.SerializeAsJsonIMessage">
            <summary>Sets the shim of Channel.SerializeAsJson(IMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.StaticConstructor">
            <summary>Sets the shim of Channel.Channel()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.ValidateAndPrepareBindingElementsIEnumerableOfIChannelBindingElement">
            <summary>Sets the shim of Channel.ValidateAndPrepareBindingElements(IEnumerable`1&lt;IChannelBindingElement&gt; elements)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.WebRequestHandlerGet">
            <summary>Sets the shim of Channel.get_WebRequestHandler()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.WebRequestHandlerSetIDirectWebRequestHandler">
            <summary>Sets the shim of Channel.set_WebRequestHandler(IDirectWebRequestHandler value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.XmlDictionaryReaderQuotasGet">
            <summary>Sets the shim of Channel.get_XmlDictionaryReaderQuotas()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.XmlDictionaryReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the shim of Channel.set_XmlDictionaryReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel._InitializeRequestAsPostb__3KeyValuePairOfStringString">
            <summary>Sets the shim of Channel.&lt;InitializeRequestAsPost&gt;b__3(KeyValuePair`2&lt;String,String&gt; field)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel._IsBindingElementOrderValidb__fIChannelBindingElement">
            <summary>Sets the shim of Channel.&lt;IsBindingElementOrderValid&gt;b__f(IChannelBindingElement el)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel._ValidateAndPrepareBindingElementsb__5IChannelBindingElement">
            <summary>Sets the shim of Channel.&lt;ValidateAndPrepareBindingElements&gt;b__5(IChannelBindingElement element)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel._ValidateAndPrepareBindingElementsb__6IChannelBindingElement">
            <summary>Sets the shim of Channel.&lt;ValidateAndPrepareBindingElements&gt;b__6(IChannelBindingElement element)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel._ValidateAndPrepareBindingElementsb__8IChannelBindingElement">
            <summary>Sets the shim of Channel.&lt;ValidateAndPrepareBindingElements&gt;b__8(IChannelBindingElement element)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.BindingElementsGet">
            <summary>Sets the shim of Channel.get_BindingElements()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.CachePolicyGet">
            <summary>Sets the shim of Channel.get_CachePolicy()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.CachePolicySetRequestCachePolicy">
            <summary>Sets the shim of Channel.set_CachePolicy(RequestCachePolicy value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.Create301RedirectResponseIDirectedProtocolMessageIDictionaryOfStringStringBoolean">
            <summary>Sets the shim of Channel.Create301RedirectResponse(IDirectedProtocolMessage message, IDictionary`2&lt;String,String&gt; fields, Boolean payloadInFragment)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.CreateFormPostResponseIDirectedProtocolMessageIDictionaryOfStringString">
            <summary>Sets the shim of Channel.CreateFormPostResponse(IDirectedProtocolMessage message, IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.CreateHttpRequestIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.CreateHttpRequest(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.CreateHttpRequestTestHookIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.CreateHttpRequestTestHook(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.CustomizeBindingElementOrderIEnumerableOfIChannelBindingElementIEnumerableOfIChannelBindingElement">
            <summary>Sets the shim of Channel.CustomizeBindingElementOrder(IEnumerable`1&lt;IChannelBindingElement&gt; outgoingOrder, IEnumerable`1&lt;IChannelBindingElement&gt; incomingOrder)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.DeserializeFromJsonString">
            <summary>Sets the shim of Channel.DeserializeFromJson(String json)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.Dispose">
            <summary>Sets the shim of Channel.Dispose()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.DisposeBoolean">
            <summary>Sets the shim of Channel.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.EnsureValidMessagePartsIProtocolMessage">
            <summary>Sets the shim of Channel.EnsureValidMessageParts(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.FilterReceivedFieldsIDictionaryOfStringString">
            <summary>Sets the shim of Channel.FilterReceivedFields(IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.GetDirectResponseHttpWebRequest">
            <summary>Sets the shim of Channel.GetDirectResponse(HttpWebRequest webRequest)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.GetHttpContext">
            <summary>Sets the shim of Channel.GetHttpContext()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.GetRequestFromContext">
            <summary>Sets the shim of Channel.GetRequestFromContext()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.IncomingBindingElementsGet">
            <summary>Sets the shim of Channel.get_IncomingBindingElements()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.InitializeRequestAsDeleteIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.InitializeRequestAsDelete(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.InitializeRequestAsGetIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.InitializeRequestAsGet(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.InitializeRequestAsHeadIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.InitializeRequestAsHead(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.InitializeRequestAsPostIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.InitializeRequestAsPost(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.InitializeRequestAsPutIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.InitializeRequestAsPut(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.IsBindingElementOrderValidIEnumerableOfIChannelBindingElement">
            <summary>Sets the shim of Channel.IsBindingElementOrderValid(IEnumerable`1&lt;IChannelBindingElement&gt; order)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.IsDisposedGet">
            <summary>Sets the shim of Channel.get_IsDisposed()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.IsDisposedSetBoolean">
            <summary>Sets the shim of Channel.set_IsDisposed(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.MaximumIndirectMessageUrlLengthGet">
            <summary>Sets the shim of Channel.get_MaximumIndirectMessageUrlLength()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.MaximumIndirectMessageUrlLengthSetInt32">
            <summary>Sets the shim of Channel.set_MaximumIndirectMessageUrlLength(Int32 value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.MessageFactoryGet">
            <summary>Sets the shim of Channel.get_MessageFactory()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.MessageFactorySetIMessageFactory">
            <summary>Sets the shim of Channel.set_MessageFactory(IMessageFactory value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.MessageFactoryTestHookGet">
            <summary>Sets the shim of Channel.get_MessageFactoryTestHook()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.OnReceivingDirectResponseIncomingWebResponseIDirectResponseProtocolMessage">
            <summary>Sets the shim of Channel.OnReceivingDirectResponse(IncomingWebResponse response, IDirectResponseProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.OnSendingIProtocolMessage">
            <summary>Sets the shim of Channel.OnSending(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.OutgoingBindingElementsGet">
            <summary>Sets the shim of Channel.get_OutgoingBindingElements()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.PrepareDirectResponseTestHookIProtocolMessage">
            <summary>Sets the shim of Channel.PrepareDirectResponseTestHook(IProtocolMessage response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.PrepareIndirectResponseIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.PrepareIndirectResponse(IDirectedProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.PrepareResponseIProtocolMessage">
            <summary>Sets the shim of Channel.PrepareResponse(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.ProcessIncomingMessageIProtocolMessage">
            <summary>Sets the shim of Channel.ProcessIncomingMessage(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.ProcessIncomingMessageTestHookIProtocolMessage">
            <summary>Sets the shim of Channel.ProcessIncomingMessageTestHook(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.ProcessOutgoingMessageIProtocolMessage">
            <summary>Sets the shim of Channel.ProcessOutgoingMessage(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.ProcessOutgoingMessageTestHookIProtocolMessage">
            <summary>Sets the shim of Channel.ProcessOutgoingMessageTestHook(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.ReadFromRequest">
            <summary>Sets the shim of Channel.ReadFromRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.ReadFromRequestCoreHttpRequestBase">
            <summary>Sets the shim of Channel.ReadFromRequestCore(HttpRequestBase request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.ReadFromRequestHttpRequestBase">
            <summary>Sets the shim of Channel.ReadFromRequest(HttpRequestBase httpRequest)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.ReadFromResponseCoreTestHookIncomingWebResponse">
            <summary>Sets the shim of Channel.ReadFromResponseCoreTestHook(IncomingWebResponse response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.ReceiveDictionaryOfStringStringMessageReceivingEndpoint">
            <summary>Sets the shim of Channel.Receive(Dictionary`2&lt;String,String&gt; fields, MessageReceivingEndpoint recipient)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.RequestCoreIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.RequestCore(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.RequestIDirectedProtocolMessage">
            <summary>Sets the shim of Channel.Request(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.RespondIProtocolMessage">
            <summary>Sets the shim of Channel.Respond(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.SendIProtocolMessage">
            <summary>Sets the shim of Channel.Send(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.SendParametersInEntityAsMultipartHttpWebRequestIEnumerableOfMultipartPostPart">
            <summary>Sets the shim of Channel.SendParametersInEntityAsMultipart(HttpWebRequest httpRequest, IEnumerable`1&lt;MultipartPostPart&gt; fields)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.SendParametersInEntityHttpWebRequestIDictionaryOfStringString">
            <summary>Sets the shim of Channel.SendParametersInEntity(HttpWebRequest httpRequest, IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.SendingAddEventHandlerOfChannelEventArgs">
            <summary>Sets the shim of Channel.add_Sending(EventHandler`1&lt;ChannelEventArgs&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.SendingRemoveEventHandlerOfChannelEventArgs">
            <summary>Sets the shim of Channel.remove_Sending(EventHandler`1&lt;ChannelEventArgs&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.SerializeAsJsonIMessage">
            <summary>Sets the shim of Channel.SerializeAsJson(IMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.WebRequestHandlerGet">
            <summary>Sets the shim of Channel.get_WebRequestHandler()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.WebRequestHandlerSetIDirectWebRequestHandler">
            <summary>Sets the shim of Channel.set_WebRequestHandler(IDirectWebRequestHandler value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.XmlDictionaryReaderQuotasGet">
            <summary>Sets the shim of Channel.get_XmlDictionaryReaderQuotas()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances.XmlDictionaryReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the shim of Channel.set_XmlDictionaryReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannel.AllInstances._IsBindingElementOrderValidb__fIChannelBindingElement">
            <summary>Sets the shim of Channel.&lt;IsBindingElementOrderValid&gt;b__f(IChannelBindingElement el)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimChannelEventArgs">
            <summary>Shim type of DotNetOpenAuth.Messaging.ChannelEventArgs</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimChannelEventArgs.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimChannelEventArgs.#ctor(DotNetOpenAuth.Messaging.ChannelEventArgs)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimChannelEventArgs.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimChannelEventArgs.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannelEventArgs.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannelEventArgs.ConstructorIProtocolMessage">
            <summary>Sets the shim of ChannelEventArgs.ChannelEventArgs(IProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannelEventArgs.MessageGet">
            <summary>Sets the shim of ChannelEventArgs.get_Message()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannelEventArgs.MessageSetIProtocolMessage">
            <summary>Sets the shim of ChannelEventArgs.set_Message(IProtocolMessage value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimChannelEventArgs.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannelEventArgs.AllInstances.MessageGet">
            <summary>Sets the shim of ChannelEventArgs.get_Message()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimChannelEventArgs.AllInstances.MessageSetIProtocolMessage">
            <summary>Sets the shim of ChannelEventArgs.set_Message(IProtocolMessage value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimEnumerableCacheExtensions">
            <summary>Shim type of DotNetOpenAuth.Messaging.EnumerableCacheExtensions</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimEnumerableCacheExtensions.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimEnumerableCacheExtensions.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimEnumerableCacheExtensions.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimEnumerableCacheExtensions.CacheGeneratedResultsOf1IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of EnumerableCacheExtensions.CacheGeneratedResults(IEnumerable`1&lt;!!0&gt; sequence)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimEnumerableCacheExtensions.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo">
            <summary>Shim type of DotNetOpenAuth.Messaging.HttpRequestInfo</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.#ctor(DotNetOpenAuth.Messaging.HttpRequestInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.ConstructorHttpListenerRequest">
            <summary>Sets the shim of HttpRequestInfo.HttpRequestInfo(HttpListenerRequest listenerRequest)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.ConstructorHttpRequestMessagePropertyUri">
            <summary>Sets the shim of HttpRequestInfo.HttpRequestInfo(HttpRequestMessageProperty request, Uri requestUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.ConstructorStringUriNameValueCollectionNameValueCollection">
            <summary>Sets the shim of HttpRequestInfo.HttpRequestInfo(String httpMethod, Uri requestUri, NameValueCollection form, NameValueCollection headers)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.ConstructorStringUriNameValueCollectionStream">
            <summary>Sets the shim of HttpRequestInfo.HttpRequestInfo(String httpMethod, Uri requestUri, NameValueCollection headers, Stream inputStream)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.CreateHttpListenerRequest">
            <summary>Sets the shim of HttpRequestInfo.Create(HttpListenerRequest listenerRequest)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.CreateHttpRequestMessagePropertyUri">
            <summary>Sets the shim of HttpRequestInfo.Create(HttpRequestMessageProperty request, Uri requestUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.CreateStringUriNameValueCollectionNameValueCollection">
            <summary>Sets the shim of HttpRequestInfo.Create(String httpMethod, Uri requestUri, NameValueCollection form, NameValueCollection headers)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.CreateStringUriNameValueCollectionStream">
            <summary>Sets the shim of HttpRequestInfo.Create(String httpMethod, Uri requestUri, NameValueCollection headers, Stream inputStream)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.FormGet">
            <summary>Sets the shim of HttpRequestInfo.get_Form()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.HeadersGet">
            <summary>Sets the shim of HttpRequestInfo.get_Headers()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.HttpMethodGet">
            <summary>Sets the shim of HttpRequestInfo.get_HttpMethod()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.ParseFormDataStringNameValueCollectionStream">
            <summary>Sets the shim of HttpRequestInfo.ParseFormData(String httpMethod, NameValueCollection headers, Stream inputStream)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.QueryStringGet">
            <summary>Sets the shim of HttpRequestInfo.get_QueryString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.RawUrlGet">
            <summary>Sets the shim of HttpRequestInfo.get_RawUrl()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.ServerVariablesGet">
            <summary>Sets the shim of HttpRequestInfo.get_ServerVariables()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.UrlGet">
            <summary>Sets the shim of HttpRequestInfo.get_Url()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.AllInstances.FormGet">
            <summary>Sets the shim of HttpRequestInfo.get_Form()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.AllInstances.HeadersGet">
            <summary>Sets the shim of HttpRequestInfo.get_Headers()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.AllInstances.HttpMethodGet">
            <summary>Sets the shim of HttpRequestInfo.get_HttpMethod()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.AllInstances.QueryStringGet">
            <summary>Sets the shim of HttpRequestInfo.get_QueryString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.AllInstances.RawUrlGet">
            <summary>Sets the shim of HttpRequestInfo.get_RawUrl()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.AllInstances.ServerVariablesGet">
            <summary>Sets the shim of HttpRequestInfo.get_ServerVariables()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimHttpRequestInfo.AllInstances.UrlGet">
            <summary>Sets the shim of HttpRequestInfo.get_Url()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimIHttpDirectResponseContract">
            <summary>Shim type of DotNetOpenAuth.Messaging.IHttpDirectResponseContract</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimIHttpDirectResponseContract.#ctor(DotNetOpenAuth.Messaging.IHttpDirectResponseContract)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimIHttpDirectResponseContract.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimIHttpDirectResponseContract.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimIHttpDirectResponseContract.Bind(DotNetOpenAuth.Messaging.IHttpDirectResponse)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIHttpDirectResponseContract.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIHttpDirectResponseContract.Constructor">
            <summary>Sets the shim of IHttpDirectResponseContract.IHttpDirectResponseContract()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIHttpDirectResponseContract.HeadersDotNetOpenAuthMessagingIHttpDirectResponseget">
            <summary>Sets the shim of IHttpDirectResponseContract.DotNetOpenAuth.Messaging.IHttpDirectResponse.get_Headers()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIHttpDirectResponseContract.HttpStatusCodeDotNetOpenAuthMessagingIHttpDirectResponseget">
            <summary>Sets the shim of IHttpDirectResponseContract.DotNetOpenAuth.Messaging.IHttpDirectResponse.get_HttpStatusCode()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimIHttpDirectResponseContract.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIHttpDirectResponseContract.AllInstances.HeadersDotNetOpenAuthMessagingIHttpDirectResponseget">
            <summary>Sets the shim of IHttpDirectResponseContract.DotNetOpenAuth.Messaging.IHttpDirectResponse.get_Headers()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIHttpDirectResponseContract.AllInstances.HttpStatusCodeDotNetOpenAuthMessagingIHttpDirectResponseget">
            <summary>Sets the shim of IHttpDirectResponseContract.DotNetOpenAuth.Messaging.IHttpDirectResponse.get_HttpStatusCode()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse">
            <summary>Shim type of DotNetOpenAuth.Messaging.IncomingWebResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.#ctor(DotNetOpenAuth.Messaging.IncomingWebResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.Constructor">
            <summary>Sets the shim of IncomingWebResponse.IncomingWebResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.ConstructorUriHttpWebResponse">
            <summary>Sets the shim of IncomingWebResponse.IncomingWebResponse(Uri requestUri, HttpWebResponse response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.ConstructorUriUriWebHeaderCollectionHttpStatusCodeStringString">
            <summary>Sets the shim of IncomingWebResponse.IncomingWebResponse(Uri requestUri, Uri responseUri, WebHeaderCollection headers, HttpStatusCode statusCode, String contentType, String contentEncoding)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.ContentEncodingGet">
            <summary>Sets the shim of IncomingWebResponse.get_ContentEncoding()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.ContentEncodingSetString">
            <summary>Sets the shim of IncomingWebResponse.set_ContentEncoding(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.ContentTypeGet">
            <summary>Sets the shim of IncomingWebResponse.get_ContentType()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.ContentTypeSetContentType">
            <summary>Sets the shim of IncomingWebResponse.set_ContentType(ContentType value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.Dispose">
            <summary>Sets the shim of IncomingWebResponse.Dispose()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.DisposeBoolean">
            <summary>Sets the shim of IncomingWebResponse.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.FinalUriGet">
            <summary>Sets the shim of IncomingWebResponse.get_FinalUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.FinalUriSetUri">
            <summary>Sets the shim of IncomingWebResponse.set_FinalUri(Uri value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.HeadersGet">
            <summary>Sets the shim of IncomingWebResponse.get_Headers()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.HeadersSetWebHeaderCollection">
            <summary>Sets the shim of IncomingWebResponse.set_Headers(WebHeaderCollection value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.RequestUriGet">
            <summary>Sets the shim of IncomingWebResponse.get_RequestUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.RequestUriSetUri">
            <summary>Sets the shim of IncomingWebResponse.set_RequestUri(Uri value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.StatusGet">
            <summary>Sets the shim of IncomingWebResponse.get_Status()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.StatusSetHttpStatusCode">
            <summary>Sets the shim of IncomingWebResponse.set_Status(HttpStatusCode value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.ToString">
            <summary>Sets the shim of IncomingWebResponse.ToString()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.ContentEncodingGet">
            <summary>Sets the shim of IncomingWebResponse.get_ContentEncoding()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.ContentEncodingSetString">
            <summary>Sets the shim of IncomingWebResponse.set_ContentEncoding(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.ContentTypeGet">
            <summary>Sets the shim of IncomingWebResponse.get_ContentType()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.ContentTypeSetContentType">
            <summary>Sets the shim of IncomingWebResponse.set_ContentType(ContentType value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.Dispose">
            <summary>Sets the shim of IncomingWebResponse.Dispose()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.DisposeBoolean">
            <summary>Sets the shim of IncomingWebResponse.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.FinalUriGet">
            <summary>Sets the shim of IncomingWebResponse.get_FinalUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.FinalUriSetUri">
            <summary>Sets the shim of IncomingWebResponse.set_FinalUri(Uri value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.HeadersGet">
            <summary>Sets the shim of IncomingWebResponse.get_Headers()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.HeadersSetWebHeaderCollection">
            <summary>Sets the shim of IncomingWebResponse.set_Headers(WebHeaderCollection value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.RequestUriGet">
            <summary>Sets the shim of IncomingWebResponse.get_RequestUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.RequestUriSetUri">
            <summary>Sets the shim of IncomingWebResponse.set_RequestUri(Uri value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.StatusGet">
            <summary>Sets the shim of IncomingWebResponse.get_Status()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.StatusSetHttpStatusCode">
            <summary>Sets the shim of IncomingWebResponse.set_Status(HttpStatusCode value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimIncomingWebResponse.AllInstances.ToString01">
            <summary>Sets the shim of IncomingWebResponse.ToString()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute">
            <summary>Shim type of DotNetOpenAuth.Messaging.MessagePartAttribute</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.#ctor(DotNetOpenAuth.Messaging.MessagePartAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllowEmptyGet">
            <summary>Sets the shim of MessagePartAttribute.get_AllowEmpty()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllowEmptySetBoolean">
            <summary>Sets the shim of MessagePartAttribute.set_AllowEmpty(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.Constructor">
            <summary>Sets the shim of MessagePartAttribute.MessagePartAttribute()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.ConstructorString">
            <summary>Sets the shim of MessagePartAttribute.MessagePartAttribute(String name)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.EncoderGet">
            <summary>Sets the shim of MessagePartAttribute.get_Encoder()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.EncoderSetType">
            <summary>Sets the shim of MessagePartAttribute.set_Encoder(Type value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.IsRequiredGet">
            <summary>Sets the shim of MessagePartAttribute.get_IsRequired()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.IsRequiredSetBoolean">
            <summary>Sets the shim of MessagePartAttribute.set_IsRequired(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.MaxVersionGet">
            <summary>Sets the shim of MessagePartAttribute.get_MaxVersion()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.MaxVersionSetString">
            <summary>Sets the shim of MessagePartAttribute.set_MaxVersion(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.MaxVersionValueGet">
            <summary>Sets the shim of MessagePartAttribute.get_MaxVersionValue()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.MaxVersionValueSetVersion">
            <summary>Sets the shim of MessagePartAttribute.set_MaxVersionValue(Version value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.MinVersionGet">
            <summary>Sets the shim of MessagePartAttribute.get_MinVersion()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.MinVersionSetString">
            <summary>Sets the shim of MessagePartAttribute.set_MinVersion(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.MinVersionValueGet">
            <summary>Sets the shim of MessagePartAttribute.get_MinVersionValue()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.MinVersionValueSetVersion">
            <summary>Sets the shim of MessagePartAttribute.set_MinVersionValue(Version value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.NameGet">
            <summary>Sets the shim of MessagePartAttribute.get_Name()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.NameSetString">
            <summary>Sets the shim of MessagePartAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.RequiredProtectionGet">
            <summary>Sets the shim of MessagePartAttribute.get_RequiredProtection()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.RequiredProtectionSetProtectionLevel">
            <summary>Sets the shim of MessagePartAttribute.set_RequiredProtection(ProtectionLevel value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.AllowEmptyGet">
            <summary>Sets the shim of MessagePartAttribute.get_AllowEmpty()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.AllowEmptySetBoolean">
            <summary>Sets the shim of MessagePartAttribute.set_AllowEmpty(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.EncoderGet">
            <summary>Sets the shim of MessagePartAttribute.get_Encoder()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.EncoderSetType">
            <summary>Sets the shim of MessagePartAttribute.set_Encoder(Type value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.IsRequiredGet">
            <summary>Sets the shim of MessagePartAttribute.get_IsRequired()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.IsRequiredSetBoolean">
            <summary>Sets the shim of MessagePartAttribute.set_IsRequired(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.MaxVersionGet">
            <summary>Sets the shim of MessagePartAttribute.get_MaxVersion()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.MaxVersionSetString">
            <summary>Sets the shim of MessagePartAttribute.set_MaxVersion(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.MaxVersionValueGet">
            <summary>Sets the shim of MessagePartAttribute.get_MaxVersionValue()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.MaxVersionValueSetVersion">
            <summary>Sets the shim of MessagePartAttribute.set_MaxVersionValue(Version value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.MinVersionGet">
            <summary>Sets the shim of MessagePartAttribute.get_MinVersion()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.MinVersionSetString">
            <summary>Sets the shim of MessagePartAttribute.set_MinVersion(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.MinVersionValueGet">
            <summary>Sets the shim of MessagePartAttribute.get_MinVersionValue()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.MinVersionValueSetVersion">
            <summary>Sets the shim of MessagePartAttribute.set_MinVersionValue(Version value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.NameGet">
            <summary>Sets the shim of MessagePartAttribute.get_Name()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.NameSetString">
            <summary>Sets the shim of MessagePartAttribute.set_Name(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.RequiredProtectionGet">
            <summary>Sets the shim of MessagePartAttribute.get_RequiredProtection()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagePartAttribute.AllInstances.RequiredProtectionSetProtectionLevel">
            <summary>Sets the shim of MessagePartAttribute.set_RequiredProtection(ProtectionLevel value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint">
            <summary>Shim type of DotNetOpenAuth.Messaging.MessageReceivingEndpoint</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.#ctor(DotNetOpenAuth.Messaging.MessageReceivingEndpoint)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.AllowedMethodsGet">
            <summary>Sets the shim of MessageReceivingEndpoint.get_AllowedMethods()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.AllowedMethodsSetHttpDeliveryMethods">
            <summary>Sets the shim of MessageReceivingEndpoint.set_AllowedMethods(HttpDeliveryMethods value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.ConstructorStringHttpDeliveryMethods">
            <summary>Sets the shim of MessageReceivingEndpoint.MessageReceivingEndpoint(String locationUri, HttpDeliveryMethods method)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.ConstructorUriHttpDeliveryMethods">
            <summary>Sets the shim of MessageReceivingEndpoint.MessageReceivingEndpoint(Uri location, HttpDeliveryMethods method)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.LocationGet">
            <summary>Sets the shim of MessageReceivingEndpoint.get_Location()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.LocationSetUri">
            <summary>Sets the shim of MessageReceivingEndpoint.set_Location(Uri value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.AllInstances.AllowedMethodsGet">
            <summary>Sets the shim of MessageReceivingEndpoint.get_AllowedMethods()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.AllInstances.AllowedMethodsSetHttpDeliveryMethods">
            <summary>Sets the shim of MessageReceivingEndpoint.set_AllowedMethods(HttpDeliveryMethods value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.AllInstances.LocationGet">
            <summary>Sets the shim of MessageReceivingEndpoint.get_Location()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessageReceivingEndpoint.AllInstances.LocationSetUri">
            <summary>Sets the shim of MessageReceivingEndpoint.set_Location(Uri value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities">
            <summary>Shim type of DotNetOpenAuth.Messaging.MessagingUtilities</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.AddRangeOf1ICollectionOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of MessagingUtilities.AddRange(ICollection`1&lt;!!0&gt; collection, IEnumerable`1&lt;!!0&gt; values)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.AreEquivalentOf1IEnumerableOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Boolean})">
            <summary>Sets the shim of MessagingUtilities.AreEquivalent(IEnumerable`1&lt;!!0&gt; sequence1, IEnumerable`1&lt;!!0&gt; sequence2)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.AreEquivalentOf1M0ArrayM0Array``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0[],``0[],System.Boolean})">
            <summary>Sets the shim of MessagingUtilities.AreEquivalent(!!0[] first, !!0[] second)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.AreEquivalentOf2IDictionaryOfM0M1IDictionaryOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1},System.Boolean})">
            <summary>Sets the shim of MessagingUtilities.AreEquivalent(IDictionary`2&lt;!!0,!!1&gt; first, IDictionary`2&lt;!!0,!!1&gt; second)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.AreEquivalentUnorderedOf1ICollectionOfM0ICollectionOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.ICollection{``0},System.Collections.Generic.ICollection{``0},System.Boolean})">
            <summary>Sets the shim of MessagingUtilities.AreEquivalentUnordered(ICollection`1&lt;!!0&gt; first, ICollection`1&lt;!!0&gt; second)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.FlattenOf1IEnumerableOfIEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{``0}},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of MessagingUtilities.Flatten(IEnumerable`1&lt;IEnumerable`1&lt;!!0&gt;&gt; sequence)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.OrderByOf2IEnumerableOfM0FuncOfM0M1ComparisonOfM1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Comparison{``1},System.Linq.IOrderedEnumerable{``0}})">
            <summary>Sets the shim of MessagingUtilities.OrderBy(IEnumerable`1&lt;!!0&gt; source, Func`2&lt;!!0,!!1&gt; keySelector, Comparison`1&lt;!!1&gt; comparer)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ResetContentsOf1ICollectionOfM0IEnumerableOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of MessagingUtilities.ResetContents(ICollection`1&lt;!!0&gt; collection, IEnumerable`1&lt;!!0&gt; values)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ToDictionaryOf2IEnumerableOfKeyValuePairOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.Dictionary{``0,``1}})">
            <summary>Sets the shim of MessagingUtilities.ToDictionary(IEnumerable`1&lt;KeyValuePair`2&lt;!!0,!!1&gt;&gt; sequence)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities._ToDictionaryb__21Of2KeyValuePairOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.KeyValuePair{``0,``1},``0})">
            <summary>Sets the shim of MessagingUtilities.&lt;ToDictionary&gt;b__21(KeyValuePair`2&lt;!!0,!!1&gt; pair)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities._ToDictionaryb__22Of2KeyValuePairOfM0M1``2(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.KeyValuePair{``0,``1},``1})">
            <summary>Sets the shim of MessagingUtilities.&lt;ToDictionary&gt;b__22(KeyValuePair`2&lt;!!0,!!1&gt; pair)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.AppendAndReplaceQueryArgsUriBuilderIEnumerableOfKeyValuePairOfStringString">
            <summary>Sets the shim of MessagingUtilities.AppendAndReplaceQueryArgs(UriBuilder builder, IEnumerable`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; args)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.AppendFragmentArgsUriBuilderIEnumerableOfKeyValuePairOfStringString">
            <summary>Sets the shim of MessagingUtilities.AppendFragmentArgs(UriBuilder builder, IEnumerable`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; args)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.AppendQueryArgsUriBuilderIEnumerableOfKeyValuePairOfStringString">
            <summary>Sets the shim of MessagingUtilities.AppendQueryArgs(UriBuilder builder, IEnumerable`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; args)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.AppendQueryArgumentUriBuilderStringString">
            <summary>Sets the shim of MessagingUtilities.AppendQueryArgument(UriBuilder builder, String name, String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ApplyHeadersToResponseWebHeaderCollectionHttpListenerResponse">
            <summary>Sets the shim of MessagingUtilities.ApplyHeadersToResponse(WebHeaderCollection headers, HttpListenerResponse response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ApplyHeadersToResponseWebHeaderCollectionHttpResponseBase">
            <summary>Sets the shim of MessagingUtilities.ApplyHeadersToResponse(WebHeaderCollection headers, HttpResponseBase response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.AreEquivalentConstantTimeByteArrayByteArray">
            <summary>Sets the shim of MessagingUtilities.AreEquivalentConstantTime(Byte[] first, Byte[] second)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.AsActionResultOutgoingWebResponse">
            <summary>Sets the shim of MessagingUtilities.AsActionResult(OutgoingWebResponse response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.AssembleAuthorizationHeaderStringIEnumerableOfKeyValuePairOfStringString">
            <summary>Sets the shim of MessagingUtilities.AssembleAuthorizationHeader(String scheme, IEnumerable`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; fields)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.CloneHttpWebRequest">
            <summary>Sets the shim of MessagingUtilities.Clone(HttpWebRequest request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.CloneHttpWebRequestUri">
            <summary>Sets the shim of MessagingUtilities.Clone(HttpWebRequest request, Uri newRequestUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.CombineKeyHandleAndPayloadStringString">
            <summary>Sets the shim of MessagingUtilities.CombineKeyHandleAndPayload(String handle, String payload)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.CompressByteArray">
            <summary>Sets the shim of MessagingUtilities.Compress(Byte[] buffer)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ComputeHashHashAlgorithmIDictionaryOfStringStringEncoding">
            <summary>Sets the shim of MessagingUtilities.ComputeHash(HashAlgorithm algorithm, IDictionary`2&lt;String,String&gt; data, Encoding encoding)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ComputeHashHashAlgorithmIEnumerableOfKeyValuePairOfStringStringEncoding">
            <summary>Sets the shim of MessagingUtilities.ComputeHash(HashAlgorithm algorithm, IEnumerable`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; sortedData, Encoding encoding)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ComputeHashHashAlgorithmStringEncoding">
            <summary>Sets the shim of MessagingUtilities.ComputeHash(HashAlgorithm algorithm, String value, Encoding encoding)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ConvertToBase64WebSafeStringByteArray">
            <summary>Sets the shim of MessagingUtilities.ConvertToBase64WebSafeString(Byte[] data)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.CopyUpToStreamStreamInt32">
            <summary>Sets the shim of MessagingUtilities.CopyUpTo(Stream copyFrom, Stream copyTo, Int32 maximumBytesToCopy)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.CreateJsonObjectIEnumerableOfKeyValuePairOfStringStringBoolean">
            <summary>Sets the shim of MessagingUtilities.CreateJsonObject(IEnumerable`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; namesAndValues, Boolean valuesPreEncoded)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.CreateQueryStringIEnumerableOfKeyValuePairOfStringString">
            <summary>Sets the shim of MessagingUtilities.CreateQueryString(IEnumerable`1&lt;KeyValuePair`2&lt;String,String&gt;&gt; args)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.CreateSnapshotStream">
            <summary>Sets the shim of MessagingUtilities.CreateSnapshot(Stream copyFrom)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.CreateSymmetricAlgorithmByteArray">
            <summary>Sets the shim of MessagingUtilities.CreateSymmetricAlgorithm(Byte[] key)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.CutToSecondDateTime">
            <summary>Sets the shim of MessagingUtilities.CutToSecond(DateTime value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.DecompressByteArray">
            <summary>Sets the shim of MessagingUtilities.Decompress(Byte[] buffer)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.DecryptByteArrayByteArray">
            <summary>Sets the shim of MessagingUtilities.Decrypt(Byte[] buffer, Byte[] key)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.DecryptStringByteArray">
            <summary>Sets the shim of MessagingUtilities.Decrypt(String cipherText, Byte[] key)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.DecryptWithRandomSymmetricKeyRSACryptoServiceProviderByteArray">
            <summary>Sets the shim of MessagingUtilities.DecryptWithRandomSymmetricKey(RSACryptoServiceProvider crypto, Byte[] buffer)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.EncryptByteArrayByteArray">
            <summary>Sets the shim of MessagingUtilities.Encrypt(Byte[] buffer, Byte[] key)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.EncryptStringByteArray">
            <summary>Sets the shim of MessagingUtilities.Encrypt(String plainText, Byte[] key)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.EncryptWithRandomSymmetricKeyRSACryptoServiceProviderByteArray">
            <summary>Sets the shim of MessagingUtilities.EncryptWithRandomSymmetricKey(RSACryptoServiceProvider crypto, Byte[] buffer)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.EqualsConstantTimeStringString">
            <summary>Sets the shim of MessagingUtilities.EqualsConstantTime(String value1, String value2)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.EqualsTimeSpanTimeSpanTimeSpan">
            <summary>Sets the shim of MessagingUtilities.Equals(TimeSpan self, TimeSpan other, TimeSpan marginOfError)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.EscapeUriDataStringRfc3986String">
            <summary>Sets the shim of MessagingUtilities.EscapeUriDataStringRfc3986(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ExtractKeyHandleAndPayloadIProtocolMessageStringStringStringOutStringOut">
            <summary>Sets the shim of MessagingUtilities.ExtractKeyHandleAndPayload(IProtocolMessage containingMessage, String messagePart, String keyHandleAndBlob, String&amp; handle, String&amp; dataBlob)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.FromBase64WebSafeStringString">
            <summary>Sets the shim of MessagingUtilities.FromBase64WebSafeString(String base64WebSafe)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetCryptoRandomDataAsBase64Int32">
            <summary>Sets the shim of MessagingUtilities.GetCryptoRandomDataAsBase64(Int32 binaryLength)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetCryptoRandomDataInt32">
            <summary>Sets the shim of MessagingUtilities.GetCryptoRandomData(Int32 length)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetCurrentKeyICryptoKeyStoreStringTimeSpanInt32">
            <summary>Sets the shim of MessagingUtilities.GetCurrentKey(ICryptoKeyStore cryptoKeyStore, String bucket, TimeSpan minimumRemainingLife, Int32 keySize)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetHttpDeliveryMethodString">
            <summary>Sets the shim of MessagingUtilities.GetHttpDeliveryMethod(String httpVerb)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetHttpVerbHttpDeliveryMethods">
            <summary>Sets the shim of MessagingUtilities.GetHttpVerb(HttpDeliveryMethods httpMethod)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetIsUrlRewrittenHttpRequestBase">
            <summary>Sets the shim of MessagingUtilities.GetIsUrlRewritten(HttpRequestBase request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetNonCryptoRandomDataInt32">
            <summary>Sets the shim of MessagingUtilities.GetNonCryptoRandomData(Int32 length)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetPublicFacingUrlHttpRequestBase">
            <summary>Sets the shim of MessagingUtilities.GetPublicFacingUrl(HttpRequestBase request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetPublicFacingUrlHttpRequestBaseNameValueCollection">
            <summary>Sets the shim of MessagingUtilities.GetPublicFacingUrl(HttpRequestBase request, NameValueCollection serverVariables)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetQueryOrFormHttpRequestBase">
            <summary>Sets the shim of MessagingUtilities.GetQueryOrForm(HttpRequestBase request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetQueryStringBeforeRewritingHttpRequestBase">
            <summary>Sets the shim of MessagingUtilities.GetQueryStringBeforeRewriting(HttpRequestBase request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetRandomStringInt32String">
            <summary>Sets the shim of MessagingUtilities.GetRandomString(Int32 length, String allowableCharacters)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetRecipientHttpRequestBase">
            <summary>Sets the shim of MessagingUtilities.GetRecipient(HttpRequestBase request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetRequestUrlFromContext">
            <summary>Sets the shim of MessagingUtilities.GetRequestUrlFromContext()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.GetSafeJavascriptValueString">
            <summary>Sets the shim of MessagingUtilities.GetSafeJavascriptValue(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.IsDirectResponseIDirectResponseProtocolMessage">
            <summary>Sets the shim of MessagingUtilities.IsDirectResponse(IDirectResponseProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.IsRequestIDirectedProtocolMessage">
            <summary>Sets the shim of MessagingUtilities.IsRequest(IDirectedProtocolMessage message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ParseAuthorizationHeaderStringString">
            <summary>Sets the shim of MessagingUtilities.ParseAuthorizationHeader(String scheme, String authorizationHeader)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.PostMultipartHttpWebRequestIDirectWebRequestHandlerIEnumerableOfMultipartPostPart">
            <summary>Sets the shim of MessagingUtilities.PostMultipart(HttpWebRequest request, IDirectWebRequestHandler requestHandler, IEnumerable`1&lt;MultipartPostPart&gt; parts)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.PostMultipartNoGetResponseHttpWebRequestIDirectWebRequestHandlerIEnumerableOfMultipartPostPart">
            <summary>Sets the shim of MessagingUtilities.PostMultipartNoGetResponse(HttpWebRequest request, IDirectWebRequestHandler requestHandler, IEnumerable`1&lt;MultipartPostPart&gt; parts)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ReadBufferBinaryReader">
            <summary>Sets the shim of MessagingUtilities.ReadBuffer(BinaryReader reader)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.StaticConstructor">
            <summary>Sets the shim of MessagingUtilities.MessagingUtilities()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.StripQueryArgumentsWithPrefixUriString">
            <summary>Sets the shim of MessagingUtilities.StripQueryArgumentsWithPrefix(Uri uri, String prefix)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ToDictionaryNameValueCollection">
            <summary>Sets the shim of MessagingUtilities.ToDictionary(NameValueCollection nvc)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ToDictionaryNameValueCollectionBoolean">
            <summary>Sets the shim of MessagingUtilities.ToDictionary(NameValueCollection nvc, Boolean throwOnNullKey)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ToLocalTimeSafeDateTime">
            <summary>Sets the shim of MessagingUtilities.ToLocalTimeSafe(DateTime value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ToNameValueCollectionIDictionaryOfStringString">
            <summary>Sets the shim of MessagingUtilities.ToNameValueCollection(IDictionary`2&lt;String,String&gt; data)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ToStringDescriptiveException">
            <summary>Sets the shim of MessagingUtilities.ToStringDescriptive(Exception exception)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.ToUniversalTimeSafeDateTime">
            <summary>Sets the shim of MessagingUtilities.ToUniversalTimeSafe(DateTime value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMessagingUtilities.WriteBufferBinaryWriterByteArray">
            <summary>Sets the shim of MessagingUtilities.WriteBuffer(BinaryWriter writer, Byte[] buffer)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart">
            <summary>Shim type of DotNetOpenAuth.Messaging.MultipartPostPart</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.#ctor(DotNetOpenAuth.Messaging.MultipartPostPart)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.ConstructorString">
            <summary>Sets the shim of MultipartPostPart.MultipartPostPart(String contentDisposition)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.ContentAttributesGet">
            <summary>Sets the shim of MultipartPostPart.get_ContentAttributes()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.ContentAttributesSetIDictionaryOfStringString">
            <summary>Sets the shim of MultipartPostPart.set_ContentAttributes(IDictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.ContentDispositionGet">
            <summary>Sets the shim of MultipartPostPart.get_ContentDisposition()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.ContentDispositionSetString">
            <summary>Sets the shim of MultipartPostPart.set_ContentDisposition(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.ContentGet">
            <summary>Sets the shim of MultipartPostPart.get_Content()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.ContentSetStream">
            <summary>Sets the shim of MultipartPostPart.set_Content(Stream value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.CreateFormFilePartStringStringString">
            <summary>Sets the shim of MultipartPostPart.CreateFormFilePart(String name, String filePath, String contentType)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.CreateFormFilePartStringStringStringStream">
            <summary>Sets the shim of MultipartPostPart.CreateFormFilePart(String name, String fileName, String contentType, Stream content)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.CreateFormPartStringString">
            <summary>Sets the shim of MultipartPostPart.CreateFormPart(String name, String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.Dispose">
            <summary>Sets the shim of MultipartPostPart.Dispose()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.DisposeBoolean">
            <summary>Sets the shim of MultipartPostPart.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.LengthGet">
            <summary>Sets the shim of MultipartPostPart.get_Length()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.PartHeadersGet">
            <summary>Sets the shim of MultipartPostPart.get_PartHeaders()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.PartHeadersSetWebHeaderCollection">
            <summary>Sets the shim of MultipartPostPart.set_PartHeaders(WebHeaderCollection value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.SerializeStreamWriter">
            <summary>Sets the shim of MultipartPostPart.Serialize(StreamWriter streamWriter)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.AllInstances.ContentAttributesGet">
            <summary>Sets the shim of MultipartPostPart.get_ContentAttributes()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.AllInstances.ContentAttributesSetIDictionaryOfStringString">
            <summary>Sets the shim of MultipartPostPart.set_ContentAttributes(IDictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.AllInstances.ContentDispositionGet">
            <summary>Sets the shim of MultipartPostPart.get_ContentDisposition()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.AllInstances.ContentDispositionSetString">
            <summary>Sets the shim of MultipartPostPart.set_ContentDisposition(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.AllInstances.ContentGet">
            <summary>Sets the shim of MultipartPostPart.get_Content()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.AllInstances.ContentSetStream">
            <summary>Sets the shim of MultipartPostPart.set_Content(Stream value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.AllInstances.Dispose">
            <summary>Sets the shim of MultipartPostPart.Dispose()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.AllInstances.DisposeBoolean">
            <summary>Sets the shim of MultipartPostPart.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.AllInstances.LengthGet">
            <summary>Sets the shim of MultipartPostPart.get_Length()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.AllInstances.PartHeadersGet">
            <summary>Sets the shim of MultipartPostPart.get_PartHeaders()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.AllInstances.PartHeadersSetWebHeaderCollection">
            <summary>Sets the shim of MultipartPostPart.set_PartHeaders(WebHeaderCollection value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimMultipartPostPart.AllInstances.SerializeStreamWriter">
            <summary>Sets the shim of MultipartPostPart.Serialize(StreamWriter streamWriter)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse">
            <summary>Shim type of DotNetOpenAuth.Messaging.OutgoingWebResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.#ctor(DotNetOpenAuth.Messaging.OutgoingWebResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.BodyGet">
            <summary>Sets the shim of OutgoingWebResponse.get_Body()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.BodySetString">
            <summary>Sets the shim of OutgoingWebResponse.set_Body(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.Constructor">
            <summary>Sets the shim of OutgoingWebResponse.OutgoingWebResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.ConstructorHttpWebResponseInt32">
            <summary>Sets the shim of OutgoingWebResponse.OutgoingWebResponse(HttpWebResponse response, Int32 maximumBytesToRead)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.GetDirectUriRequestChannel">
            <summary>Sets the shim of OutgoingWebResponse.GetDirectUriRequest(Channel channel)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.GetResponseReader">
            <summary>Sets the shim of OutgoingWebResponse.GetResponseReader()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.HeadersGet">
            <summary>Sets the shim of OutgoingWebResponse.get_Headers()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.HeadersSetWebHeaderCollection">
            <summary>Sets the shim of OutgoingWebResponse.set_Headers(WebHeaderCollection value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.IsResponseTruncatedGet">
            <summary>Sets the shim of OutgoingWebResponse.get_IsResponseTruncated()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.IsResponseTruncatedSetBoolean">
            <summary>Sets the shim of OutgoingWebResponse.set_IsResponseTruncated(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.OriginalMessageGet">
            <summary>Sets the shim of OutgoingWebResponse.get_OriginalMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.OriginalMessageSetIProtocolMessage">
            <summary>Sets the shim of OutgoingWebResponse.set_OriginalMessage(IProtocolMessage value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.Respond">
            <summary>Sets the shim of OutgoingWebResponse.Respond()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.RespondHttpContext">
            <summary>Sets the shim of OutgoingWebResponse.Respond(HttpContext context)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.RespondHttpContextBase">
            <summary>Sets the shim of OutgoingWebResponse.Respond(HttpContextBase context)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.RespondHttpContextBaseBoolean">
            <summary>Sets the shim of OutgoingWebResponse.Respond(HttpContextBase context, Boolean endRequest)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.RespondHttpContextBoolean">
            <summary>Sets the shim of OutgoingWebResponse.Respond(HttpContext context, Boolean endRequest)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.ResponseStreamGet">
            <summary>Sets the shim of OutgoingWebResponse.get_ResponseStream()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.ResponseStreamSetStream">
            <summary>Sets the shim of OutgoingWebResponse.set_ResponseStream(Stream value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.Send">
            <summary>Sets the shim of OutgoingWebResponse.Send()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.SendHttpContext">
            <summary>Sets the shim of OutgoingWebResponse.Send(HttpContext context)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.SendHttpContextBase">
            <summary>Sets the shim of OutgoingWebResponse.Send(HttpContextBase context)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.SendHttpListenerResponse">
            <summary>Sets the shim of OutgoingWebResponse.Send(HttpListenerResponse response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.SetResponseStringContentType">
            <summary>Sets the shim of OutgoingWebResponse.SetResponse(String body, ContentType contentType)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.StaticConstructor">
            <summary>Sets the shim of OutgoingWebResponse.OutgoingWebResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.StatusGet">
            <summary>Sets the shim of OutgoingWebResponse.get_Status()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.StatusSetHttpStatusCode">
            <summary>Sets the shim of OutgoingWebResponse.set_Status(HttpStatusCode value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.BodyGet">
            <summary>Sets the shim of OutgoingWebResponse.get_Body()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.BodySetString">
            <summary>Sets the shim of OutgoingWebResponse.set_Body(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.GetDirectUriRequestChannel">
            <summary>Sets the shim of OutgoingWebResponse.GetDirectUriRequest(Channel channel)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.GetResponseReader">
            <summary>Sets the shim of OutgoingWebResponse.GetResponseReader()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.HeadersGet">
            <summary>Sets the shim of OutgoingWebResponse.get_Headers()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.HeadersSetWebHeaderCollection">
            <summary>Sets the shim of OutgoingWebResponse.set_Headers(WebHeaderCollection value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.IsResponseTruncatedGet">
            <summary>Sets the shim of OutgoingWebResponse.get_IsResponseTruncated()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.IsResponseTruncatedSetBoolean">
            <summary>Sets the shim of OutgoingWebResponse.set_IsResponseTruncated(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.OriginalMessageGet">
            <summary>Sets the shim of OutgoingWebResponse.get_OriginalMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.OriginalMessageSetIProtocolMessage">
            <summary>Sets the shim of OutgoingWebResponse.set_OriginalMessage(IProtocolMessage value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.Respond">
            <summary>Sets the shim of OutgoingWebResponse.Respond()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.RespondHttpContext">
            <summary>Sets the shim of OutgoingWebResponse.Respond(HttpContext context)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.RespondHttpContextBase">
            <summary>Sets the shim of OutgoingWebResponse.Respond(HttpContextBase context)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.RespondHttpContextBaseBoolean">
            <summary>Sets the shim of OutgoingWebResponse.Respond(HttpContextBase context, Boolean endRequest)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.RespondHttpContextBoolean">
            <summary>Sets the shim of OutgoingWebResponse.Respond(HttpContext context, Boolean endRequest)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.ResponseStreamGet">
            <summary>Sets the shim of OutgoingWebResponse.get_ResponseStream()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.ResponseStreamSetStream">
            <summary>Sets the shim of OutgoingWebResponse.set_ResponseStream(Stream value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.Send">
            <summary>Sets the shim of OutgoingWebResponse.Send()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.SendHttpContext">
            <summary>Sets the shim of OutgoingWebResponse.Send(HttpContext context)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.SendHttpContextBase">
            <summary>Sets the shim of OutgoingWebResponse.Send(HttpContextBase context)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.SendHttpListenerResponse">
            <summary>Sets the shim of OutgoingWebResponse.Send(HttpListenerResponse response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.SetResponseStringContentType">
            <summary>Sets the shim of OutgoingWebResponse.SetResponse(String body, ContentType contentType)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.StatusGet">
            <summary>Sets the shim of OutgoingWebResponse.get_Status()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimOutgoingWebResponse.AllInstances.StatusSetHttpStatusCode">
            <summary>Sets the shim of OutgoingWebResponse.set_Status(HttpStatusCode value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException">
            <summary>Shim type of DotNetOpenAuth.Messaging.ProtocolException</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.#ctor(DotNetOpenAuth.Messaging.ProtocolException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.Constructor">
            <summary>Sets the shim of ProtocolException.ProtocolException()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ProtocolException.ProtocolException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.ConstructorString">
            <summary>Sets the shim of ProtocolException.ProtocolException(String message)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.ConstructorStringException">
            <summary>Sets the shim of ProtocolException.ProtocolException(String message, Exception inner)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.ConstructorStringIProtocolMessage">
            <summary>Sets the shim of ProtocolException.ProtocolException(String message, IProtocolMessage faultedMessage)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.FaultedMessageGet">
            <summary>Sets the shim of ProtocolException.get_FaultedMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.FaultedMessageSetIProtocolMessage">
            <summary>Sets the shim of ProtocolException.set_FaultedMessage(IProtocolMessage value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.AllInstances.FaultedMessageGet">
            <summary>Sets the shim of ProtocolException.get_FaultedMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimProtocolException.AllInstances.FaultedMessageSetIProtocolMessage">
            <summary>Sets the shim of ProtocolException.set_FaultedMessage(IProtocolMessage value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimStandardMessageFactoryChannel">
            <summary>Shim type of DotNetOpenAuth.Messaging.StandardMessageFactoryChannel</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimStandardMessageFactoryChannel.#ctor(DotNetOpenAuth.Messaging.StandardMessageFactoryChannel)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimStandardMessageFactoryChannel.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimStandardMessageFactoryChannel.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimStandardMessageFactoryChannel.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardMessageFactoryChannel.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardMessageFactoryChannel.ConstructorICollectionOfTypeICollectionOfVersionIChannelBindingElementArray">
            <summary>Sets the shim of StandardMessageFactoryChannel.StandardMessageFactoryChannel(ICollection`1&lt;Type&gt; messageTypes, ICollection`1&lt;Version&gt; versions, IChannelBindingElement[] bindingElements)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardMessageFactoryChannel.MessageFactoryGet">
            <summary>Sets the shim of StandardMessageFactoryChannel.get_MessageFactory()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardMessageFactoryChannel.MessageFactorySetIMessageFactory">
            <summary>Sets the shim of StandardMessageFactoryChannel.set_MessageFactory(IMessageFactory value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimStandardMessageFactoryChannel.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardMessageFactoryChannel.AllInstances.MessageFactoryGet">
            <summary>Sets the shim of StandardMessageFactoryChannel.get_MessageFactory()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardMessageFactoryChannel.AllInstances.MessageFactorySetIMessageFactory">
            <summary>Sets the shim of StandardMessageFactoryChannel.set_MessageFactory(IMessageFactory value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler">
            <summary>Shim type of DotNetOpenAuth.Messaging.StandardWebRequestHandler</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.#ctor(DotNetOpenAuth.Messaging.StandardWebRequestHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.Bind(DotNetOpenAuth.Messaging.IDirectWebRequestHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.CanSupportDirectWebRequestOptions">
            <summary>Sets the shim of StandardWebRequestHandler.CanSupport(DirectWebRequestOptions options)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.Constructor">
            <summary>Sets the shim of StandardWebRequestHandler.StandardWebRequestHandler()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.GetRequestStreamCoreHttpWebRequest">
            <summary>Sets the shim of StandardWebRequestHandler.GetRequestStreamCore(HttpWebRequest request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.GetRequestStreamHttpWebRequest">
            <summary>Sets the shim of StandardWebRequestHandler.GetRequestStream(HttpWebRequest request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.GetRequestStreamHttpWebRequestDirectWebRequestOptions">
            <summary>Sets the shim of StandardWebRequestHandler.GetRequestStream(HttpWebRequest request, DirectWebRequestOptions options)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.GetResponseHttpWebRequest">
            <summary>Sets the shim of StandardWebRequestHandler.GetResponse(HttpWebRequest request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.GetResponseHttpWebRequestDirectWebRequestOptions">
            <summary>Sets the shim of StandardWebRequestHandler.GetResponse(HttpWebRequest request, DirectWebRequestOptions options)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.IsExceptionFrom417ExpectationFailedException">
            <summary>Sets the shim of StandardWebRequestHandler.IsExceptionFrom417ExpectationFailed(Exception ex)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.PrepareRequestHttpWebRequestBoolean">
            <summary>Sets the shim of StandardWebRequestHandler.PrepareRequest(HttpWebRequest request, Boolean preparingPost)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.StaticConstructor">
            <summary>Sets the shim of StandardWebRequestHandler.StandardWebRequestHandler()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.AllInstances.CanSupportDirectWebRequestOptions">
            <summary>Sets the shim of StandardWebRequestHandler.CanSupport(DirectWebRequestOptions options)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.AllInstances.GetRequestStreamHttpWebRequest">
            <summary>Sets the shim of StandardWebRequestHandler.GetRequestStream(HttpWebRequest request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.AllInstances.GetRequestStreamHttpWebRequestDirectWebRequestOptions">
            <summary>Sets the shim of StandardWebRequestHandler.GetRequestStream(HttpWebRequest request, DirectWebRequestOptions options)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.AllInstances.GetResponseHttpWebRequest">
            <summary>Sets the shim of StandardWebRequestHandler.GetResponse(HttpWebRequest request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimStandardWebRequestHandler.AllInstances.GetResponseHttpWebRequestDirectWebRequestOptions">
            <summary>Sets the shim of StandardWebRequestHandler.GetResponse(HttpWebRequest request, DirectWebRequestOptions options)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler">
            <summary>Shim type of DotNetOpenAuth.Messaging.UntrustedWebRequestHandler</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.#ctor(DotNetOpenAuth.Messaging.UntrustedWebRequestHandler)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.Bind(DotNetOpenAuth.Messaging.IDirectWebRequestHandler)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.BlacklistHostsGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_BlacklistHosts()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.BlacklistHostsRegexGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_BlacklistHostsRegex()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.CanSupportDirectWebRequestOptions">
            <summary>Sets the shim of UntrustedWebRequestHandler.CanSupport(DirectWebRequestOptions options)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.Constructor">
            <summary>Sets the shim of UntrustedWebRequestHandler.UntrustedWebRequestHandler()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.ConstructorIDirectWebRequestHandler">
            <summary>Sets the shim of UntrustedWebRequestHandler.UntrustedWebRequestHandler(IDirectWebRequestHandler chainedWebRequestHandler)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.DotNetOpenAuthMessagingIDirectWebRequestHandlerGetRequestStreamHttpWebRequest">
            <summary>Sets the shim of UntrustedWebRequestHandler.DotNetOpenAuth.Messaging.IDirectWebRequestHandler.GetRequestStream(HttpWebRequest request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.DotNetOpenAuthMessagingIDirectWebRequestHandlerGetResponseHttpWebRequest">
            <summary>Sets the shim of UntrustedWebRequestHandler.DotNetOpenAuth.Messaging.IDirectWebRequestHandler.GetResponse(HttpWebRequest request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.EnsureAllowableRequestUriUriBoolean">
            <summary>Sets the shim of UntrustedWebRequestHandler.EnsureAllowableRequestUri(Uri requestUri, Boolean requireSsl)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.GetRequestStreamHttpWebRequestDirectWebRequestOptions">
            <summary>Sets the shim of UntrustedWebRequestHandler.GetRequestStream(HttpWebRequest request, DirectWebRequestOptions options)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.GetResponseHttpWebRequestDirectWebRequestOptions">
            <summary>Sets the shim of UntrustedWebRequestHandler.GetResponse(HttpWebRequest request, DirectWebRequestOptions options)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.IsHostBlacklistedString">
            <summary>Sets the shim of UntrustedWebRequestHandler.IsHostBlacklisted(String host)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.IsHostInListStringICollectionOfStringICollectionOfRegex">
            <summary>Sets the shim of UntrustedWebRequestHandler.IsHostInList(String host, ICollection`1&lt;String&gt; stringList, ICollection`1&lt;Regex&gt; regexList)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.IsHostWhitelistedString">
            <summary>Sets the shim of UntrustedWebRequestHandler.IsHostWhitelisted(String host)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.IsIPv6LoopbackIPAddress">
            <summary>Sets the shim of UntrustedWebRequestHandler.IsIPv6Loopback(IPAddress ip)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.IsUriAllowableUri">
            <summary>Sets the shim of UntrustedWebRequestHandler.IsUriAllowable(Uri uri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.MaximumBytesToReadGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_MaximumBytesToRead()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.MaximumBytesToReadSetInt32">
            <summary>Sets the shim of UntrustedWebRequestHandler.set_MaximumBytesToRead(Int32 value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.MaximumRedirectionsGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_MaximumRedirections()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.MaximumRedirectionsSetInt32">
            <summary>Sets the shim of UntrustedWebRequestHandler.set_MaximumRedirections(Int32 value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.PrepareRequestHttpWebRequestBoolean">
            <summary>Sets the shim of UntrustedWebRequestHandler.PrepareRequest(HttpWebRequest request, Boolean preparingPost)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.ReadWriteTimeoutGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_ReadWriteTimeout()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.ReadWriteTimeoutSetTimeSpan">
            <summary>Sets the shim of UntrustedWebRequestHandler.set_ReadWriteTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.TimeoutGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_Timeout()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.TimeoutSetTimeSpan">
            <summary>Sets the shim of UntrustedWebRequestHandler.set_Timeout(TimeSpan value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.WhitelistHostsGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_WhitelistHosts()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.WhitelistHostsRegexGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_WhitelistHostsRegex()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.BlacklistHostsGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_BlacklistHosts()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.BlacklistHostsRegexGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_BlacklistHostsRegex()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.CanSupportDirectWebRequestOptions">
            <summary>Sets the shim of UntrustedWebRequestHandler.CanSupport(DirectWebRequestOptions options)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.DotNetOpenAuthMessagingIDirectWebRequestHandlerGetRequestStreamHttpWebRequest">
            <summary>Sets the shim of UntrustedWebRequestHandler.DotNetOpenAuth.Messaging.IDirectWebRequestHandler.GetRequestStream(HttpWebRequest request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.DotNetOpenAuthMessagingIDirectWebRequestHandlerGetResponseHttpWebRequest">
            <summary>Sets the shim of UntrustedWebRequestHandler.DotNetOpenAuth.Messaging.IDirectWebRequestHandler.GetResponse(HttpWebRequest request)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.EnsureAllowableRequestUriUriBoolean">
            <summary>Sets the shim of UntrustedWebRequestHandler.EnsureAllowableRequestUri(Uri requestUri, Boolean requireSsl)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.GetRequestStreamHttpWebRequestDirectWebRequestOptions">
            <summary>Sets the shim of UntrustedWebRequestHandler.GetRequestStream(HttpWebRequest request, DirectWebRequestOptions options)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.GetResponseHttpWebRequestDirectWebRequestOptions">
            <summary>Sets the shim of UntrustedWebRequestHandler.GetResponse(HttpWebRequest request, DirectWebRequestOptions options)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.IsHostBlacklistedString">
            <summary>Sets the shim of UntrustedWebRequestHandler.IsHostBlacklisted(String host)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.IsHostWhitelistedString">
            <summary>Sets the shim of UntrustedWebRequestHandler.IsHostWhitelisted(String host)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.IsUriAllowableUri">
            <summary>Sets the shim of UntrustedWebRequestHandler.IsUriAllowable(Uri uri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.MaximumBytesToReadGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_MaximumBytesToRead()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.MaximumBytesToReadSetInt32">
            <summary>Sets the shim of UntrustedWebRequestHandler.set_MaximumBytesToRead(Int32 value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.MaximumRedirectionsGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_MaximumRedirections()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.MaximumRedirectionsSetInt32">
            <summary>Sets the shim of UntrustedWebRequestHandler.set_MaximumRedirections(Int32 value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.PrepareRequestHttpWebRequestBoolean">
            <summary>Sets the shim of UntrustedWebRequestHandler.PrepareRequest(HttpWebRequest request, Boolean preparingPost)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.ReadWriteTimeoutGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_ReadWriteTimeout()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.ReadWriteTimeoutSetTimeSpan">
            <summary>Sets the shim of UntrustedWebRequestHandler.set_ReadWriteTimeout(TimeSpan value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.TimeoutGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_Timeout()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.TimeoutSetTimeSpan">
            <summary>Sets the shim of UntrustedWebRequestHandler.set_Timeout(TimeSpan value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.WhitelistHostsGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_WhitelistHosts()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.ShimUntrustedWebRequestHandler.AllInstances.WhitelistHostsRegexGet">
            <summary>Sets the shim of UntrustedWebRequestHandler.get_WhitelistHostsRegex()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubChannel">
            <summary>Stub type of DotNetOpenAuth.Messaging.Channel</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.#ctor(DotNetOpenAuth.Messaging.IMessageFactory,DotNetOpenAuth.Messaging.IChannelBindingElement[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.AttachBackingFieldToMessageFactory">
            <summary>Attaches delegates to emulate StubChannel.MessageFactory as a property with a backing field.</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.AttachBackingFieldToXmlDictionaryReaderQuotas">
            <summary>Attaches delegates to emulate StubChannel.XmlDictionaryReaderQuotas as a property with a backing field.</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.Create301RedirectResponse(DotNetOpenAuth.Messaging.IDirectedProtocolMessage,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>Sets the stub of Channel.Create301RedirectResponse(IDirectedProtocolMessage message, IDictionary`2&lt;String,String&gt; fields, Boolean payloadInFragment)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.Create301RedirectResponseIDirectedProtocolMessageIDictionaryOfStringStringBoolean">
            <summary>Sets the stub of Channel.Create301RedirectResponse(IDirectedProtocolMessage message, IDictionary`2&lt;String,String&gt; fields, Boolean payloadInFragment)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.CreateFormPostResponse(DotNetOpenAuth.Messaging.IDirectedProtocolMessage,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Sets the stub of Channel.CreateFormPostResponse(IDirectedProtocolMessage message, IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.CreateFormPostResponseIDirectedProtocolMessageIDictionaryOfStringString">
            <summary>Sets the stub of Channel.CreateFormPostResponse(IDirectedProtocolMessage message, IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.CreateHttpRequest(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.CreateHttpRequest(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.CreateHttpRequestIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.CreateHttpRequest(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.DeserializeFromJson(System.String)">
            <summary>Sets the stub of Channel.DeserializeFromJson(String json)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.DeserializeFromJsonString">
            <summary>Sets the stub of Channel.DeserializeFromJson(String json)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.Dispose(System.Boolean)">
            <summary>Sets the stub of Channel.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.DisposeBoolean">
            <summary>Sets the stub of Channel.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.FilterReceivedFields(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Sets the stub of Channel.FilterReceivedFields(IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.FilterReceivedFieldsIDictionaryOfStringString">
            <summary>Sets the stub of Channel.FilterReceivedFields(IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.GetDirectResponse(System.Net.HttpWebRequest)">
            <summary>Sets the stub of Channel.GetDirectResponse(HttpWebRequest webRequest)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.GetDirectResponseHttpWebRequest">
            <summary>Sets the stub of Channel.GetDirectResponse(HttpWebRequest webRequest)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.GetHttpContext">
            <summary>Sets the stub of Channel.GetHttpContext()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.GetHttpContext01">
            <summary>Sets the stub of Channel.GetHttpContext()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.GetRequestFromContext">
            <summary>Sets the stub of Channel.GetRequestFromContext()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.GetRequestFromContext01">
            <summary>Sets the stub of Channel.GetRequestFromContext()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.InitializeRequestAsDelete(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.InitializeRequestAsDelete(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.InitializeRequestAsDeleteIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.InitializeRequestAsDelete(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.InitializeRequestAsGet(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.InitializeRequestAsGet(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.InitializeRequestAsGetIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.InitializeRequestAsGet(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.InitializeRequestAsHead(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.InitializeRequestAsHead(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.InitializeRequestAsHeadIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.InitializeRequestAsHead(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.InitializeRequestAsPost(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.InitializeRequestAsPost(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.InitializeRequestAsPostIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.InitializeRequestAsPost(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.InitializeRequestAsPut(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.InitializeRequestAsPut(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.InitializeRequestAsPutIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.InitializeRequestAsPut(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.InitializeStub">
            <summary>Initializes a new instance of type StubChannel</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.MessageFactoryGet">
            <summary>Sets the stub of Channel.get_MessageFactory()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.MessageFactorySetIMessageFactory">
            <summary>Sets the stub of Channel.set_MessageFactory(IMessageFactory value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.OnReceivingDirectResponse(DotNetOpenAuth.Messaging.IncomingWebResponse,DotNetOpenAuth.Messaging.IDirectResponseProtocolMessage)">
            <summary>Sets the stub of Channel.OnReceivingDirectResponse(IncomingWebResponse response, IDirectResponseProtocolMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.OnReceivingDirectResponseIncomingWebResponseIDirectResponseProtocolMessage">
            <summary>Sets the stub of Channel.OnReceivingDirectResponse(IncomingWebResponse response, IDirectResponseProtocolMessage message)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.OnSending(DotNetOpenAuth.Messaging.IProtocolMessage)">
            <summary>Sets the stub of Channel.OnSending(IProtocolMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.OnSendingIProtocolMessage">
            <summary>Sets the stub of Channel.OnSending(IProtocolMessage message)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.PrepareDirectResponse(DotNetOpenAuth.Messaging.IProtocolMessage)">
            <summary>Sets the stub of Channel.PrepareDirectResponse(IProtocolMessage response)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.PrepareDirectResponseIProtocolMessage">
            <summary>Sets the stub of Channel.PrepareDirectResponse(IProtocolMessage response)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.PrepareIndirectResponse(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.PrepareIndirectResponse(IDirectedProtocolMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.PrepareIndirectResponseIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.PrepareIndirectResponse(IDirectedProtocolMessage message)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.ProcessIncomingMessage(DotNetOpenAuth.Messaging.IProtocolMessage)">
            <summary>Sets the stub of Channel.ProcessIncomingMessage(IProtocolMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.ProcessIncomingMessageIProtocolMessage">
            <summary>Sets the stub of Channel.ProcessIncomingMessage(IProtocolMessage message)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.ReadFromRequestCore(System.Web.HttpRequestBase)">
            <summary>Sets the stub of Channel.ReadFromRequestCore(HttpRequestBase request)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.ReadFromRequestCoreHttpRequestBase">
            <summary>Sets the stub of Channel.ReadFromRequestCore(HttpRequestBase request)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.ReadFromResponseCore(DotNetOpenAuth.Messaging.IncomingWebResponse)">
            <summary>Sets the stub of Channel.ReadFromResponseCore(IncomingWebResponse response)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.ReadFromResponseCoreIncomingWebResponse">
            <summary>Sets the stub of Channel.ReadFromResponseCore(IncomingWebResponse response)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.Receive(System.Collections.Generic.Dictionary{System.String,System.String},DotNetOpenAuth.Messaging.MessageReceivingEndpoint)">
            <summary>Sets the stub of Channel.Receive(Dictionary`2&lt;String,String&gt; fields, MessageReceivingEndpoint recipient)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.ReceiveDictionaryOfStringStringMessageReceivingEndpoint">
            <summary>Sets the stub of Channel.Receive(Dictionary`2&lt;String,String&gt; fields, MessageReceivingEndpoint recipient)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.RequestCore(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.RequestCore(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.RequestCoreIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.RequestCore(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubChannel.SerializeAsJson(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Sets the stub of Channel.SerializeAsJson(IMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.SerializeAsJsonIMessage">
            <summary>Sets the stub of Channel.SerializeAsJson(IMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.XmlDictionaryReaderQuotasGet">
            <summary>Sets the stub of Channel.get_XmlDictionaryReaderQuotas()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubChannel.XmlDictionaryReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the stub of Channel.set_XmlDictionaryReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubChannel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubChannel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubChannel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubChannel.MessageFactory">
            <summary>Sets the stub of Channel.get_MessageFactory()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubChannel.XmlDictionaryReaderQuotas">
            <summary>Sets the stub of Channel.get_XmlDictionaryReaderQuotas()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIChannelBindingElement">
            <summary>Stub type of DotNetOpenAuth.Messaging.IChannelBindingElement</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIChannelBindingElement.#ctor">
            <summary>Initializes a new instance of type StubIChannelBindingElement</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIChannelBindingElement.AttachBackingFieldToChannel">
            <summary>Attaches delegates to emulate StubIChannelBindingElement.Channel as a property with a backing field.</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIChannelBindingElement.ChannelGet">
            <summary>Sets the stub of IChannelBindingElement.get_Channel()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIChannelBindingElement.ChannelSetChannel">
            <summary>Sets the stub of IChannelBindingElement.set_Channel(Channel value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIChannelBindingElement.dnoac::DotNetOpenAuth#Messaging#IChannelBindingElement#ProcessIncomingMessage(DotNetOpenAuth.Messaging.IProtocolMessage)">
            <summary>Sets the stub of IChannelBindingElement.ProcessIncomingMessage(IProtocolMessage message)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIChannelBindingElement.dnoac::DotNetOpenAuth#Messaging#IChannelBindingElement#ProcessOutgoingMessage(DotNetOpenAuth.Messaging.IProtocolMessage)">
            <summary>Sets the stub of IChannelBindingElement.ProcessOutgoingMessage(IProtocolMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIChannelBindingElement.ProcessIncomingMessageIProtocolMessage">
            <summary>Sets the stub of IChannelBindingElement.ProcessIncomingMessage(IProtocolMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIChannelBindingElement.ProcessOutgoingMessageIProtocolMessage">
            <summary>Sets the stub of IChannelBindingElement.ProcessOutgoingMessage(IProtocolMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIChannelBindingElement.ProtectionGet">
            <summary>Sets the stub of IChannelBindingElement.get_Protection()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIChannelBindingElement.dnoac::DotNetOpenAuth#Messaging#IChannelBindingElement#Channel">
            <summary>Sets the stub of IChannelBindingElement.get_Channel()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIChannelBindingElement.dnoac::DotNetOpenAuth#Messaging#IChannelBindingElement#Protection">
            <summary>Sets the stub of IChannelBindingElement.get_Protection()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage">
            <summary>Stub type of DotNetOpenAuth.Messaging.IDirectResponseProtocolMessage</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage.#ctor">
            <summary>Initializes a new instance of type StubIDirectResponseProtocolMessage</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage.EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage.ExtraDataGet">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage.OriginatingRequestGet">
            <summary>Sets the stub of IDirectResponseProtocolMessage.get_OriginatingRequest()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage.RequiredProtectionGet">
            <summary>Sets the stub of IProtocolMessage.get_RequiredProtection()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage.TransportGet">
            <summary>Sets the stub of IProtocolMessage.get_Transport()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage.VersionGet">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#ExtraData">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IDirectResponseProtocolMessage#OriginatingRequest">
            <summary>Sets the stub of IDirectResponseProtocolMessage.get_OriginatingRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IProtocolMessage#RequiredProtection">
            <summary>Sets the stub of IProtocolMessage.get_RequiredProtection()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IProtocolMessage#Transport">
            <summary>Sets the stub of IProtocolMessage.get_Transport()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIDirectResponseProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#Version">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIDirectWebRequestHandler">
            <summary>Stub type of DotNetOpenAuth.Messaging.IDirectWebRequestHandler</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIDirectWebRequestHandler.#ctor">
            <summary>Initializes a new instance of type StubIDirectWebRequestHandler</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectWebRequestHandler.CanSupportDirectWebRequestOptions">
            <summary>Sets the stub of IDirectWebRequestHandler.CanSupport(DirectWebRequestOptions options)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIDirectWebRequestHandler.dnoac::DotNetOpenAuth#Messaging#IDirectWebRequestHandler#CanSupport(DotNetOpenAuth.Messaging.DirectWebRequestOptions)">
            <summary>Sets the stub of IDirectWebRequestHandler.CanSupport(DirectWebRequestOptions options)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIDirectWebRequestHandler.dnoac::DotNetOpenAuth#Messaging#IDirectWebRequestHandler#GetRequestStream(System.Net.HttpWebRequest)">
            <summary>Sets the stub of IDirectWebRequestHandler.GetRequestStream(HttpWebRequest request)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIDirectWebRequestHandler.dnoac::DotNetOpenAuth#Messaging#IDirectWebRequestHandler#GetRequestStream(System.Net.HttpWebRequest,DotNetOpenAuth.Messaging.DirectWebRequestOptions)">
            <summary>Sets the stub of IDirectWebRequestHandler.GetRequestStream(HttpWebRequest request, DirectWebRequestOptions options)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIDirectWebRequestHandler.dnoac::DotNetOpenAuth#Messaging#IDirectWebRequestHandler#GetResponse(System.Net.HttpWebRequest)">
            <summary>Sets the stub of IDirectWebRequestHandler.GetResponse(HttpWebRequest request)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIDirectWebRequestHandler.dnoac::DotNetOpenAuth#Messaging#IDirectWebRequestHandler#GetResponse(System.Net.HttpWebRequest,DotNetOpenAuth.Messaging.DirectWebRequestOptions)">
            <summary>Sets the stub of IDirectWebRequestHandler.GetResponse(HttpWebRequest request, DirectWebRequestOptions options)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectWebRequestHandler.GetRequestStreamHttpWebRequest">
            <summary>Sets the stub of IDirectWebRequestHandler.GetRequestStream(HttpWebRequest request)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectWebRequestHandler.GetRequestStreamHttpWebRequestDirectWebRequestOptions">
            <summary>Sets the stub of IDirectWebRequestHandler.GetRequestStream(HttpWebRequest request, DirectWebRequestOptions options)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectWebRequestHandler.GetResponseHttpWebRequest">
            <summary>Sets the stub of IDirectWebRequestHandler.GetResponse(HttpWebRequest request)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectWebRequestHandler.GetResponseHttpWebRequestDirectWebRequestOptions">
            <summary>Sets the stub of IDirectWebRequestHandler.GetResponse(HttpWebRequest request, DirectWebRequestOptions options)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage">
            <summary>Stub type of DotNetOpenAuth.Messaging.IDirectedProtocolMessage</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.#ctor">
            <summary>Initializes a new instance of type StubIDirectedProtocolMessage</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.ExtraDataGet">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.HttpMethodsGet">
            <summary>Sets the stub of IDirectedProtocolMessage.get_HttpMethods()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.RecipientGet">
            <summary>Sets the stub of IDirectedProtocolMessage.get_Recipient()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.RequiredProtectionGet">
            <summary>Sets the stub of IProtocolMessage.get_RequiredProtection()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.TransportGet">
            <summary>Sets the stub of IProtocolMessage.get_Transport()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.VersionGet">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#ExtraData">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IDirectedProtocolMessage#HttpMethods">
            <summary>Sets the stub of IDirectedProtocolMessage.get_HttpMethods()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IDirectedProtocolMessage#Recipient">
            <summary>Sets the stub of IDirectedProtocolMessage.get_Recipient()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IProtocolMessage#RequiredProtection">
            <summary>Sets the stub of IProtocolMessage.get_RequiredProtection()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IProtocolMessage#Transport">
            <summary>Sets the stub of IProtocolMessage.get_Transport()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIDirectedProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#Version">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIExtensionMessage">
            <summary>Stub type of DotNetOpenAuth.Messaging.IExtensionMessage</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIExtensionMessage.#ctor">
            <summary>Initializes a new instance of type StubIExtensionMessage</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIExtensionMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIExtensionMessage.EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIExtensionMessage.ExtraDataGet">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIExtensionMessage.VersionGet">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIExtensionMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#ExtraData">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIExtensionMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#Version">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIHttpDirectResponse">
            <summary>Stub type of DotNetOpenAuth.Messaging.IHttpDirectResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIHttpDirectResponse.#ctor">
            <summary>Initializes a new instance of type StubIHttpDirectResponse</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIHttpDirectResponse.HeadersGet">
            <summary>Sets the stub of IHttpDirectResponse.get_Headers()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIHttpDirectResponse.HttpStatusCodeGet">
            <summary>Sets the stub of IHttpDirectResponse.get_HttpStatusCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIHttpDirectResponse.dnoac::DotNetOpenAuth#Messaging#IHttpDirectResponse#Headers">
            <summary>Sets the stub of IHttpDirectResponse.get_Headers()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIHttpDirectResponse.dnoac::DotNetOpenAuth#Messaging#IHttpDirectResponse#HttpStatusCode">
            <summary>Sets the stub of IHttpDirectResponse.get_HttpStatusCode()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIHttpDirectResponseContract">
            <summary>Stub type of DotNetOpenAuth.Messaging.IHttpDirectResponseContract</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIHttpDirectResponseContract.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIHttpDirectResponseContract.InitializeStub">
            <summary>Initializes a new instance of type StubIHttpDirectResponseContract</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIHttpDirectResponseContract.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIHttpDirectResponseContract.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIHttpDirectResponseContract.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIHttpIndirectResponse">
            <summary>Stub type of DotNetOpenAuth.Messaging.IHttpIndirectResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIHttpIndirectResponse.#ctor">
            <summary>Initializes a new instance of type StubIHttpIndirectResponse</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIHttpIndirectResponse.Include301RedirectPayloadInFragmentGet">
            <summary>Sets the stub of IHttpIndirectResponse.get_Include301RedirectPayloadInFragment()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIHttpIndirectResponse.dnoac::DotNetOpenAuth#Messaging#IHttpIndirectResponse#Include301RedirectPayloadInFragment">
            <summary>Sets the stub of IHttpIndirectResponse.get_Include301RedirectPayloadInFragment()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIMessage">
            <summary>Stub type of DotNetOpenAuth.Messaging.IMessage</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIMessage.#ctor">
            <summary>Initializes a new instance of type StubIMessage</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessage.EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessage.ExtraDataGet">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessage.VersionGet">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#ExtraData">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#Version">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIMessageFactory">
            <summary>Stub type of DotNetOpenAuth.Messaging.IMessageFactory</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIMessageFactory.#ctor">
            <summary>Initializes a new instance of type StubIMessageFactory</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIMessageFactory.dnoac::DotNetOpenAuth#Messaging#IMessageFactory#GetNewRequestMessage(DotNetOpenAuth.Messaging.MessageReceivingEndpoint,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Sets the stub of IMessageFactory.GetNewRequestMessage(MessageReceivingEndpoint recipient, IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIMessageFactory.dnoac::DotNetOpenAuth#Messaging#IMessageFactory#GetNewResponseMessage(DotNetOpenAuth.Messaging.IDirectedProtocolMessage,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Sets the stub of IMessageFactory.GetNewResponseMessage(IDirectedProtocolMessage request, IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessageFactory.GetNewRequestMessageMessageReceivingEndpointIDictionaryOfStringString">
            <summary>Sets the stub of IMessageFactory.GetNewRequestMessage(MessageReceivingEndpoint recipient, IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessageFactory.GetNewResponseMessageIDirectedProtocolMessageIDictionaryOfStringString">
            <summary>Sets the stub of IMessageFactory.GetNewResponseMessage(IDirectedProtocolMessage request, IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIMessageOriginalPayload">
            <summary>Stub type of DotNetOpenAuth.Messaging.IMessageOriginalPayload</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIMessageOriginalPayload.#ctor">
            <summary>Initializes a new instance of type StubIMessageOriginalPayload</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIMessageOriginalPayload.AttachBackingFieldToOriginalPayload">
            <summary>Attaches delegates to emulate StubIMessageOriginalPayload.OriginalPayload as a property with a backing field.</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessageOriginalPayload.OriginalPayloadGet">
            <summary>Sets the stub of IMessageOriginalPayload.get_OriginalPayload()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessageOriginalPayload.OriginalPayloadSetIDictionaryOfStringString">
            <summary>Sets the stub of IMessageOriginalPayload.set_OriginalPayload(IDictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIMessageOriginalPayload.dnoac::DotNetOpenAuth#Messaging#IMessageOriginalPayload#OriginalPayload">
            <summary>Sets the stub of IMessageOriginalPayload.get_OriginalPayload()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData">
            <summary>Stub type of DotNetOpenAuth.Messaging.IMessageWithBinaryData</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.#ctor">
            <summary>Initializes a new instance of type StubIMessageWithBinaryData</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.BinaryDataGet">
            <summary>Sets the stub of IMessageWithBinaryData.get_BinaryData()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.dnoac::DotNetOpenAuth#Messaging#IMessage#EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.ExtraDataGet">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.HttpMethodsGet">
            <summary>Sets the stub of IDirectedProtocolMessage.get_HttpMethods()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.RecipientGet">
            <summary>Sets the stub of IDirectedProtocolMessage.get_Recipient()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.RequiredProtectionGet">
            <summary>Sets the stub of IProtocolMessage.get_RequiredProtection()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.SendAsMultipartGet">
            <summary>Sets the stub of IMessageWithBinaryData.get_SendAsMultipart()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.TransportGet">
            <summary>Sets the stub of IProtocolMessage.get_Transport()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.VersionGet">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.dnoac::DotNetOpenAuth#Messaging#IMessageWithBinaryData#BinaryData">
            <summary>Sets the stub of IMessageWithBinaryData.get_BinaryData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.dnoac::DotNetOpenAuth#Messaging#IMessage#ExtraData">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.dnoac::DotNetOpenAuth#Messaging#IDirectedProtocolMessage#HttpMethods">
            <summary>Sets the stub of IDirectedProtocolMessage.get_HttpMethods()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.dnoac::DotNetOpenAuth#Messaging#IDirectedProtocolMessage#Recipient">
            <summary>Sets the stub of IDirectedProtocolMessage.get_Recipient()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.dnoac::DotNetOpenAuth#Messaging#IProtocolMessage#RequiredProtection">
            <summary>Sets the stub of IProtocolMessage.get_RequiredProtection()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.dnoac::DotNetOpenAuth#Messaging#IMessageWithBinaryData#SendAsMultipart">
            <summary>Sets the stub of IMessageWithBinaryData.get_SendAsMultipart()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.dnoac::DotNetOpenAuth#Messaging#IProtocolMessage#Transport">
            <summary>Sets the stub of IProtocolMessage.get_Transport()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIMessageWithBinaryData.dnoac::DotNetOpenAuth#Messaging#IMessage#Version">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessage">
            <summary>Stub type of DotNetOpenAuth.Messaging.IProtocolMessage</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessage.#ctor">
            <summary>Initializes a new instance of type StubIProtocolMessage</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessage.EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessage.ExtraDataGet">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessage.RequiredProtectionGet">
            <summary>Sets the stub of IProtocolMessage.get_RequiredProtection()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessage.TransportGet">
            <summary>Sets the stub of IProtocolMessage.get_Transport()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessage.VersionGet">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#ExtraData">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IProtocolMessage#RequiredProtection">
            <summary>Sets the stub of IProtocolMessage.get_RequiredProtection()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IProtocolMessage#Transport">
            <summary>Sets the stub of IProtocolMessage.get_Transport()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#Version">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions">
            <summary>Stub type of DotNetOpenAuth.Messaging.IProtocolMessageWithExtensions</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions.#ctor">
            <summary>Initializes a new instance of type StubIProtocolMessageWithExtensions</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions.dnoac::DotNetOpenAuth#Messaging#IMessage#EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions.EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions.ExtensionsGet">
            <summary>Sets the stub of IProtocolMessageWithExtensions.get_Extensions()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions.ExtraDataGet">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions.RequiredProtectionGet">
            <summary>Sets the stub of IProtocolMessage.get_RequiredProtection()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions.TransportGet">
            <summary>Sets the stub of IProtocolMessage.get_Transport()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions.VersionGet">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions.dnoac::DotNetOpenAuth#Messaging#IProtocolMessageWithExtensions#Extensions">
            <summary>Sets the stub of IProtocolMessageWithExtensions.get_Extensions()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions.dnoac::DotNetOpenAuth#Messaging#IMessage#ExtraData">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions.dnoac::DotNetOpenAuth#Messaging#IProtocolMessage#RequiredProtection">
            <summary>Sets the stub of IProtocolMessage.get_RequiredProtection()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions.dnoac::DotNetOpenAuth#Messaging#IProtocolMessage#Transport">
            <summary>Sets the stub of IProtocolMessage.get_Transport()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubIProtocolMessageWithExtensions.dnoac::DotNetOpenAuth#Messaging#IMessage#Version">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage">
            <summary>Stub type of DotNetOpenAuth.Messaging.ITamperResistantProtocolMessage</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.#ctor">
            <summary>Initializes a new instance of type StubITamperResistantProtocolMessage</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.AttachBackingFieldToSignature">
            <summary>Attaches delegates to emulate StubITamperResistantProtocolMessage.Signature as a property with a backing field.</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.ExtraDataGet">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.RequiredProtectionGet">
            <summary>Sets the stub of IProtocolMessage.get_RequiredProtection()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.SignatureGet">
            <summary>Sets the stub of ITamperResistantProtocolMessage.get_Signature()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.SignatureSetString">
            <summary>Sets the stub of ITamperResistantProtocolMessage.set_Signature(String value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.TransportGet">
            <summary>Sets the stub of IProtocolMessage.get_Transport()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.VersionGet">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#ExtraData">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IProtocolMessage#RequiredProtection">
            <summary>Sets the stub of IProtocolMessage.get_RequiredProtection()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.dnoac::DotNetOpenAuth#Messaging#ITamperResistantProtocolMessage#Signature">
            <summary>Sets the stub of ITamperResistantProtocolMessage.get_Signature()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IProtocolMessage#Transport">
            <summary>Sets the stub of IProtocolMessage.get_Transport()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubITamperResistantProtocolMessage.dnoac::DotNetOpenAuth#Messaging#IMessage#Version">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubMessageReceivingEndpoint">
            <summary>Stub type of DotNetOpenAuth.Messaging.MessageReceivingEndpoint</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubMessageReceivingEndpoint.#ctor(System.Uri,DotNetOpenAuth.Messaging.HttpDeliveryMethods)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubMessageReceivingEndpoint.#ctor(System.String,DotNetOpenAuth.Messaging.HttpDeliveryMethods)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubMessageReceivingEndpoint.InitializeStub">
            <summary>Initializes a new instance of type StubMessageReceivingEndpoint</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubMessageReceivingEndpoint.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubMessageReceivingEndpoint.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubMessageReceivingEndpoint.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubMultipartPostPart">
            <summary>Stub type of DotNetOpenAuth.Messaging.MultipartPostPart</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubMultipartPostPart.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubMultipartPostPart.Dispose(System.Boolean)">
            <summary>Sets the stub of MultipartPostPart.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubMultipartPostPart.DisposeBoolean">
            <summary>Sets the stub of MultipartPostPart.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubMultipartPostPart.InitializeStub">
            <summary>Initializes a new instance of type StubMultipartPostPart</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubMultipartPostPart.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubMultipartPostPart.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubMultipartPostPart.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse">
            <summary>Stub type of DotNetOpenAuth.Messaging.OutgoingWebResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.#ctor(System.Net.HttpWebResponse,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.InitializeStub">
            <summary>Initializes a new instance of type StubOutgoingWebResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.Respond">
            <summary>Sets the stub of OutgoingWebResponse.Respond()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.Respond(System.Web.HttpContextBase)">
            <summary>Sets the stub of OutgoingWebResponse.Respond(HttpContextBase context)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.Respond(System.Web.HttpContextBase,System.Boolean)">
            <summary>Sets the stub of OutgoingWebResponse.Respond(HttpContextBase context, Boolean endRequest)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.Respond01">
            <summary>Sets the stub of OutgoingWebResponse.Respond()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.RespondHttpContextBase">
            <summary>Sets the stub of OutgoingWebResponse.Respond(HttpContextBase context)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.RespondHttpContextBaseBoolean">
            <summary>Sets the stub of OutgoingWebResponse.Respond(HttpContextBase context, Boolean endRequest)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.Send">
            <summary>Sets the stub of OutgoingWebResponse.Send()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.Send(System.Net.HttpListenerResponse)">
            <summary>Sets the stub of OutgoingWebResponse.Send(HttpListenerResponse response)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.Send(System.Web.HttpContext)">
            <summary>Sets the stub of OutgoingWebResponse.Send(HttpContext context)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.Send(System.Web.HttpContextBase)">
            <summary>Sets the stub of OutgoingWebResponse.Send(HttpContextBase context)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.Send01">
            <summary>Sets the stub of OutgoingWebResponse.Send()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.SendHttpContext">
            <summary>Sets the stub of OutgoingWebResponse.Send(HttpContext context)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.SendHttpContextBase">
            <summary>Sets the stub of OutgoingWebResponse.Send(HttpContextBase context)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.SendHttpListenerResponse">
            <summary>Sets the stub of OutgoingWebResponse.Send(HttpListenerResponse response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubOutgoingWebResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubProtocolException">
            <summary>Stub type of DotNetOpenAuth.Messaging.ProtocolException</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.#ctor(System.String,DotNetOpenAuth.Messaging.IProtocolMessage)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.AttachBackingFieldToHelpLink">
            <summary>Attaches delegates to emulate StubProtocolException.HelpLink as a property with a backing field.</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.AttachBackingFieldToSource">
            <summary>Attaches delegates to emulate StubProtocolException.Source as a property with a backing field.</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.DataGet">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.GetBaseException">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.GetBaseException01">
            <summary>Sets the stub of Exception.GetBaseException()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the stub of Exception.GetObjectData(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.HelpLinkGet">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.HelpLinkSetString">
            <summary>Sets the stub of Exception.set_HelpLink(String value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.InitializeStub">
            <summary>Initializes a new instance of type StubProtocolException</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.MessageGet">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.SourceGet">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.SourceSetString">
            <summary>Sets the stub of Exception.set_Source(String value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.StackTraceGet">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.ToString">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.ToString01">
            <summary>Sets the stub of Exception.ToString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.Data">
            <summary>Sets the stub of Exception.get_Data()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.HelpLink">
            <summary>Sets the stub of Exception.get_HelpLink()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.Message">
            <summary>Sets the stub of Exception.get_Message()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.Source">
            <summary>Sets the stub of Exception.get_Source()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubProtocolException.StackTrace">
            <summary>Sets the stub of Exception.get_StackTrace()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel">
            <summary>Stub type of DotNetOpenAuth.Messaging.StandardMessageFactoryChannel</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.#ctor(System.Collections.Generic.ICollection{System.Type},System.Collections.Generic.ICollection{System.Version},DotNetOpenAuth.Messaging.IChannelBindingElement[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.AttachBackingFieldToXmlDictionaryReaderQuotas">
            <summary>Attaches delegates to emulate StubStandardMessageFactoryChannel.XmlDictionaryReaderQuotas as a property with a backing field.</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.Create301RedirectResponse(DotNetOpenAuth.Messaging.IDirectedProtocolMessage,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean)">
            <summary>Sets the stub of Channel.Create301RedirectResponse(IDirectedProtocolMessage message, IDictionary`2&lt;String,String&gt; fields, Boolean payloadInFragment)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.Create301RedirectResponseIDirectedProtocolMessageIDictionaryOfStringStringBoolean">
            <summary>Sets the stub of Channel.Create301RedirectResponse(IDirectedProtocolMessage message, IDictionary`2&lt;String,String&gt; fields, Boolean payloadInFragment)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.CreateFormPostResponse(DotNetOpenAuth.Messaging.IDirectedProtocolMessage,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Sets the stub of Channel.CreateFormPostResponse(IDirectedProtocolMessage message, IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.CreateFormPostResponseIDirectedProtocolMessageIDictionaryOfStringString">
            <summary>Sets the stub of Channel.CreateFormPostResponse(IDirectedProtocolMessage message, IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.CreateHttpRequest(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.CreateHttpRequest(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.CreateHttpRequestIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.CreateHttpRequest(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.DeserializeFromJson(System.String)">
            <summary>Sets the stub of Channel.DeserializeFromJson(String json)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.DeserializeFromJsonString">
            <summary>Sets the stub of Channel.DeserializeFromJson(String json)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.Dispose(System.Boolean)">
            <summary>Sets the stub of Channel.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.DisposeBoolean">
            <summary>Sets the stub of Channel.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.FilterReceivedFields(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Sets the stub of Channel.FilterReceivedFields(IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.FilterReceivedFieldsIDictionaryOfStringString">
            <summary>Sets the stub of Channel.FilterReceivedFields(IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.GetDirectResponse(System.Net.HttpWebRequest)">
            <summary>Sets the stub of Channel.GetDirectResponse(HttpWebRequest webRequest)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.GetDirectResponseHttpWebRequest">
            <summary>Sets the stub of Channel.GetDirectResponse(HttpWebRequest webRequest)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.GetHttpContext">
            <summary>Sets the stub of Channel.GetHttpContext()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.GetHttpContext01">
            <summary>Sets the stub of Channel.GetHttpContext()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.GetRequestFromContext">
            <summary>Sets the stub of Channel.GetRequestFromContext()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.GetRequestFromContext01">
            <summary>Sets the stub of Channel.GetRequestFromContext()</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.InitializeRequestAsDelete(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.InitializeRequestAsDelete(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.InitializeRequestAsDeleteIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.InitializeRequestAsDelete(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.InitializeRequestAsGet(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.InitializeRequestAsGet(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.InitializeRequestAsGetIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.InitializeRequestAsGet(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.InitializeRequestAsHead(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.InitializeRequestAsHead(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.InitializeRequestAsHeadIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.InitializeRequestAsHead(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.InitializeRequestAsPost(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.InitializeRequestAsPost(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.InitializeRequestAsPostIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.InitializeRequestAsPost(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.InitializeRequestAsPut(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.InitializeRequestAsPut(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.InitializeRequestAsPutIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.InitializeRequestAsPut(IDirectedProtocolMessage requestMessage)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.InitializeStub">
            <summary>Initializes a new instance of type StubStandardMessageFactoryChannel</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.OnReceivingDirectResponse(DotNetOpenAuth.Messaging.IncomingWebResponse,DotNetOpenAuth.Messaging.IDirectResponseProtocolMessage)">
            <summary>Sets the stub of Channel.OnReceivingDirectResponse(IncomingWebResponse response, IDirectResponseProtocolMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.OnReceivingDirectResponseIncomingWebResponseIDirectResponseProtocolMessage">
            <summary>Sets the stub of Channel.OnReceivingDirectResponse(IncomingWebResponse response, IDirectResponseProtocolMessage message)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.OnSending(DotNetOpenAuth.Messaging.IProtocolMessage)">
            <summary>Sets the stub of Channel.OnSending(IProtocolMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.OnSendingIProtocolMessage">
            <summary>Sets the stub of Channel.OnSending(IProtocolMessage message)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.PrepareDirectResponse(DotNetOpenAuth.Messaging.IProtocolMessage)">
            <summary>Sets the stub of Channel.PrepareDirectResponse(IProtocolMessage response)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.PrepareDirectResponseIProtocolMessage">
            <summary>Sets the stub of Channel.PrepareDirectResponse(IProtocolMessage response)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.PrepareIndirectResponse(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.PrepareIndirectResponse(IDirectedProtocolMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.PrepareIndirectResponseIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.PrepareIndirectResponse(IDirectedProtocolMessage message)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.ProcessIncomingMessage(DotNetOpenAuth.Messaging.IProtocolMessage)">
            <summary>Sets the stub of Channel.ProcessIncomingMessage(IProtocolMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.ProcessIncomingMessageIProtocolMessage">
            <summary>Sets the stub of Channel.ProcessIncomingMessage(IProtocolMessage message)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.ReadFromRequestCore(System.Web.HttpRequestBase)">
            <summary>Sets the stub of Channel.ReadFromRequestCore(HttpRequestBase request)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.ReadFromRequestCoreHttpRequestBase">
            <summary>Sets the stub of Channel.ReadFromRequestCore(HttpRequestBase request)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.ReadFromResponseCore(DotNetOpenAuth.Messaging.IncomingWebResponse)">
            <summary>Sets the stub of Channel.ReadFromResponseCore(IncomingWebResponse response)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.ReadFromResponseCoreIncomingWebResponse">
            <summary>Sets the stub of Channel.ReadFromResponseCore(IncomingWebResponse response)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.Receive(System.Collections.Generic.Dictionary{System.String,System.String},DotNetOpenAuth.Messaging.MessageReceivingEndpoint)">
            <summary>Sets the stub of Channel.Receive(Dictionary`2&lt;String,String&gt; fields, MessageReceivingEndpoint recipient)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.ReceiveDictionaryOfStringStringMessageReceivingEndpoint">
            <summary>Sets the stub of Channel.Receive(Dictionary`2&lt;String,String&gt; fields, MessageReceivingEndpoint recipient)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.RequestCore(DotNetOpenAuth.Messaging.IDirectedProtocolMessage)">
            <summary>Sets the stub of Channel.RequestCore(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.RequestCoreIDirectedProtocolMessage">
            <summary>Sets the stub of Channel.RequestCore(IDirectedProtocolMessage request)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.SerializeAsJson(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Sets the stub of Channel.SerializeAsJson(IMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.SerializeAsJsonIMessage">
            <summary>Sets the stub of Channel.SerializeAsJson(IMessage message)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.XmlDictionaryReaderQuotasGet">
            <summary>Sets the stub of Channel.get_XmlDictionaryReaderQuotas()</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.XmlDictionaryReaderQuotasSetXmlDictionaryReaderQuotas">
            <summary>Sets the stub of Channel.set_XmlDictionaryReaderQuotas(XmlDictionaryReaderQuotas value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubStandardMessageFactoryChannel.XmlDictionaryReaderQuotas">
            <summary>Sets the stub of Channel.get_XmlDictionaryReaderQuotas()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubStandardWebRequestHandler">
            <summary>Stub type of DotNetOpenAuth.Messaging.StandardWebRequestHandler</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardWebRequestHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubStandardWebRequestHandler.InitializeStub">
            <summary>Initializes a new instance of type StubStandardWebRequestHandler</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubStandardWebRequestHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubStandardWebRequestHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubStandardWebRequestHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Fakes.StubUntrustedWebRequestHandler">
            <summary>Stub type of DotNetOpenAuth.Messaging.UntrustedWebRequestHandler</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubUntrustedWebRequestHandler.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubUntrustedWebRequestHandler.#ctor(DotNetOpenAuth.Messaging.IDirectWebRequestHandler)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Fakes.StubUntrustedWebRequestHandler.InitializeStub">
            <summary>Initializes a new instance of type StubUntrustedWebRequestHandler</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubUntrustedWebRequestHandler.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubUntrustedWebRequestHandler.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Fakes.StubUntrustedWebRequestHandler.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartEncoder">
            <summary>Stub type of DotNetOpenAuth.Messaging.Reflection.IMessagePartEncoder</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartEncoder.#ctor">
            <summary>Initializes a new instance of type StubIMessagePartEncoder</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartEncoder.DecodeString">
            <summary>Sets the stub of IMessagePartEncoder.Decode(String value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartEncoder.dnoac::DotNetOpenAuth#Messaging#Reflection#IMessagePartEncoder#Decode(System.String)">
            <summary>Sets the stub of IMessagePartEncoder.Decode(String value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartEncoder.dnoac::DotNetOpenAuth#Messaging#Reflection#IMessagePartEncoder#Encode(System.Object)">
            <summary>Sets the stub of IMessagePartEncoder.Encode(Object value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartEncoder.EncodeObject">
            <summary>Sets the stub of IMessagePartEncoder.Encode(Object value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartNullEncoder">
            <summary>Stub type of DotNetOpenAuth.Messaging.Reflection.IMessagePartNullEncoder</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartNullEncoder.#ctor">
            <summary>Initializes a new instance of type StubIMessagePartNullEncoder</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartNullEncoder.DecodeString">
            <summary>Sets the stub of IMessagePartEncoder.Decode(String value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartNullEncoder.dnoac::DotNetOpenAuth#Messaging#Reflection#IMessagePartEncoder#Decode(System.String)">
            <summary>Sets the stub of IMessagePartEncoder.Decode(String value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartNullEncoder.dnoac::DotNetOpenAuth#Messaging#Reflection#IMessagePartEncoder#Encode(System.Object)">
            <summary>Sets the stub of IMessagePartEncoder.Encode(Object value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartNullEncoder.EncodeObject">
            <summary>Sets the stub of IMessagePartEncoder.Encode(Object value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartNullEncoder.EncodedNullValueGet">
            <summary>Sets the stub of IMessagePartNullEncoder.get_EncodedNullValue()</summary>
        </member>
        <member name="P:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartNullEncoder.dnoac::DotNetOpenAuth#Messaging#Reflection#IMessagePartNullEncoder#EncodedNullValue">
            <summary>Sets the stub of IMessagePartNullEncoder.get_EncodedNullValue()</summary>
        </member>
        <member name="T:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartOriginalEncoder">
            <summary>Stub type of DotNetOpenAuth.Messaging.Reflection.IMessagePartOriginalEncoder</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartOriginalEncoder.#ctor">
            <summary>Initializes a new instance of type StubIMessagePartOriginalEncoder</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartOriginalEncoder.DecodeString">
            <summary>Sets the stub of IMessagePartEncoder.Decode(String value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartOriginalEncoder.dnoac::DotNetOpenAuth#Messaging#Reflection#IMessagePartEncoder#Decode(System.String)">
            <summary>Sets the stub of IMessagePartEncoder.Decode(String value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartOriginalEncoder.dnoac::DotNetOpenAuth#Messaging#Reflection#IMessagePartEncoder#Encode(System.Object)">
            <summary>Sets the stub of IMessagePartEncoder.Encode(Object value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartOriginalEncoder.dnoac::DotNetOpenAuth#Messaging#Reflection#IMessagePartOriginalEncoder#EncodeAsOriginalString(System.Object)">
            <summary>Sets the stub of IMessagePartOriginalEncoder.EncodeAsOriginalString(Object value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartOriginalEncoder.EncodeAsOriginalStringObject">
            <summary>Sets the stub of IMessagePartOriginalEncoder.EncodeAsOriginalString(Object value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.Messaging.Reflection.Fakes.StubIMessagePartOriginalEncoder.EncodeObject">
            <summary>Sets the stub of IMessagePartEncoder.Encode(Object value)</summary>
        </member>
    </members>
</doc>
