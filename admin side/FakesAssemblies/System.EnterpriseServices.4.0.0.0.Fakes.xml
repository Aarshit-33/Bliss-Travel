<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.EnterpriseServices.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.SystemEnterpriseServicesDelegates">
            <summary>Contains custom delegates used for the stubs and shims of System.EnterpriseServices</summary>
        </member>
        <member name="T:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimApplicationCrmEnabledAttribute">
            <summary>Shim type of System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimApplicationCrmEnabledAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimApplicationCrmEnabledAttribute.#ctor(System.EnterpriseServices.CompensatingResourceManager.ApplicationCrmEnabledAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimApplicationCrmEnabledAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimApplicationCrmEnabledAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimApplicationCrmEnabledAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimApplicationCrmEnabledAttribute.Constructor">
            <summary>Sets the shim of ApplicationCrmEnabledAttribute.ApplicationCrmEnabledAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimApplicationCrmEnabledAttribute.ConstructorBoolean">
            <summary>Sets the shim of ApplicationCrmEnabledAttribute.ApplicationCrmEnabledAttribute(Boolean val)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimApplicationCrmEnabledAttribute.ValueGet">
            <summary>Sets the shim of ApplicationCrmEnabledAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimApplicationCrmEnabledAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimApplicationCrmEnabledAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of ApplicationCrmEnabledAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk">
            <summary>Shim type of System.EnterpriseServices.CompensatingResourceManager.Clerk</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.#ctor(System.EnterpriseServices.CompensatingResourceManager.Clerk)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.ConstructorStringStringCompensatorOptions">
            <summary>Sets the shim of Clerk.Clerk(String compensator, String description, CompensatorOptions flags)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.ConstructorTypeStringCompensatorOptions">
            <summary>Sets the shim of Clerk.Clerk(Type compensator, String description, CompensatorOptions flags)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.ForceLog">
            <summary>Sets the shim of Clerk.ForceLog()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.ForceTransactionToAbort">
            <summary>Sets the shim of Clerk.ForceTransactionToAbort()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.ForgetLogRecord">
            <summary>Sets the shim of Clerk.ForgetLogRecord()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.LogRecordCountGet">
            <summary>Sets the shim of Clerk.get_LogRecordCount()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.TransactionUOWGet">
            <summary>Sets the shim of Clerk.get_TransactionUOW()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.WriteLogRecordObject">
            <summary>Sets the shim of Clerk.WriteLogRecord(Object record)</summary>
        </member>
        <member name="T:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.AllInstances.ForceLog">
            <summary>Sets the shim of Clerk.ForceLog()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.AllInstances.ForceTransactionToAbort">
            <summary>Sets the shim of Clerk.ForceTransactionToAbort()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.AllInstances.ForgetLogRecord">
            <summary>Sets the shim of Clerk.ForgetLogRecord()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.AllInstances.LogRecordCountGet">
            <summary>Sets the shim of Clerk.get_LogRecordCount()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.AllInstances.TransactionUOWGet">
            <summary>Sets the shim of Clerk.get_TransactionUOW()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerk.AllInstances.WriteLogRecordObject">
            <summary>Sets the shim of Clerk.WriteLogRecord(Object record)</summary>
        </member>
        <member name="T:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo">
            <summary>Shim type of System.EnterpriseServices.CompensatingResourceManager.ClerkInfo</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.#ctor(System.EnterpriseServices.CompensatingResourceManager.ClerkInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.ActivityIdGet">
            <summary>Sets the shim of ClerkInfo.get_ActivityId()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.ClerkGet">
            <summary>Sets the shim of ClerkInfo.get_Clerk()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.CompensatorGet">
            <summary>Sets the shim of ClerkInfo.get_Compensator()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.Constructor">
            <summary>Sets the shim of ClerkInfo.ClerkInfo()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.DescriptionGet">
            <summary>Sets the shim of ClerkInfo.get_Description()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.InstanceIdGet">
            <summary>Sets the shim of ClerkInfo.get_InstanceId()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.TransactionUOWGet">
            <summary>Sets the shim of ClerkInfo.get_TransactionUOW()</summary>
        </member>
        <member name="T:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.AllInstances.ActivityIdGet">
            <summary>Sets the shim of ClerkInfo.get_ActivityId()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.AllInstances.ClerkGet">
            <summary>Sets the shim of ClerkInfo.get_Clerk()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.AllInstances.CompensatorGet">
            <summary>Sets the shim of ClerkInfo.get_Compensator()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.AllInstances.Constructor">
            <summary>Sets the shim of ClerkInfo.ClerkInfo()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.AllInstances.DescriptionGet">
            <summary>Sets the shim of ClerkInfo.get_Description()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.AllInstances.InstanceIdGet">
            <summary>Sets the shim of ClerkInfo.get_InstanceId()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkInfo.AllInstances.TransactionUOWGet">
            <summary>Sets the shim of ClerkInfo.get_TransactionUOW()</summary>
        </member>
        <member name="T:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor">
            <summary>Shim type of System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.#ctor(System.EnterpriseServices.CompensatingResourceManager.ClerkMonitor)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.Constructor">
            <summary>Sets the shim of ClerkMonitor.ClerkMonitor()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.CountGet">
            <summary>Sets the shim of ClerkMonitor.get_Count()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.GetEnumerator">
            <summary>Sets the shim of ClerkMonitor.GetEnumerator()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.ItemGetInt32">
            <summary>Sets the shim of ClerkMonitor.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.ItemGetString">
            <summary>Sets the shim of ClerkMonitor.get_Item(String index)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.Populate">
            <summary>Sets the shim of ClerkMonitor.Populate()</summary>
        </member>
        <member name="T:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.AllInstances.CountGet">
            <summary>Sets the shim of ClerkMonitor.get_Count()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.AllInstances.GetEnumerator">
            <summary>Sets the shim of ClerkMonitor.GetEnumerator()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.AllInstances.ItemGetInt32">
            <summary>Sets the shim of ClerkMonitor.get_Item(Int32 index)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.AllInstances.ItemGetString">
            <summary>Sets the shim of ClerkMonitor.get_Item(String index)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimClerkMonitor.AllInstances.Populate">
            <summary>Sets the shim of ClerkMonitor.Populate()</summary>
        </member>
        <member name="T:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator">
            <summary>Shim type of System.EnterpriseServices.CompensatingResourceManager.Compensator</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.#ctor(System.EnterpriseServices.CompensatingResourceManager.Compensator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.Bind(System.EnterpriseServices.IRemoteDispatch)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.Bind(System.EnterpriseServices.IServicedComponentInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.AbortRecordLogRecord">
            <summary>Sets the shim of Compensator.AbortRecord(LogRecord rec)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.BeginAbortBoolean">
            <summary>Sets the shim of Compensator.BeginAbort(Boolean fRecovery)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.BeginCommitBoolean">
            <summary>Sets the shim of Compensator.BeginCommit(Boolean fRecovery)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.BeginPrepare">
            <summary>Sets the shim of Compensator.BeginPrepare()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.ClerkGet">
            <summary>Sets the shim of Compensator.get_Clerk()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.CommitRecordLogRecord">
            <summary>Sets the shim of Compensator.CommitRecord(LogRecord rec)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.Constructor">
            <summary>Sets the shim of Compensator.Compensator()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.EndAbort">
            <summary>Sets the shim of Compensator.EndAbort()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.EndCommit">
            <summary>Sets the shim of Compensator.EndCommit()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.EndPrepare">
            <summary>Sets the shim of Compensator.EndPrepare()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.PrepareRecordLogRecord">
            <summary>Sets the shim of Compensator.PrepareRecord(LogRecord rec)</summary>
        </member>
        <member name="T:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.AllInstances.AbortRecordLogRecord">
            <summary>Sets the shim of Compensator.AbortRecord(LogRecord rec)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.AllInstances.BeginAbortBoolean">
            <summary>Sets the shim of Compensator.BeginAbort(Boolean fRecovery)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.AllInstances.BeginCommitBoolean">
            <summary>Sets the shim of Compensator.BeginCommit(Boolean fRecovery)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.AllInstances.BeginPrepare">
            <summary>Sets the shim of Compensator.BeginPrepare()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.AllInstances.ClerkGet">
            <summary>Sets the shim of Compensator.get_Clerk()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.AllInstances.CommitRecordLogRecord">
            <summary>Sets the shim of Compensator.CommitRecord(LogRecord rec)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.AllInstances.EndAbort">
            <summary>Sets the shim of Compensator.EndAbort()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.AllInstances.EndCommit">
            <summary>Sets the shim of Compensator.EndCommit()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.AllInstances.EndPrepare">
            <summary>Sets the shim of Compensator.EndPrepare()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimCompensator.AllInstances.PrepareRecordLogRecord">
            <summary>Sets the shim of Compensator.PrepareRecord(LogRecord rec)</summary>
        </member>
        <member name="T:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord">
            <summary>Shim type of System.EnterpriseServices.CompensatingResourceManager.LogRecord</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord.#ctor(System.EnterpriseServices.CompensatingResourceManager.LogRecord)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord.Constructor">
            <summary>Sets the shim of LogRecord.LogRecord()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord.FlagsGet">
            <summary>Sets the shim of LogRecord.get_Flags()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord.RecordGet">
            <summary>Sets the shim of LogRecord.get_Record()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord.SequenceGet">
            <summary>Sets the shim of LogRecord.get_Sequence()</summary>
        </member>
        <member name="T:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord.AllInstances.FlagsGet">
            <summary>Sets the shim of LogRecord.get_Flags()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord.AllInstances.RecordGet">
            <summary>Sets the shim of LogRecord.get_Record()</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.ShimLogRecord.AllInstances.SequenceGet">
            <summary>Sets the shim of LogRecord.get_Sequence()</summary>
        </member>
        <member name="T:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator">
            <summary>Stub type of System.EnterpriseServices.CompensatingResourceManager.Compensator</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.AbortRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)">
            <summary>Sets the stub of Compensator.AbortRecord(LogRecord rec)</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.AbortRecordLogRecord">
            <summary>Sets the stub of Compensator.AbortRecord(LogRecord rec)</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.Activate">
            <summary>Sets the stub of ServicedComponent.Activate()</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.Activate01">
            <summary>Sets the stub of ServicedComponent.Activate()</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.BeginAbort(System.Boolean)">
            <summary>Sets the stub of Compensator.BeginAbort(Boolean fRecovery)</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.BeginAbortBoolean">
            <summary>Sets the stub of Compensator.BeginAbort(Boolean fRecovery)</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.BeginCommit(System.Boolean)">
            <summary>Sets the stub of Compensator.BeginCommit(Boolean fRecovery)</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.BeginCommitBoolean">
            <summary>Sets the stub of Compensator.BeginCommit(Boolean fRecovery)</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.BeginPrepare">
            <summary>Sets the stub of Compensator.BeginPrepare()</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.BeginPrepare01">
            <summary>Sets the stub of Compensator.BeginPrepare()</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.CanBePooled">
            <summary>Sets the stub of ServicedComponent.CanBePooled()</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.CanBePooled01">
            <summary>Sets the stub of ServicedComponent.CanBePooled()</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.CommitRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)">
            <summary>Sets the stub of Compensator.CommitRecord(LogRecord rec)</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.CommitRecordLogRecord">
            <summary>Sets the stub of Compensator.CommitRecord(LogRecord rec)</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.Construct(System.String)">
            <summary>Sets the stub of ServicedComponent.Construct(String s)</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.ConstructString">
            <summary>Sets the stub of ServicedComponent.Construct(String s)</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.Deactivate">
            <summary>Sets the stub of ServicedComponent.Deactivate()</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.Deactivate01">
            <summary>Sets the stub of ServicedComponent.Deactivate()</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.Dispose(System.Boolean)">
            <summary>Sets the stub of ServicedComponent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.DisposeBoolean">
            <summary>Sets the stub of ServicedComponent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.EndAbort">
            <summary>Sets the stub of Compensator.EndAbort()</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.EndAbort01">
            <summary>Sets the stub of Compensator.EndAbort()</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.EndCommit">
            <summary>Sets the stub of Compensator.EndCommit()</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.EndCommit01">
            <summary>Sets the stub of Compensator.EndCommit()</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.EndPrepare">
            <summary>Sets the stub of Compensator.EndPrepare()</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.EndPrepare01">
            <summary>Sets the stub of Compensator.EndPrepare()</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.InitializeStub">
            <summary>Initializes a new instance of type StubCompensator</summary>
        </member>
        <member name="M:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.PrepareRecord(System.EnterpriseServices.CompensatingResourceManager.LogRecord)">
            <summary>Sets the stub of Compensator.PrepareRecord(LogRecord rec)</summary>
        </member>
        <member name="F:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.PrepareRecordLogRecord">
            <summary>Sets the stub of Compensator.PrepareRecord(LogRecord rec)</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.EnterpriseServices.CompensatingResourceManager.Fakes.StubCompensator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimActivity">
            <summary>Shim type of System.EnterpriseServices.Activity</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimActivity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimActivity.#ctor(System.EnterpriseServices.Activity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimActivity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimActivity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimActivity.AsynchronousCallIServiceCall">
            <summary>Sets the shim of Activity.AsynchronousCall(IServiceCall serviceCall)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimActivity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimActivity.BindToCurrentThread">
            <summary>Sets the shim of Activity.BindToCurrentThread()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimActivity.ConstructorServiceConfig">
            <summary>Sets the shim of Activity.Activity(ServiceConfig cfg)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimActivity.SynchronousCallIServiceCall">
            <summary>Sets the shim of Activity.SynchronousCall(IServiceCall serviceCall)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimActivity.UnbindFromThread">
            <summary>Sets the shim of Activity.UnbindFromThread()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimActivity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimActivity.AllInstances.AsynchronousCallIServiceCall">
            <summary>Sets the shim of Activity.AsynchronousCall(IServiceCall serviceCall)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimActivity.AllInstances.BindToCurrentThread">
            <summary>Sets the shim of Activity.BindToCurrentThread()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimActivity.AllInstances.SynchronousCallIServiceCall">
            <summary>Sets the shim of Activity.SynchronousCall(IServiceCall serviceCall)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimActivity.AllInstances.UnbindFromThread">
            <summary>Sets the shim of Activity.UnbindFromThread()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute">
            <summary>Shim type of System.EnterpriseServices.ApplicationAccessControlAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.#ctor(System.EnterpriseServices.ApplicationAccessControlAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.AccessChecksLevelGet">
            <summary>Sets the shim of ApplicationAccessControlAttribute.get_AccessChecksLevel()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.AccessChecksLevelSetAccessChecksLevelOption">
            <summary>Sets the shim of ApplicationAccessControlAttribute.set_AccessChecksLevel(AccessChecksLevelOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.AuthenticationGet">
            <summary>Sets the shim of ApplicationAccessControlAttribute.get_Authentication()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.AuthenticationSetAuthenticationOption">
            <summary>Sets the shim of ApplicationAccessControlAttribute.set_Authentication(AuthenticationOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.Constructor">
            <summary>Sets the shim of ApplicationAccessControlAttribute.ApplicationAccessControlAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.ConstructorBoolean">
            <summary>Sets the shim of ApplicationAccessControlAttribute.ApplicationAccessControlAttribute(Boolean val)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.ImpersonationLevelGet">
            <summary>Sets the shim of ApplicationAccessControlAttribute.get_ImpersonationLevel()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.ImpersonationLevelSetImpersonationLevelOption">
            <summary>Sets the shim of ApplicationAccessControlAttribute.set_ImpersonationLevel(ImpersonationLevelOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.ValueGet">
            <summary>Sets the shim of ApplicationAccessControlAttribute.get_Value()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.ValueSetBoolean">
            <summary>Sets the shim of ApplicationAccessControlAttribute.set_Value(Boolean value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.AllInstances.AccessChecksLevelGet">
            <summary>Sets the shim of ApplicationAccessControlAttribute.get_AccessChecksLevel()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.AllInstances.AccessChecksLevelSetAccessChecksLevelOption">
            <summary>Sets the shim of ApplicationAccessControlAttribute.set_AccessChecksLevel(AccessChecksLevelOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.AllInstances.AuthenticationGet">
            <summary>Sets the shim of ApplicationAccessControlAttribute.get_Authentication()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.AllInstances.AuthenticationSetAuthenticationOption">
            <summary>Sets the shim of ApplicationAccessControlAttribute.set_Authentication(AuthenticationOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.AllInstances.ImpersonationLevelGet">
            <summary>Sets the shim of ApplicationAccessControlAttribute.get_ImpersonationLevel()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.AllInstances.ImpersonationLevelSetImpersonationLevelOption">
            <summary>Sets the shim of ApplicationAccessControlAttribute.set_ImpersonationLevel(ImpersonationLevelOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of ApplicationAccessControlAttribute.get_Value()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationAccessControlAttribute.AllInstances.ValueSetBoolean">
            <summary>Sets the shim of ApplicationAccessControlAttribute.set_Value(Boolean value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute">
            <summary>Shim type of System.EnterpriseServices.ApplicationActivationAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.#ctor(System.EnterpriseServices.ApplicationActivationAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.ConstructorActivationOption">
            <summary>Sets the shim of ApplicationActivationAttribute.ApplicationActivationAttribute(ActivationOption opt)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.SoapMailboxGet">
            <summary>Sets the shim of ApplicationActivationAttribute.get_SoapMailbox()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.SoapMailboxSetString">
            <summary>Sets the shim of ApplicationActivationAttribute.set_SoapMailbox(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.SoapVRootGet">
            <summary>Sets the shim of ApplicationActivationAttribute.get_SoapVRoot()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.SoapVRootSetString">
            <summary>Sets the shim of ApplicationActivationAttribute.set_SoapVRoot(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.ValueGet">
            <summary>Sets the shim of ApplicationActivationAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.AllInstances.SoapMailboxGet">
            <summary>Sets the shim of ApplicationActivationAttribute.get_SoapMailbox()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.AllInstances.SoapMailboxSetString">
            <summary>Sets the shim of ApplicationActivationAttribute.set_SoapMailbox(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.AllInstances.SoapVRootGet">
            <summary>Sets the shim of ApplicationActivationAttribute.get_SoapVRoot()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.AllInstances.SoapVRootSetString">
            <summary>Sets the shim of ApplicationActivationAttribute.set_SoapVRoot(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationActivationAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of ApplicationActivationAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimApplicationIDAttribute">
            <summary>Shim type of System.EnterpriseServices.ApplicationIDAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationIDAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationIDAttribute.#ctor(System.EnterpriseServices.ApplicationIDAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationIDAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationIDAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationIDAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationIDAttribute.ConstructorString">
            <summary>Sets the shim of ApplicationIDAttribute.ApplicationIDAttribute(String guid)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationIDAttribute.ValueGet">
            <summary>Sets the shim of ApplicationIDAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimApplicationIDAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationIDAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of ApplicationIDAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimApplicationNameAttribute">
            <summary>Shim type of System.EnterpriseServices.ApplicationNameAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationNameAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationNameAttribute.#ctor(System.EnterpriseServices.ApplicationNameAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationNameAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationNameAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationNameAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationNameAttribute.ConstructorString">
            <summary>Sets the shim of ApplicationNameAttribute.ApplicationNameAttribute(String name)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationNameAttribute.ValueGet">
            <summary>Sets the shim of ApplicationNameAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimApplicationNameAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationNameAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of ApplicationNameAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute">
            <summary>Shim type of System.EnterpriseServices.ApplicationQueuingAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.#ctor(System.EnterpriseServices.ApplicationQueuingAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.Constructor">
            <summary>Sets the shim of ApplicationQueuingAttribute.ApplicationQueuingAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.EnabledGet">
            <summary>Sets the shim of ApplicationQueuingAttribute.get_Enabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.EnabledSetBoolean">
            <summary>Sets the shim of ApplicationQueuingAttribute.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.MaxListenerThreadsGet">
            <summary>Sets the shim of ApplicationQueuingAttribute.get_MaxListenerThreads()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.MaxListenerThreadsSetInt32">
            <summary>Sets the shim of ApplicationQueuingAttribute.set_MaxListenerThreads(Int32 value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.QueueListenerEnabledGet">
            <summary>Sets the shim of ApplicationQueuingAttribute.get_QueueListenerEnabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.QueueListenerEnabledSetBoolean">
            <summary>Sets the shim of ApplicationQueuingAttribute.set_QueueListenerEnabled(Boolean value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.AllInstances.EnabledGet">
            <summary>Sets the shim of ApplicationQueuingAttribute.get_Enabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.AllInstances.EnabledSetBoolean">
            <summary>Sets the shim of ApplicationQueuingAttribute.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.AllInstances.MaxListenerThreadsGet">
            <summary>Sets the shim of ApplicationQueuingAttribute.get_MaxListenerThreads()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.AllInstances.MaxListenerThreadsSetInt32">
            <summary>Sets the shim of ApplicationQueuingAttribute.set_MaxListenerThreads(Int32 value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.AllInstances.QueueListenerEnabledGet">
            <summary>Sets the shim of ApplicationQueuingAttribute.get_QueueListenerEnabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimApplicationQueuingAttribute.AllInstances.QueueListenerEnabledSetBoolean">
            <summary>Sets the shim of ApplicationQueuingAttribute.set_QueueListenerEnabled(Boolean value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimAutoCompleteAttribute">
            <summary>Shim type of System.EnterpriseServices.AutoCompleteAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimAutoCompleteAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimAutoCompleteAttribute.#ctor(System.EnterpriseServices.AutoCompleteAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimAutoCompleteAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimAutoCompleteAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimAutoCompleteAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimAutoCompleteAttribute.Constructor">
            <summary>Sets the shim of AutoCompleteAttribute.AutoCompleteAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimAutoCompleteAttribute.ConstructorBoolean">
            <summary>Sets the shim of AutoCompleteAttribute.AutoCompleteAttribute(Boolean val)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimAutoCompleteAttribute.ValueGet">
            <summary>Sets the shim of AutoCompleteAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimAutoCompleteAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimAutoCompleteAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of AutoCompleteAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimBOID">
            <summary>Shim type of System.EnterpriseServices.BOID</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimBOID.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimBOID.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimBOID.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimBOID.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimBOID.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimBYOT">
            <summary>Shim type of System.EnterpriseServices.BYOT</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimBYOT.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimBYOT.#ctor(System.EnterpriseServices.BYOT)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimBYOT.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimBYOT.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimBYOT.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimBYOT.Constructor">
            <summary>Sets the shim of BYOT.BYOT()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimBYOT.CreateWithTipTransactionStringType">
            <summary>Sets the shim of BYOT.CreateWithTipTransaction(String url, Type t)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimBYOT.CreateWithTransactionObjectType">
            <summary>Sets the shim of BYOT.CreateWithTransaction(Object transaction, Type t)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimBYOT.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimCOMTIIntrinsicsAttribute">
            <summary>Shim type of System.EnterpriseServices.COMTIIntrinsicsAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimCOMTIIntrinsicsAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimCOMTIIntrinsicsAttribute.#ctor(System.EnterpriseServices.COMTIIntrinsicsAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimCOMTIIntrinsicsAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimCOMTIIntrinsicsAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimCOMTIIntrinsicsAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimCOMTIIntrinsicsAttribute.Constructor">
            <summary>Sets the shim of COMTIIntrinsicsAttribute.COMTIIntrinsicsAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimCOMTIIntrinsicsAttribute.ConstructorBoolean">
            <summary>Sets the shim of COMTIIntrinsicsAttribute.COMTIIntrinsicsAttribute(Boolean val)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimCOMTIIntrinsicsAttribute.ValueGet">
            <summary>Sets the shim of COMTIIntrinsicsAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimCOMTIIntrinsicsAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimCOMTIIntrinsicsAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of COMTIIntrinsicsAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimComponentAccessControlAttribute">
            <summary>Shim type of System.EnterpriseServices.ComponentAccessControlAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimComponentAccessControlAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimComponentAccessControlAttribute.#ctor(System.EnterpriseServices.ComponentAccessControlAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimComponentAccessControlAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimComponentAccessControlAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimComponentAccessControlAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimComponentAccessControlAttribute.Constructor">
            <summary>Sets the shim of ComponentAccessControlAttribute.ComponentAccessControlAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimComponentAccessControlAttribute.ConstructorBoolean">
            <summary>Sets the shim of ComponentAccessControlAttribute.ComponentAccessControlAttribute(Boolean val)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimComponentAccessControlAttribute.ValueGet">
            <summary>Sets the shim of ComponentAccessControlAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimComponentAccessControlAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimComponentAccessControlAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of ComponentAccessControlAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute">
            <summary>Shim type of System.EnterpriseServices.ConstructionEnabledAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.#ctor(System.EnterpriseServices.ConstructionEnabledAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.Constructor">
            <summary>Sets the shim of ConstructionEnabledAttribute.ConstructionEnabledAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.ConstructorBoolean">
            <summary>Sets the shim of ConstructionEnabledAttribute.ConstructionEnabledAttribute(Boolean val)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.DefaultGet">
            <summary>Sets the shim of ConstructionEnabledAttribute.get_Default()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.DefaultSetString">
            <summary>Sets the shim of ConstructionEnabledAttribute.set_Default(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.EnabledGet">
            <summary>Sets the shim of ConstructionEnabledAttribute.get_Enabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.EnabledSetBoolean">
            <summary>Sets the shim of ConstructionEnabledAttribute.set_Enabled(Boolean value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.AllInstances.DefaultGet">
            <summary>Sets the shim of ConstructionEnabledAttribute.get_Default()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.AllInstances.DefaultSetString">
            <summary>Sets the shim of ConstructionEnabledAttribute.set_Default(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.AllInstances.EnabledGet">
            <summary>Sets the shim of ConstructionEnabledAttribute.get_Enabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimConstructionEnabledAttribute.AllInstances.EnabledSetBoolean">
            <summary>Sets the shim of ConstructionEnabledAttribute.set_Enabled(Boolean value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimContextUtil">
            <summary>Shim type of System.EnterpriseServices.ContextUtil</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimContextUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimContextUtil.#ctor(System.EnterpriseServices.ContextUtil)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimContextUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimContextUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.ActivityIdGet">
            <summary>Sets the shim of ContextUtil.get_ActivityId()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.ApplicationIdGet">
            <summary>Sets the shim of ContextUtil.get_ApplicationId()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.ApplicationInstanceIdGet">
            <summary>Sets the shim of ContextUtil.get_ApplicationInstanceId()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.Constructor">
            <summary>Sets the shim of ContextUtil.ContextUtil()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.ContextIdGet">
            <summary>Sets the shim of ContextUtil.get_ContextId()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.DeactivateOnReturnGet">
            <summary>Sets the shim of ContextUtil.get_DeactivateOnReturn()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.DeactivateOnReturnSetBoolean">
            <summary>Sets the shim of ContextUtil.set_DeactivateOnReturn(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.DisableCommit">
            <summary>Sets the shim of ContextUtil.DisableCommit()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.EnableCommit">
            <summary>Sets the shim of ContextUtil.EnableCommit()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.GetNamedPropertyString">
            <summary>Sets the shim of ContextUtil.GetNamedProperty(String name)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.IsCallerInRoleString">
            <summary>Sets the shim of ContextUtil.IsCallerInRole(String role)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.IsDefaultContext">
            <summary>Sets the shim of ContextUtil.IsDefaultContext()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.IsInTransactionGet">
            <summary>Sets the shim of ContextUtil.get_IsInTransaction()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.IsSecurityEnabledGet">
            <summary>Sets the shim of ContextUtil.get_IsSecurityEnabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.MyTransactionVoteGet">
            <summary>Sets the shim of ContextUtil.get_MyTransactionVote()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.MyTransactionVoteSetTransactionVote">
            <summary>Sets the shim of ContextUtil.set_MyTransactionVote(TransactionVote value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.PartitionIdGet">
            <summary>Sets the shim of ContextUtil.get_PartitionId()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.SetAbort">
            <summary>Sets the shim of ContextUtil.SetAbort()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.SetComplete">
            <summary>Sets the shim of ContextUtil.SetComplete()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.SetNamedPropertyStringObject">
            <summary>Sets the shim of ContextUtil.SetNamedProperty(String name, Object value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.StaticConstructor">
            <summary>Sets the shim of ContextUtil.ContextUtil()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.SystemTransactionGet">
            <summary>Sets the shim of ContextUtil.get_SystemTransaction()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.TransactionGet">
            <summary>Sets the shim of ContextUtil.get_Transaction()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimContextUtil.TransactionIdGet">
            <summary>Sets the shim of ContextUtil.get_TransactionId()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimContextUtil.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimDescriptionAttribute">
            <summary>Shim type of System.EnterpriseServices.DescriptionAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimDescriptionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimDescriptionAttribute.#ctor(System.EnterpriseServices.DescriptionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimDescriptionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimDescriptionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimDescriptionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimDescriptionAttribute.ConstructorString">
            <summary>Sets the shim of DescriptionAttribute.DescriptionAttribute(String desc)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimDescriptionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimEventClassAttribute">
            <summary>Shim type of System.EnterpriseServices.EventClassAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimEventClassAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimEventClassAttribute.#ctor(System.EnterpriseServices.EventClassAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimEventClassAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimEventClassAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.AllowInprocSubscribersGet">
            <summary>Sets the shim of EventClassAttribute.get_AllowInprocSubscribers()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.AllowInprocSubscribersSetBoolean">
            <summary>Sets the shim of EventClassAttribute.set_AllowInprocSubscribers(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.Constructor">
            <summary>Sets the shim of EventClassAttribute.EventClassAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.FireInParallelGet">
            <summary>Sets the shim of EventClassAttribute.get_FireInParallel()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.FireInParallelSetBoolean">
            <summary>Sets the shim of EventClassAttribute.set_FireInParallel(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.PublisherFilterGet">
            <summary>Sets the shim of EventClassAttribute.get_PublisherFilter()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.PublisherFilterSetString">
            <summary>Sets the shim of EventClassAttribute.set_PublisherFilter(String value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimEventClassAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.AllInstances.AllowInprocSubscribersGet">
            <summary>Sets the shim of EventClassAttribute.get_AllowInprocSubscribers()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.AllInstances.AllowInprocSubscribersSetBoolean">
            <summary>Sets the shim of EventClassAttribute.set_AllowInprocSubscribers(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.AllInstances.FireInParallelGet">
            <summary>Sets the shim of EventClassAttribute.get_FireInParallel()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.AllInstances.FireInParallelSetBoolean">
            <summary>Sets the shim of EventClassAttribute.set_FireInParallel(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.AllInstances.PublisherFilterGet">
            <summary>Sets the shim of EventClassAttribute.get_PublisherFilter()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventClassAttribute.AllInstances.PublisherFilterSetString">
            <summary>Sets the shim of EventClassAttribute.set_PublisherFilter(String value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimEventTrackingEnabledAttribute">
            <summary>Shim type of System.EnterpriseServices.EventTrackingEnabledAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimEventTrackingEnabledAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimEventTrackingEnabledAttribute.#ctor(System.EnterpriseServices.EventTrackingEnabledAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimEventTrackingEnabledAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimEventTrackingEnabledAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventTrackingEnabledAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventTrackingEnabledAttribute.Constructor">
            <summary>Sets the shim of EventTrackingEnabledAttribute.EventTrackingEnabledAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventTrackingEnabledAttribute.ConstructorBoolean">
            <summary>Sets the shim of EventTrackingEnabledAttribute.EventTrackingEnabledAttribute(Boolean val)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventTrackingEnabledAttribute.ValueGet">
            <summary>Sets the shim of EventTrackingEnabledAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimEventTrackingEnabledAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimEventTrackingEnabledAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of EventTrackingEnabledAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimExceptionClassAttribute">
            <summary>Shim type of System.EnterpriseServices.ExceptionClassAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimExceptionClassAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimExceptionClassAttribute.#ctor(System.EnterpriseServices.ExceptionClassAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimExceptionClassAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimExceptionClassAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimExceptionClassAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimExceptionClassAttribute.ConstructorString">
            <summary>Sets the shim of ExceptionClassAttribute.ExceptionClassAttribute(String name)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimExceptionClassAttribute.ValueGet">
            <summary>Sets the shim of ExceptionClassAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimExceptionClassAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimExceptionClassAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of ExceptionClassAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimIISIntrinsicsAttribute">
            <summary>Shim type of System.EnterpriseServices.IISIntrinsicsAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimIISIntrinsicsAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimIISIntrinsicsAttribute.#ctor(System.EnterpriseServices.IISIntrinsicsAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimIISIntrinsicsAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimIISIntrinsicsAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimIISIntrinsicsAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimIISIntrinsicsAttribute.Constructor">
            <summary>Sets the shim of IISIntrinsicsAttribute.IISIntrinsicsAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimIISIntrinsicsAttribute.ConstructorBoolean">
            <summary>Sets the shim of IISIntrinsicsAttribute.IISIntrinsicsAttribute(Boolean val)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimIISIntrinsicsAttribute.ValueGet">
            <summary>Sets the shim of IISIntrinsicsAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimIISIntrinsicsAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimIISIntrinsicsAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of IISIntrinsicsAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute">
            <summary>Shim type of System.EnterpriseServices.InterfaceQueuingAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.#ctor(System.EnterpriseServices.InterfaceQueuingAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.Constructor">
            <summary>Sets the shim of InterfaceQueuingAttribute.InterfaceQueuingAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.ConstructorBoolean">
            <summary>Sets the shim of InterfaceQueuingAttribute.InterfaceQueuingAttribute(Boolean enabled)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.EnabledGet">
            <summary>Sets the shim of InterfaceQueuingAttribute.get_Enabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.EnabledSetBoolean">
            <summary>Sets the shim of InterfaceQueuingAttribute.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.InterfaceGet">
            <summary>Sets the shim of InterfaceQueuingAttribute.get_Interface()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.InterfaceSetString">
            <summary>Sets the shim of InterfaceQueuingAttribute.set_Interface(String value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.AllInstances.EnabledGet">
            <summary>Sets the shim of InterfaceQueuingAttribute.get_Enabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.AllInstances.EnabledSetBoolean">
            <summary>Sets the shim of InterfaceQueuingAttribute.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.AllInstances.InterfaceGet">
            <summary>Sets the shim of InterfaceQueuingAttribute.get_Interface()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimInterfaceQueuingAttribute.AllInstances.InterfaceSetString">
            <summary>Sets the shim of InterfaceQueuingAttribute.set_Interface(String value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimJustInTimeActivationAttribute">
            <summary>Shim type of System.EnterpriseServices.JustInTimeActivationAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimJustInTimeActivationAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimJustInTimeActivationAttribute.#ctor(System.EnterpriseServices.JustInTimeActivationAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimJustInTimeActivationAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimJustInTimeActivationAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimJustInTimeActivationAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimJustInTimeActivationAttribute.Constructor">
            <summary>Sets the shim of JustInTimeActivationAttribute.JustInTimeActivationAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimJustInTimeActivationAttribute.ConstructorBoolean">
            <summary>Sets the shim of JustInTimeActivationAttribute.JustInTimeActivationAttribute(Boolean val)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimJustInTimeActivationAttribute.ValueGet">
            <summary>Sets the shim of JustInTimeActivationAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimJustInTimeActivationAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimJustInTimeActivationAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of JustInTimeActivationAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimLoadBalancingSupportedAttribute">
            <summary>Shim type of System.EnterpriseServices.LoadBalancingSupportedAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimLoadBalancingSupportedAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimLoadBalancingSupportedAttribute.#ctor(System.EnterpriseServices.LoadBalancingSupportedAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimLoadBalancingSupportedAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimLoadBalancingSupportedAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimLoadBalancingSupportedAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimLoadBalancingSupportedAttribute.Constructor">
            <summary>Sets the shim of LoadBalancingSupportedAttribute.LoadBalancingSupportedAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimLoadBalancingSupportedAttribute.ConstructorBoolean">
            <summary>Sets the shim of LoadBalancingSupportedAttribute.LoadBalancingSupportedAttribute(Boolean val)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimLoadBalancingSupportedAttribute.ValueGet">
            <summary>Sets the shim of LoadBalancingSupportedAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimLoadBalancingSupportedAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimLoadBalancingSupportedAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of LoadBalancingSupportedAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimMustRunInClientContextAttribute">
            <summary>Shim type of System.EnterpriseServices.MustRunInClientContextAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimMustRunInClientContextAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimMustRunInClientContextAttribute.#ctor(System.EnterpriseServices.MustRunInClientContextAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimMustRunInClientContextAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimMustRunInClientContextAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimMustRunInClientContextAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimMustRunInClientContextAttribute.Constructor">
            <summary>Sets the shim of MustRunInClientContextAttribute.MustRunInClientContextAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimMustRunInClientContextAttribute.ConstructorBoolean">
            <summary>Sets the shim of MustRunInClientContextAttribute.MustRunInClientContextAttribute(Boolean val)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimMustRunInClientContextAttribute.ValueGet">
            <summary>Sets the shim of MustRunInClientContextAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimMustRunInClientContextAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimMustRunInClientContextAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of MustRunInClientContextAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute">
            <summary>Shim type of System.EnterpriseServices.ObjectPoolingAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.#ctor(System.EnterpriseServices.ObjectPoolingAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.AfterSaveChangesHashtable">
            <summary>Sets the shim of ObjectPoolingAttribute.AfterSaveChanges(Hashtable info)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.ApplyHashtable">
            <summary>Sets the shim of ObjectPoolingAttribute.Apply(Hashtable info)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.Constructor">
            <summary>Sets the shim of ObjectPoolingAttribute.ObjectPoolingAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.ConstructorBoolean">
            <summary>Sets the shim of ObjectPoolingAttribute.ObjectPoolingAttribute(Boolean enable)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.ConstructorBooleanInt32Int32">
            <summary>Sets the shim of ObjectPoolingAttribute.ObjectPoolingAttribute(Boolean enable, Int32 minPoolSize, Int32 maxPoolSize)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.ConstructorInt32Int32">
            <summary>Sets the shim of ObjectPoolingAttribute.ObjectPoolingAttribute(Int32 minPoolSize, Int32 maxPoolSize)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.CreationTimeoutGet">
            <summary>Sets the shim of ObjectPoolingAttribute.get_CreationTimeout()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.CreationTimeoutSetInt32">
            <summary>Sets the shim of ObjectPoolingAttribute.set_CreationTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.EnabledGet">
            <summary>Sets the shim of ObjectPoolingAttribute.get_Enabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.EnabledSetBoolean">
            <summary>Sets the shim of ObjectPoolingAttribute.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.IsValidTargetString">
            <summary>Sets the shim of ObjectPoolingAttribute.IsValidTarget(String s)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.MaxPoolSizeGet">
            <summary>Sets the shim of ObjectPoolingAttribute.get_MaxPoolSize()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.MaxPoolSizeSetInt32">
            <summary>Sets the shim of ObjectPoolingAttribute.set_MaxPoolSize(Int32 value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.MinPoolSizeGet">
            <summary>Sets the shim of ObjectPoolingAttribute.get_MinPoolSize()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.MinPoolSizeSetInt32">
            <summary>Sets the shim of ObjectPoolingAttribute.set_MinPoolSize(Int32 value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.AllInstances.AfterSaveChangesHashtable">
            <summary>Sets the shim of ObjectPoolingAttribute.AfterSaveChanges(Hashtable info)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.AllInstances.ApplyHashtable">
            <summary>Sets the shim of ObjectPoolingAttribute.Apply(Hashtable info)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.AllInstances.CreationTimeoutGet">
            <summary>Sets the shim of ObjectPoolingAttribute.get_CreationTimeout()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.AllInstances.CreationTimeoutSetInt32">
            <summary>Sets the shim of ObjectPoolingAttribute.set_CreationTimeout(Int32 value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.AllInstances.EnabledGet">
            <summary>Sets the shim of ObjectPoolingAttribute.get_Enabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.AllInstances.EnabledSetBoolean">
            <summary>Sets the shim of ObjectPoolingAttribute.set_Enabled(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.AllInstances.IsValidTargetString">
            <summary>Sets the shim of ObjectPoolingAttribute.IsValidTarget(String s)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.AllInstances.MaxPoolSizeGet">
            <summary>Sets the shim of ObjectPoolingAttribute.get_MaxPoolSize()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.AllInstances.MaxPoolSizeSetInt32">
            <summary>Sets the shim of ObjectPoolingAttribute.set_MaxPoolSize(Int32 value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.AllInstances.MinPoolSizeGet">
            <summary>Sets the shim of ObjectPoolingAttribute.get_MinPoolSize()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimObjectPoolingAttribute.AllInstances.MinPoolSizeSetInt32">
            <summary>Sets the shim of ObjectPoolingAttribute.set_MinPoolSize(Int32 value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimPrivateComponentAttribute">
            <summary>Shim type of System.EnterpriseServices.PrivateComponentAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimPrivateComponentAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimPrivateComponentAttribute.#ctor(System.EnterpriseServices.PrivateComponentAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimPrivateComponentAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimPrivateComponentAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimPrivateComponentAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimPrivateComponentAttribute.Constructor">
            <summary>Sets the shim of PrivateComponentAttribute.PrivateComponentAttribute()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimPrivateComponentAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimRegistrationConfig">
            <summary>Shim type of System.EnterpriseServices.RegistrationConfig</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationConfig.#ctor(System.EnterpriseServices.RegistrationConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.ApplicationGet">
            <summary>Sets the shim of RegistrationConfig.get_Application()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.ApplicationRootDirectoryGet">
            <summary>Sets the shim of RegistrationConfig.get_ApplicationRootDirectory()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.ApplicationRootDirectorySetString">
            <summary>Sets the shim of RegistrationConfig.set_ApplicationRootDirectory(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.ApplicationSetString">
            <summary>Sets the shim of RegistrationConfig.set_Application(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AssemblyFileGet">
            <summary>Sets the shim of RegistrationConfig.get_AssemblyFile()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AssemblyFileSetString">
            <summary>Sets the shim of RegistrationConfig.set_AssemblyFile(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.Constructor">
            <summary>Sets the shim of RegistrationConfig.RegistrationConfig()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.InstallationFlagsGet">
            <summary>Sets the shim of RegistrationConfig.get_InstallationFlags()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.InstallationFlagsSetInstallationFlags">
            <summary>Sets the shim of RegistrationConfig.set_InstallationFlags(InstallationFlags value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.PartitionGet">
            <summary>Sets the shim of RegistrationConfig.get_Partition()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.PartitionSetString">
            <summary>Sets the shim of RegistrationConfig.set_Partition(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.TypeLibraryGet">
            <summary>Sets the shim of RegistrationConfig.get_TypeLibrary()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.TypeLibrarySetString">
            <summary>Sets the shim of RegistrationConfig.set_TypeLibrary(String value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AllInstances.ApplicationGet">
            <summary>Sets the shim of RegistrationConfig.get_Application()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AllInstances.ApplicationRootDirectoryGet">
            <summary>Sets the shim of RegistrationConfig.get_ApplicationRootDirectory()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AllInstances.ApplicationRootDirectorySetString">
            <summary>Sets the shim of RegistrationConfig.set_ApplicationRootDirectory(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AllInstances.ApplicationSetString">
            <summary>Sets the shim of RegistrationConfig.set_Application(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AllInstances.AssemblyFileGet">
            <summary>Sets the shim of RegistrationConfig.get_AssemblyFile()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AllInstances.AssemblyFileSetString">
            <summary>Sets the shim of RegistrationConfig.set_AssemblyFile(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AllInstances.InstallationFlagsGet">
            <summary>Sets the shim of RegistrationConfig.get_InstallationFlags()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AllInstances.InstallationFlagsSetInstallationFlags">
            <summary>Sets the shim of RegistrationConfig.set_InstallationFlags(InstallationFlags value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AllInstances.PartitionGet">
            <summary>Sets the shim of RegistrationConfig.get_Partition()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AllInstances.PartitionSetString">
            <summary>Sets the shim of RegistrationConfig.set_Partition(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AllInstances.TypeLibraryGet">
            <summary>Sets the shim of RegistrationConfig.get_TypeLibrary()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationConfig.AllInstances.TypeLibrarySetString">
            <summary>Sets the shim of RegistrationConfig.set_TypeLibrary(String value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo">
            <summary>Shim type of System.EnterpriseServices.RegistrationErrorInfo</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.#ctor(System.EnterpriseServices.RegistrationErrorInfo)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.Constructor">
            <summary>Sets the shim of RegistrationErrorInfo.RegistrationErrorInfo()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.ErrorCodeGet">
            <summary>Sets the shim of RegistrationErrorInfo.get_ErrorCode()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.ErrorStringGet">
            <summary>Sets the shim of RegistrationErrorInfo.get_ErrorString()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.MajorRefGet">
            <summary>Sets the shim of RegistrationErrorInfo.get_MajorRef()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.MinorRefGet">
            <summary>Sets the shim of RegistrationErrorInfo.get_MinorRef()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.NameGet">
            <summary>Sets the shim of RegistrationErrorInfo.get_Name()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.AllInstances.Constructor">
            <summary>Sets the shim of RegistrationErrorInfo.RegistrationErrorInfo()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.AllInstances.ErrorCodeGet">
            <summary>Sets the shim of RegistrationErrorInfo.get_ErrorCode()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.AllInstances.ErrorStringGet">
            <summary>Sets the shim of RegistrationErrorInfo.get_ErrorString()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.AllInstances.MajorRefGet">
            <summary>Sets the shim of RegistrationErrorInfo.get_MajorRef()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.AllInstances.MinorRefGet">
            <summary>Sets the shim of RegistrationErrorInfo.get_MinorRef()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationErrorInfo.AllInstances.NameGet">
            <summary>Sets the shim of RegistrationErrorInfo.get_Name()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimRegistrationException">
            <summary>Shim type of System.EnterpriseServices.RegistrationException</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationException.#ctor(System.EnterpriseServices.RegistrationException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationException.Constructor">
            <summary>Sets the shim of RegistrationException.RegistrationException()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of RegistrationException.RegistrationException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationException.ConstructorString">
            <summary>Sets the shim of RegistrationException.RegistrationException(String msg)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationException.ConstructorStringException">
            <summary>Sets the shim of RegistrationException.RegistrationException(String msg, Exception inner)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationException.ErrorInfoGet">
            <summary>Sets the shim of RegistrationException.get_ErrorInfo()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationException.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of RegistrationException.GetObjectData(SerializationInfo info, StreamingContext ctx)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimRegistrationException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationException.AllInstances.ErrorInfoGet">
            <summary>Sets the shim of RegistrationException.get_ErrorInfo()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationException.AllInstances.GetObjectDataSerializationInfoStreamingContext">
            <summary>Sets the shim of RegistrationException.GetObjectData(SerializationInfo info, StreamingContext ctx)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimRegistrationHelper">
            <summary>Shim type of System.EnterpriseServices.RegistrationHelper</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationHelper.#ctor(System.EnterpriseServices.RegistrationHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimRegistrationHelper.Bind(System.EnterpriseServices.IRegistrationHelper)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationHelper.Constructor">
            <summary>Sets the shim of RegistrationHelper.RegistrationHelper()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationHelper.InstallAssemblyFromConfigRegistrationConfigRef">
            <summary>Sets the shim of RegistrationHelper.InstallAssemblyFromConfig(RegistrationConfig&amp; regConfig)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationHelper.UninstallAssemblyFromConfigRegistrationConfigRef">
            <summary>Sets the shim of RegistrationHelper.UninstallAssemblyFromConfig(RegistrationConfig&amp; regConfig)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationHelper.UninstallAssemblyStringString">
            <summary>Sets the shim of RegistrationHelper.UninstallAssembly(String assembly, String application)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationHelper.UninstallAssemblyStringStringString">
            <summary>Sets the shim of RegistrationHelper.UninstallAssembly(String assembly, String application, String partition)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimRegistrationHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationHelper.AllInstances.InstallAssemblyFromConfigRegistrationConfigRef">
            <summary>Sets the shim of RegistrationHelper.InstallAssemblyFromConfig(RegistrationConfig&amp; regConfig)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationHelper.AllInstances.UninstallAssemblyFromConfigRegistrationConfigRef">
            <summary>Sets the shim of RegistrationHelper.UninstallAssemblyFromConfig(RegistrationConfig&amp; regConfig)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationHelper.AllInstances.UninstallAssemblyStringString">
            <summary>Sets the shim of RegistrationHelper.UninstallAssembly(String assembly, String application)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimRegistrationHelper.AllInstances.UninstallAssemblyStringStringString">
            <summary>Sets the shim of RegistrationHelper.UninstallAssembly(String assembly, String application, String partition)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimResourcePool">
            <summary>Shim type of System.EnterpriseServices.ResourcePool</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimResourcePool.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimResourcePool.#ctor(System.EnterpriseServices.ResourcePool)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimResourcePool.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimResourcePool.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimResourcePool.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimResourcePool.ConstructorResourcePoolTransactionEndDelegate">
            <summary>Sets the shim of ResourcePool.ResourcePool(TransactionEndDelegate cb)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimResourcePool.GetResource">
            <summary>Sets the shim of ResourcePool.GetResource()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimResourcePool.PutResourceObject">
            <summary>Sets the shim of ResourcePool.PutResource(Object resource)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimResourcePool.StaticConstructor">
            <summary>Sets the shim of ResourcePool.ResourcePool()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimResourcePool.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimResourcePool.AllInstances.GetResource">
            <summary>Sets the shim of ResourcePool.GetResource()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimResourcePool.AllInstances.PutResourceObject">
            <summary>Sets the shim of ResourcePool.PutResource(Object resource)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSecureMethodAttribute">
            <summary>Shim type of System.EnterpriseServices.SecureMethodAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecureMethodAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecureMethodAttribute.#ctor(System.EnterpriseServices.SecureMethodAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecureMethodAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecureMethodAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecureMethodAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecureMethodAttribute.Constructor">
            <summary>Sets the shim of SecureMethodAttribute.SecureMethodAttribute()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSecureMethodAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSecurityCallContext">
            <summary>Shim type of System.EnterpriseServices.SecurityCallContext</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityCallContext.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityCallContext.#ctor(System.EnterpriseServices.SecurityCallContext)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityCallContext.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityCallContext.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.CallersGet">
            <summary>Sets the shim of SecurityCallContext.get_Callers()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.Constructor">
            <summary>Sets the shim of SecurityCallContext.SecurityCallContext()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.CurrentCallGet">
            <summary>Sets the shim of SecurityCallContext.get_CurrentCall()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.DirectCallerGet">
            <summary>Sets the shim of SecurityCallContext.get_DirectCaller()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.IsCallerInRoleString">
            <summary>Sets the shim of SecurityCallContext.IsCallerInRole(String role)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.IsSecurityEnabledGet">
            <summary>Sets the shim of SecurityCallContext.get_IsSecurityEnabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.IsUserInRoleStringString">
            <summary>Sets the shim of SecurityCallContext.IsUserInRole(String user, String role)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.MinAuthenticationLevelGet">
            <summary>Sets the shim of SecurityCallContext.get_MinAuthenticationLevel()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.NumCallersGet">
            <summary>Sets the shim of SecurityCallContext.get_NumCallers()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.OriginalCallerGet">
            <summary>Sets the shim of SecurityCallContext.get_OriginalCaller()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSecurityCallContext.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.AllInstances.CallersGet">
            <summary>Sets the shim of SecurityCallContext.get_Callers()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.AllInstances.DirectCallerGet">
            <summary>Sets the shim of SecurityCallContext.get_DirectCaller()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.AllInstances.IsCallerInRoleString">
            <summary>Sets the shim of SecurityCallContext.IsCallerInRole(String role)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.AllInstances.IsSecurityEnabledGet">
            <summary>Sets the shim of SecurityCallContext.get_IsSecurityEnabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.AllInstances.IsUserInRoleStringString">
            <summary>Sets the shim of SecurityCallContext.IsUserInRole(String user, String role)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.AllInstances.MinAuthenticationLevelGet">
            <summary>Sets the shim of SecurityCallContext.get_MinAuthenticationLevel()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.AllInstances.NumCallersGet">
            <summary>Sets the shim of SecurityCallContext.get_NumCallers()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallContext.AllInstances.OriginalCallerGet">
            <summary>Sets the shim of SecurityCallContext.get_OriginalCaller()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSecurityCallers">
            <summary>Shim type of System.EnterpriseServices.SecurityCallers</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityCallers.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityCallers.#ctor(System.EnterpriseServices.SecurityCallers)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityCallers.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityCallers.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityCallers.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallers.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallers.Constructor">
            <summary>Sets the shim of SecurityCallers.SecurityCallers()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallers.CountGet">
            <summary>Sets the shim of SecurityCallers.get_Count()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallers.GetEnumerator">
            <summary>Sets the shim of SecurityCallers.GetEnumerator()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallers.ItemGetInt32">
            <summary>Sets the shim of SecurityCallers.get_Item(Int32 idx)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSecurityCallers.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallers.AllInstances.CountGet">
            <summary>Sets the shim of SecurityCallers.get_Count()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallers.AllInstances.GetEnumerator">
            <summary>Sets the shim of SecurityCallers.GetEnumerator()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityCallers.AllInstances.ItemGetInt32">
            <summary>Sets the shim of SecurityCallers.get_Item(Int32 idx)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSecurityIdentity">
            <summary>Shim type of System.EnterpriseServices.SecurityIdentity</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityIdentity.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityIdentity.#ctor(System.EnterpriseServices.SecurityIdentity)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityIdentity.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityIdentity.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityIdentity.AccountNameGet">
            <summary>Sets the shim of SecurityIdentity.get_AccountName()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityIdentity.AuthenticationLevelGet">
            <summary>Sets the shim of SecurityIdentity.get_AuthenticationLevel()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityIdentity.AuthenticationServiceGet">
            <summary>Sets the shim of SecurityIdentity.get_AuthenticationService()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityIdentity.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityIdentity.Constructor">
            <summary>Sets the shim of SecurityIdentity.SecurityIdentity()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityIdentity.ImpersonationLevelGet">
            <summary>Sets the shim of SecurityIdentity.get_ImpersonationLevel()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSecurityIdentity.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityIdentity.AllInstances.AccountNameGet">
            <summary>Sets the shim of SecurityIdentity.get_AccountName()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityIdentity.AllInstances.AuthenticationLevelGet">
            <summary>Sets the shim of SecurityIdentity.get_AuthenticationLevel()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityIdentity.AllInstances.AuthenticationServiceGet">
            <summary>Sets the shim of SecurityIdentity.get_AuthenticationService()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityIdentity.AllInstances.ImpersonationLevelGet">
            <summary>Sets the shim of SecurityIdentity.get_ImpersonationLevel()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute">
            <summary>Shim type of System.EnterpriseServices.SecurityRoleAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.#ctor(System.EnterpriseServices.SecurityRoleAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.ConstructorString">
            <summary>Sets the shim of SecurityRoleAttribute.SecurityRoleAttribute(String role)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.ConstructorStringBoolean">
            <summary>Sets the shim of SecurityRoleAttribute.SecurityRoleAttribute(String role, Boolean everyone)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.DescriptionGet">
            <summary>Sets the shim of SecurityRoleAttribute.get_Description()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.DescriptionSetString">
            <summary>Sets the shim of SecurityRoleAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.RoleGet">
            <summary>Sets the shim of SecurityRoleAttribute.get_Role()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.RoleSetString">
            <summary>Sets the shim of SecurityRoleAttribute.set_Role(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.SetEveryoneAccessGet">
            <summary>Sets the shim of SecurityRoleAttribute.get_SetEveryoneAccess()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.SetEveryoneAccessSetBoolean">
            <summary>Sets the shim of SecurityRoleAttribute.set_SetEveryoneAccess(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.StaticConstructor">
            <summary>Sets the shim of SecurityRoleAttribute.SecurityRoleAttribute()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.AllInstances.DescriptionGet">
            <summary>Sets the shim of SecurityRoleAttribute.get_Description()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.AllInstances.DescriptionSetString">
            <summary>Sets the shim of SecurityRoleAttribute.set_Description(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.AllInstances.RoleGet">
            <summary>Sets the shim of SecurityRoleAttribute.get_Role()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.AllInstances.RoleSetString">
            <summary>Sets the shim of SecurityRoleAttribute.set_Role(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.AllInstances.SetEveryoneAccessGet">
            <summary>Sets the shim of SecurityRoleAttribute.get_SetEveryoneAccess()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSecurityRoleAttribute.AllInstances.SetEveryoneAccessSetBoolean">
            <summary>Sets the shim of SecurityRoleAttribute.set_SetEveryoneAccess(Boolean value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimServiceConfig">
            <summary>Shim type of System.EnterpriseServices.ServiceConfig</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServiceConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServiceConfig.#ctor(System.EnterpriseServices.ServiceConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServiceConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServiceConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.BindingGet">
            <summary>Sets the shim of ServiceConfig.get_Binding()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.BindingSetBindingOption">
            <summary>Sets the shim of ServiceConfig.set_Binding(BindingOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.BringYourOwnSystemTransactionGet">
            <summary>Sets the shim of ServiceConfig.get_BringYourOwnSystemTransaction()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.BringYourOwnSystemTransactionSetTransaction">
            <summary>Sets the shim of ServiceConfig.set_BringYourOwnSystemTransaction(Transaction value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.BringYourOwnTransactionGet">
            <summary>Sets the shim of ServiceConfig.get_BringYourOwnTransaction()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.BringYourOwnTransactionSetITransaction">
            <summary>Sets the shim of ServiceConfig.set_BringYourOwnTransaction(ITransaction value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.COMTIIntrinsicsEnabledGet">
            <summary>Sets the shim of ServiceConfig.get_COMTIIntrinsicsEnabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.COMTIIntrinsicsEnabledSetBoolean">
            <summary>Sets the shim of ServiceConfig.set_COMTIIntrinsicsEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.Constructor">
            <summary>Sets the shim of ServiceConfig.ServiceConfig()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.IISIntrinsicsEnabledGet">
            <summary>Sets the shim of ServiceConfig.get_IISIntrinsicsEnabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.IISIntrinsicsEnabledSetBoolean">
            <summary>Sets the shim of ServiceConfig.set_IISIntrinsicsEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.InheritanceGet">
            <summary>Sets the shim of ServiceConfig.get_Inheritance()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.InheritanceSetInheritanceOption">
            <summary>Sets the shim of ServiceConfig.set_Inheritance(InheritanceOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.IsolationLevelGet">
            <summary>Sets the shim of ServiceConfig.get_IsolationLevel()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.IsolationLevelSetTransactionIsolationLevel">
            <summary>Sets the shim of ServiceConfig.set_IsolationLevel(TransactionIsolationLevel value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.PartitionIdGet">
            <summary>Sets the shim of ServiceConfig.get_PartitionId()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.PartitionIdSetGuid">
            <summary>Sets the shim of ServiceConfig.set_PartitionId(Guid value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.PartitionOptionGet">
            <summary>Sets the shim of ServiceConfig.get_PartitionOption()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.PartitionOptionSetPartitionOption">
            <summary>Sets the shim of ServiceConfig.set_PartitionOption(PartitionOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.SxsDirectoryGet">
            <summary>Sets the shim of ServiceConfig.get_SxsDirectory()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.SxsDirectorySetString">
            <summary>Sets the shim of ServiceConfig.set_SxsDirectory(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.SxsNameGet">
            <summary>Sets the shim of ServiceConfig.get_SxsName()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.SxsNameSetString">
            <summary>Sets the shim of ServiceConfig.set_SxsName(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.SxsOptionGet">
            <summary>Sets the shim of ServiceConfig.get_SxsOption()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.SxsOptionSetSxsOption">
            <summary>Sets the shim of ServiceConfig.set_SxsOption(SxsOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.SynchronizationGet">
            <summary>Sets the shim of ServiceConfig.get_Synchronization()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.SynchronizationSetSynchronizationOption">
            <summary>Sets the shim of ServiceConfig.set_Synchronization(SynchronizationOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.ThreadPoolGet">
            <summary>Sets the shim of ServiceConfig.get_ThreadPool()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.ThreadPoolSetThreadPoolOption">
            <summary>Sets the shim of ServiceConfig.set_ThreadPool(ThreadPoolOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TipUrlGet">
            <summary>Sets the shim of ServiceConfig.get_TipUrl()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TipUrlSetString">
            <summary>Sets the shim of ServiceConfig.set_TipUrl(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TrackingAppNameGet">
            <summary>Sets the shim of ServiceConfig.get_TrackingAppName()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TrackingAppNameSetString">
            <summary>Sets the shim of ServiceConfig.set_TrackingAppName(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TrackingComponentNameGet">
            <summary>Sets the shim of ServiceConfig.get_TrackingComponentName()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TrackingComponentNameSetString">
            <summary>Sets the shim of ServiceConfig.set_TrackingComponentName(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TrackingEnabledGet">
            <summary>Sets the shim of ServiceConfig.get_TrackingEnabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TrackingEnabledSetBoolean">
            <summary>Sets the shim of ServiceConfig.set_TrackingEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TransactionDescriptionGet">
            <summary>Sets the shim of ServiceConfig.get_TransactionDescription()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TransactionDescriptionSetString">
            <summary>Sets the shim of ServiceConfig.set_TransactionDescription(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TransactionGet">
            <summary>Sets the shim of ServiceConfig.get_Transaction()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TransactionSetTransactionOption">
            <summary>Sets the shim of ServiceConfig.set_Transaction(TransactionOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TransactionTimeoutGet">
            <summary>Sets the shim of ServiceConfig.get_TransactionTimeout()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.TransactionTimeoutSetInt32">
            <summary>Sets the shim of ServiceConfig.set_TransactionTimeout(Int32 value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.BindingGet">
            <summary>Sets the shim of ServiceConfig.get_Binding()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.BindingSetBindingOption">
            <summary>Sets the shim of ServiceConfig.set_Binding(BindingOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.BringYourOwnSystemTransactionGet">
            <summary>Sets the shim of ServiceConfig.get_BringYourOwnSystemTransaction()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.BringYourOwnSystemTransactionSetTransaction">
            <summary>Sets the shim of ServiceConfig.set_BringYourOwnSystemTransaction(Transaction value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.BringYourOwnTransactionGet">
            <summary>Sets the shim of ServiceConfig.get_BringYourOwnTransaction()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.BringYourOwnTransactionSetITransaction">
            <summary>Sets the shim of ServiceConfig.set_BringYourOwnTransaction(ITransaction value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.COMTIIntrinsicsEnabledGet">
            <summary>Sets the shim of ServiceConfig.get_COMTIIntrinsicsEnabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.COMTIIntrinsicsEnabledSetBoolean">
            <summary>Sets the shim of ServiceConfig.set_COMTIIntrinsicsEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.IISIntrinsicsEnabledGet">
            <summary>Sets the shim of ServiceConfig.get_IISIntrinsicsEnabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.IISIntrinsicsEnabledSetBoolean">
            <summary>Sets the shim of ServiceConfig.set_IISIntrinsicsEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.InheritanceGet">
            <summary>Sets the shim of ServiceConfig.get_Inheritance()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.InheritanceSetInheritanceOption">
            <summary>Sets the shim of ServiceConfig.set_Inheritance(InheritanceOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.IsolationLevelGet">
            <summary>Sets the shim of ServiceConfig.get_IsolationLevel()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.IsolationLevelSetTransactionIsolationLevel">
            <summary>Sets the shim of ServiceConfig.set_IsolationLevel(TransactionIsolationLevel value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.PartitionIdGet">
            <summary>Sets the shim of ServiceConfig.get_PartitionId()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.PartitionIdSetGuid">
            <summary>Sets the shim of ServiceConfig.set_PartitionId(Guid value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.PartitionOptionGet">
            <summary>Sets the shim of ServiceConfig.get_PartitionOption()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.PartitionOptionSetPartitionOption">
            <summary>Sets the shim of ServiceConfig.set_PartitionOption(PartitionOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.SxsDirectoryGet">
            <summary>Sets the shim of ServiceConfig.get_SxsDirectory()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.SxsDirectorySetString">
            <summary>Sets the shim of ServiceConfig.set_SxsDirectory(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.SxsNameGet">
            <summary>Sets the shim of ServiceConfig.get_SxsName()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.SxsNameSetString">
            <summary>Sets the shim of ServiceConfig.set_SxsName(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.SxsOptionGet">
            <summary>Sets the shim of ServiceConfig.get_SxsOption()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.SxsOptionSetSxsOption">
            <summary>Sets the shim of ServiceConfig.set_SxsOption(SxsOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.SynchronizationGet">
            <summary>Sets the shim of ServiceConfig.get_Synchronization()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.SynchronizationSetSynchronizationOption">
            <summary>Sets the shim of ServiceConfig.set_Synchronization(SynchronizationOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.ThreadPoolGet">
            <summary>Sets the shim of ServiceConfig.get_ThreadPool()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.ThreadPoolSetThreadPoolOption">
            <summary>Sets the shim of ServiceConfig.set_ThreadPool(ThreadPoolOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TipUrlGet">
            <summary>Sets the shim of ServiceConfig.get_TipUrl()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TipUrlSetString">
            <summary>Sets the shim of ServiceConfig.set_TipUrl(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TrackingAppNameGet">
            <summary>Sets the shim of ServiceConfig.get_TrackingAppName()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TrackingAppNameSetString">
            <summary>Sets the shim of ServiceConfig.set_TrackingAppName(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TrackingComponentNameGet">
            <summary>Sets the shim of ServiceConfig.get_TrackingComponentName()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TrackingComponentNameSetString">
            <summary>Sets the shim of ServiceConfig.set_TrackingComponentName(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TrackingEnabledGet">
            <summary>Sets the shim of ServiceConfig.get_TrackingEnabled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TrackingEnabledSetBoolean">
            <summary>Sets the shim of ServiceConfig.set_TrackingEnabled(Boolean value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TransactionDescriptionGet">
            <summary>Sets the shim of ServiceConfig.get_TransactionDescription()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TransactionDescriptionSetString">
            <summary>Sets the shim of ServiceConfig.set_TransactionDescription(String value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TransactionGet">
            <summary>Sets the shim of ServiceConfig.get_Transaction()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TransactionSetTransactionOption">
            <summary>Sets the shim of ServiceConfig.set_Transaction(TransactionOption value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TransactionTimeoutGet">
            <summary>Sets the shim of ServiceConfig.get_TransactionTimeout()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceConfig.AllInstances.TransactionTimeoutSetInt32">
            <summary>Sets the shim of ServiceConfig.set_TransactionTimeout(Int32 value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimServiceDomain">
            <summary>Shim type of System.EnterpriseServices.ServiceDomain</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServiceDomain.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServiceDomain.#ctor(System.EnterpriseServices.ServiceDomain)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServiceDomain.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServiceDomain.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceDomain.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceDomain.Constructor">
            <summary>Sets the shim of ServiceDomain.ServiceDomain()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceDomain.EnterServiceConfig">
            <summary>Sets the shim of ServiceDomain.Enter(ServiceConfig cfg)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServiceDomain.Leave">
            <summary>Sets the shim of ServiceDomain.Leave()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimServiceDomain.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimServicedComponent">
            <summary>Shim type of System.EnterpriseServices.ServicedComponent</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServicedComponent.#ctor(System.EnterpriseServices.ServicedComponent)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServicedComponent.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServicedComponent.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServicedComponent.Bind(System.EnterpriseServices.IRemoteDispatch)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServicedComponent.Bind(System.EnterpriseServices.IServicedComponentInfo)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServicedComponent.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.Activate">
            <summary>Sets the shim of ServicedComponent.Activate()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.CanBePooled">
            <summary>Sets the shim of ServicedComponent.CanBePooled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.ConstructString">
            <summary>Sets the shim of ServicedComponent.Construct(String s)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.Constructor">
            <summary>Sets the shim of ServicedComponent.ServicedComponent()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.Deactivate">
            <summary>Sets the shim of ServicedComponent.Deactivate()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.Dispose">
            <summary>Sets the shim of ServicedComponent.Dispose()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.DisposeBoolean">
            <summary>Sets the shim of ServicedComponent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.DisposeObjectServicedComponent">
            <summary>Sets the shim of ServicedComponent.DisposeObject(ServicedComponent sc)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.StaticConstructor">
            <summary>Sets the shim of ServicedComponent.ServicedComponent()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.SystemEnterpriseServicesIRemoteDispatchRemoteDispatchAutoDoneString">
            <summary>Sets the shim of ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String s)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.SystemEnterpriseServicesIRemoteDispatchRemoteDispatchNotAutoDoneString">
            <summary>Sets the shim of ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String s)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimServicedComponent.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.AllInstances.Activate">
            <summary>Sets the shim of ServicedComponent.Activate()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.AllInstances.CanBePooled">
            <summary>Sets the shim of ServicedComponent.CanBePooled()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.AllInstances.ConstructString">
            <summary>Sets the shim of ServicedComponent.Construct(String s)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.AllInstances.Deactivate">
            <summary>Sets the shim of ServicedComponent.Deactivate()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.AllInstances.Dispose">
            <summary>Sets the shim of ServicedComponent.Dispose()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.AllInstances.DisposeBoolean">
            <summary>Sets the shim of ServicedComponent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.AllInstances.SystemEnterpriseServicesIRemoteDispatchRemoteDispatchAutoDoneString">
            <summary>Sets the shim of ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchAutoDone(String s)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponent.AllInstances.SystemEnterpriseServicesIRemoteDispatchRemoteDispatchNotAutoDoneString">
            <summary>Sets the shim of ServicedComponent.System.EnterpriseServices.IRemoteDispatch.RemoteDispatchNotAutoDone(String s)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimServicedComponentException">
            <summary>Shim type of System.EnterpriseServices.ServicedComponentException</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServicedComponentException.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServicedComponentException.#ctor(System.EnterpriseServices.ServicedComponentException)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServicedComponentException.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServicedComponentException.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimServicedComponentException.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponentException.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponentException.Constructor">
            <summary>Sets the shim of ServicedComponentException.ServicedComponentException()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponentException.ConstructorSerializationInfoStreamingContext">
            <summary>Sets the shim of ServicedComponentException.ServicedComponentException(SerializationInfo info, StreamingContext context)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponentException.ConstructorString">
            <summary>Sets the shim of ServicedComponentException.ServicedComponentException(String message)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponentException.ConstructorStringException">
            <summary>Sets the shim of ServicedComponentException.ServicedComponentException(String message, Exception innerException)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimServicedComponentException.StaticConstructor">
            <summary>Sets the shim of ServicedComponentException.ServicedComponentException()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimServicedComponentException.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSharedProperty">
            <summary>Shim type of System.EnterpriseServices.SharedProperty</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSharedProperty.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSharedProperty.#ctor(System.EnterpriseServices.SharedProperty)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSharedProperty.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSharedProperty.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedProperty.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedProperty.Constructor">
            <summary>Sets the shim of SharedProperty.SharedProperty()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedProperty.ValueGet">
            <summary>Sets the shim of SharedProperty.get_Value()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedProperty.ValueSetObject">
            <summary>Sets the shim of SharedProperty.set_Value(Object value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSharedProperty.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedProperty.AllInstances.Constructor">
            <summary>Sets the shim of SharedProperty.SharedProperty()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedProperty.AllInstances.ValueGet">
            <summary>Sets the shim of SharedProperty.get_Value()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedProperty.AllInstances.ValueSetObject">
            <summary>Sets the shim of SharedProperty.set_Value(Object value)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup">
            <summary>Shim type of System.EnterpriseServices.SharedPropertyGroup</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.#ctor(System.EnterpriseServices.SharedPropertyGroup)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.Constructor">
            <summary>Sets the shim of SharedPropertyGroup.SharedPropertyGroup()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.CreatePropertyByPositionInt32BooleanOut">
            <summary>Sets the shim of SharedPropertyGroup.CreatePropertyByPosition(Int32 position, Boolean&amp; fExists)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.CreatePropertyStringBooleanOut">
            <summary>Sets the shim of SharedPropertyGroup.CreateProperty(String name, Boolean&amp; fExists)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.PropertyByPositionInt32">
            <summary>Sets the shim of SharedPropertyGroup.PropertyByPosition(Int32 position)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.PropertyString">
            <summary>Sets the shim of SharedPropertyGroup.Property(String name)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.AllInstances.Constructor">
            <summary>Sets the shim of SharedPropertyGroup.SharedPropertyGroup()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.AllInstances.CreatePropertyByPositionInt32BooleanOut">
            <summary>Sets the shim of SharedPropertyGroup.CreatePropertyByPosition(Int32 position, Boolean&amp; fExists)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.AllInstances.CreatePropertyStringBooleanOut">
            <summary>Sets the shim of SharedPropertyGroup.CreateProperty(String name, Boolean&amp; fExists)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.AllInstances.PropertyByPositionInt32">
            <summary>Sets the shim of SharedPropertyGroup.PropertyByPosition(Int32 position)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroup.AllInstances.PropertyString">
            <summary>Sets the shim of SharedPropertyGroup.Property(String name)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSharedPropertyGroupManager">
            <summary>Shim type of System.EnterpriseServices.SharedPropertyGroupManager</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSharedPropertyGroupManager.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSharedPropertyGroupManager.#ctor(System.EnterpriseServices.SharedPropertyGroupManager)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSharedPropertyGroupManager.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSharedPropertyGroupManager.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSharedPropertyGroupManager.Bind(System.Collections.IEnumerable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroupManager.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroupManager.Constructor">
            <summary>Sets the shim of SharedPropertyGroupManager.SharedPropertyGroupManager()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroupManager.GetEnumerator">
            <summary>Sets the shim of SharedPropertyGroupManager.GetEnumerator()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroupManager.GroupString">
            <summary>Sets the shim of SharedPropertyGroupManager.Group(String name)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSharedPropertyGroupManager.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroupManager.AllInstances.GetEnumerator">
            <summary>Sets the shim of SharedPropertyGroupManager.GetEnumerator()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSharedPropertyGroupManager.AllInstances.GroupString">
            <summary>Sets the shim of SharedPropertyGroupManager.Group(String name)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSynchronizationAttribute">
            <summary>Shim type of System.EnterpriseServices.SynchronizationAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSynchronizationAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSynchronizationAttribute.#ctor(System.EnterpriseServices.SynchronizationAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSynchronizationAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimSynchronizationAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSynchronizationAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSynchronizationAttribute.Constructor">
            <summary>Sets the shim of SynchronizationAttribute.SynchronizationAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSynchronizationAttribute.ConstructorSynchronizationOption">
            <summary>Sets the shim of SynchronizationAttribute.SynchronizationAttribute(SynchronizationOption val)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSynchronizationAttribute.ValueGet">
            <summary>Sets the shim of SynchronizationAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimSynchronizationAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimSynchronizationAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of SynchronizationAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimTransactionAttribute">
            <summary>Shim type of System.EnterpriseServices.TransactionAttribute</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimTransactionAttribute.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimTransactionAttribute.#ctor(System.EnterpriseServices.TransactionAttribute)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimTransactionAttribute.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimTransactionAttribute.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimTransactionAttribute.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimTransactionAttribute.Constructor">
            <summary>Sets the shim of TransactionAttribute.TransactionAttribute()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimTransactionAttribute.ConstructorTransactionOption">
            <summary>Sets the shim of TransactionAttribute.TransactionAttribute(TransactionOption val)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimTransactionAttribute.IsolationGet">
            <summary>Sets the shim of TransactionAttribute.get_Isolation()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimTransactionAttribute.IsolationSetTransactionIsolationLevel">
            <summary>Sets the shim of TransactionAttribute.set_Isolation(TransactionIsolationLevel value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimTransactionAttribute.TimeoutGet">
            <summary>Sets the shim of TransactionAttribute.get_Timeout()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimTransactionAttribute.TimeoutSetInt32">
            <summary>Sets the shim of TransactionAttribute.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimTransactionAttribute.ValueGet">
            <summary>Sets the shim of TransactionAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimTransactionAttribute.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimTransactionAttribute.AllInstances.IsolationGet">
            <summary>Sets the shim of TransactionAttribute.get_Isolation()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimTransactionAttribute.AllInstances.IsolationSetTransactionIsolationLevel">
            <summary>Sets the shim of TransactionAttribute.set_Isolation(TransactionIsolationLevel value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimTransactionAttribute.AllInstances.TimeoutGet">
            <summary>Sets the shim of TransactionAttribute.get_Timeout()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimTransactionAttribute.AllInstances.TimeoutSetInt32">
            <summary>Sets the shim of TransactionAttribute.set_Timeout(Int32 value)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimTransactionAttribute.AllInstances.ValueGet">
            <summary>Sets the shim of TransactionAttribute.get_Value()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimXACTTRANSINFO">
            <summary>Shim type of System.EnterpriseServices.XACTTRANSINFO</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimXACTTRANSINFO.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimXACTTRANSINFO.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.ShimXACTTRANSINFO.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.ShimXACTTRANSINFO.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.ShimXACTTRANSINFO.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.StubIAsyncErrorNotify">
            <summary>Stub type of System.EnterpriseServices.IAsyncErrorNotify</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIAsyncErrorNotify.#ctor">
            <summary>Initializes a new instance of type StubIAsyncErrorNotify</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubIAsyncErrorNotify.OnErrorInt32">
            <summary>Sets the stub of IAsyncErrorNotify.OnError(Int32 hresult)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIAsyncErrorNotify.ses::System#EnterpriseServices#IAsyncErrorNotify#OnError(System.Int32)">
            <summary>Sets the stub of IAsyncErrorNotify.OnError(Int32 hresult)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.StubIPlaybackControl">
            <summary>Stub type of System.EnterpriseServices.IPlaybackControl</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIPlaybackControl.#ctor">
            <summary>Initializes a new instance of type StubIPlaybackControl</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubIPlaybackControl.FinalClientRetry">
            <summary>Sets the stub of IPlaybackControl.FinalClientRetry()</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubIPlaybackControl.FinalServerRetry">
            <summary>Sets the stub of IPlaybackControl.FinalServerRetry()</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIPlaybackControl.ses::System#EnterpriseServices#IPlaybackControl#FinalClientRetry">
            <summary>Sets the stub of IPlaybackControl.FinalClientRetry()</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIPlaybackControl.ses::System#EnterpriseServices#IPlaybackControl#FinalServerRetry">
            <summary>Sets the stub of IPlaybackControl.FinalServerRetry()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.StubIProcessInitControl">
            <summary>Stub type of System.EnterpriseServices.IProcessInitControl</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIProcessInitControl.#ctor">
            <summary>Initializes a new instance of type StubIProcessInitControl</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubIProcessInitControl.ResetInitializerTimeoutInt32">
            <summary>Sets the stub of IProcessInitControl.ResetInitializerTimeout(Int32 dwSecondsRemaining)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIProcessInitControl.ses::System#EnterpriseServices#IProcessInitControl#ResetInitializerTimeout(System.Int32)">
            <summary>Sets the stub of IProcessInitControl.ResetInitializerTimeout(Int32 dwSecondsRemaining)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.StubIProcessInitializer">
            <summary>Stub type of System.EnterpriseServices.IProcessInitializer</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIProcessInitializer.#ctor">
            <summary>Initializes a new instance of type StubIProcessInitializer</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubIProcessInitializer.Shutdown">
            <summary>Sets the stub of IProcessInitializer.Shutdown()</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubIProcessInitializer.StartupObject">
            <summary>Sets the stub of IProcessInitializer.Startup(Object punkProcessControl)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIProcessInitializer.ses::System#EnterpriseServices#IProcessInitializer#Shutdown">
            <summary>Sets the stub of IProcessInitializer.Shutdown()</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIProcessInitializer.ses::System#EnterpriseServices#IProcessInitializer#Startup(System.Object)">
            <summary>Sets the stub of IProcessInitializer.Startup(Object punkProcessControl)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.StubIRegistrationHelper">
            <summary>Stub type of System.EnterpriseServices.IRegistrationHelper</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIRegistrationHelper.#ctor">
            <summary>Initializes a new instance of type StubIRegistrationHelper</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubIRegistrationHelper.InstallAssemblyStringStringRefStringRefInstallationFlags">
            <summary>Sets the stub of IRegistrationHelper.InstallAssembly(String assembly, String&amp; application, String&amp; tlb, InstallationFlags installFlags)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIRegistrationHelper.ses::System#EnterpriseServices#IRegistrationHelper#InstallAssembly(System.String,System.String@,System.String@,System.EnterpriseServices.InstallationFlags)">
            <summary>Sets the stub of IRegistrationHelper.InstallAssembly(String assembly, String&amp; application, String&amp; tlb, InstallationFlags installFlags)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIRegistrationHelper.ses::System#EnterpriseServices#IRegistrationHelper#UninstallAssembly(System.String,System.String)">
            <summary>Sets the stub of IRegistrationHelper.UninstallAssembly(String assembly, String application)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubIRegistrationHelper.UninstallAssemblyStringString">
            <summary>Sets the stub of IRegistrationHelper.UninstallAssembly(String assembly, String application)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.StubIRemoteDispatch">
            <summary>Stub type of System.EnterpriseServices.IRemoteDispatch</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIRemoteDispatch.#ctor">
            <summary>Initializes a new instance of type StubIRemoteDispatch</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubIRemoteDispatch.RemoteDispatchAutoDoneString">
            <summary>Sets the stub of IRemoteDispatch.RemoteDispatchAutoDone(String s)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubIRemoteDispatch.RemoteDispatchNotAutoDoneString">
            <summary>Sets the stub of IRemoteDispatch.RemoteDispatchNotAutoDone(String s)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIRemoteDispatch.ses::System#EnterpriseServices#IRemoteDispatch#RemoteDispatchAutoDone(System.String)">
            <summary>Sets the stub of IRemoteDispatch.RemoteDispatchAutoDone(String s)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIRemoteDispatch.ses::System#EnterpriseServices#IRemoteDispatch#RemoteDispatchNotAutoDone(System.String)">
            <summary>Sets the stub of IRemoteDispatch.RemoteDispatchNotAutoDone(String s)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.StubIServiceCall">
            <summary>Stub type of System.EnterpriseServices.IServiceCall</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIServiceCall.#ctor">
            <summary>Initializes a new instance of type StubIServiceCall</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubIServiceCall.OnCall">
            <summary>Sets the stub of IServiceCall.OnCall()</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIServiceCall.ses::System#EnterpriseServices#IServiceCall#OnCall">
            <summary>Sets the stub of IServiceCall.OnCall()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.StubIServicedComponentInfo">
            <summary>Stub type of System.EnterpriseServices.IServicedComponentInfo</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIServicedComponentInfo.#ctor">
            <summary>Initializes a new instance of type StubIServicedComponentInfo</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubIServicedComponentInfo.GetComponentInfoInt32RefStringArrayOut">
            <summary>Sets the stub of IServicedComponentInfo.GetComponentInfo(Int32&amp; infoMask, String[]&amp; infoArray)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubIServicedComponentInfo.ses::System#EnterpriseServices#IServicedComponentInfo#GetComponentInfo(System.Int32@,System.String[]@)">
            <summary>Sets the stub of IServicedComponentInfo.GetComponentInfo(Int32&amp; infoMask, String[]&amp; infoArray)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.StubITransaction">
            <summary>Stub type of System.EnterpriseServices.ITransaction</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubITransaction.#ctor">
            <summary>Initializes a new instance of type StubITransaction</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubITransaction.AbortBOIDRefInt32Int32">
            <summary>Sets the stub of ITransaction.Abort(BOID&amp; pboidReason, Int32 fRetaining, Int32 fAsync)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubITransaction.CommitInt32Int32Int32">
            <summary>Sets the stub of ITransaction.Commit(Int32 fRetaining, Int32 grfTC, Int32 grfRM)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubITransaction.GetTransactionInfoXACTTRANSINFOOut">
            <summary>Sets the stub of ITransaction.GetTransactionInfo(XACTTRANSINFO&amp; pinfo)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubITransaction.ses::System#EnterpriseServices#ITransaction#Abort(System.EnterpriseServices.BOID@,System.Int32,System.Int32)">
            <summary>Sets the stub of ITransaction.Abort(BOID&amp; pboidReason, Int32 fRetaining, Int32 fAsync)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubITransaction.ses::System#EnterpriseServices#ITransaction#Commit(System.Int32,System.Int32,System.Int32)">
            <summary>Sets the stub of ITransaction.Commit(Int32 fRetaining, Int32 grfTC, Int32 grfRM)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubITransaction.ses::System#EnterpriseServices#ITransaction#GetTransactionInfo(System.EnterpriseServices.XACTTRANSINFO@)">
            <summary>Sets the stub of ITransaction.GetTransactionInfo(XACTTRANSINFO&amp; pinfo)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.StubRegistrationConfig">
            <summary>Stub type of System.EnterpriseServices.RegistrationConfig</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubRegistrationConfig.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubRegistrationConfig.InitializeStub">
            <summary>Initializes a new instance of type StubRegistrationConfig</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.StubRegistrationConfig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.StubRegistrationConfig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.StubRegistrationConfig.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.EnterpriseServices.Fakes.StubServicedComponent">
            <summary>Stub type of System.EnterpriseServices.ServicedComponent</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubServicedComponent.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubServicedComponent.Activate">
            <summary>Sets the stub of ServicedComponent.Activate()</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubServicedComponent.Activate01">
            <summary>Sets the stub of ServicedComponent.Activate()</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubServicedComponent.CanBePooled">
            <summary>Sets the stub of ServicedComponent.CanBePooled()</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubServicedComponent.CanBePooled01">
            <summary>Sets the stub of ServicedComponent.CanBePooled()</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubServicedComponent.Construct(System.String)">
            <summary>Sets the stub of ServicedComponent.Construct(String s)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubServicedComponent.ConstructString">
            <summary>Sets the stub of ServicedComponent.Construct(String s)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubServicedComponent.Deactivate">
            <summary>Sets the stub of ServicedComponent.Deactivate()</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubServicedComponent.Deactivate01">
            <summary>Sets the stub of ServicedComponent.Deactivate()</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubServicedComponent.Dispose(System.Boolean)">
            <summary>Sets the stub of ServicedComponent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Fakes.StubServicedComponent.DisposeBoolean">
            <summary>Sets the stub of ServicedComponent.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Fakes.StubServicedComponent.InitializeStub">
            <summary>Initializes a new instance of type StubServicedComponent</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.StubServicedComponent.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.StubServicedComponent.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Fakes.StubServicedComponent.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimAppDomainHelper">
            <summary>Shim type of System.EnterpriseServices.Internal.AppDomainHelper</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimAppDomainHelper.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimAppDomainHelper.#ctor(System.EnterpriseServices.Internal.AppDomainHelper)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimAppDomainHelper.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimAppDomainHelper.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimAppDomainHelper.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimAppDomainHelper.Constructor">
            <summary>Sets the shim of AppDomainHelper.AppDomainHelper()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimAppDomainHelper.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimAssemblyLocator">
            <summary>Shim type of System.EnterpriseServices.Internal.AssemblyLocator</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimAssemblyLocator.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimAssemblyLocator.#ctor(System.EnterpriseServices.Internal.AssemblyLocator)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimAssemblyLocator.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimAssemblyLocator.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimAssemblyLocator.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimAssemblyLocator.Constructor">
            <summary>Sets the shim of AssemblyLocator.AssemblyLocator()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimAssemblyLocator.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimClientRemotingConfig">
            <summary>Shim type of System.EnterpriseServices.Internal.ClientRemotingConfig</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimClientRemotingConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimClientRemotingConfig.#ctor(System.EnterpriseServices.Internal.ClientRemotingConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimClientRemotingConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimClientRemotingConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClientRemotingConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClientRemotingConfig.Constructor">
            <summary>Sets the shim of ClientRemotingConfig.ClientRemotingConfig()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClientRemotingConfig.WriteStringStringStringStringStringStringStringString">
            <summary>Sets the shim of ClientRemotingConfig.Write(String DestinationDirectory, String VRoot, String BaseUrl, String AssemblyName, String TypeName, String ProgId, String Mode, String Transport)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimClientRemotingConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory">
            <summary>Shim type of System.EnterpriseServices.Internal.ClrObjectFactory</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.#ctor(System.EnterpriseServices.Internal.ClrObjectFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.Bind(System.EnterpriseServices.Internal.IClrObjectFactory)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.Constructor">
            <summary>Sets the shim of ClrObjectFactory.ClrObjectFactory()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.CreateFromAssemblyStringStringString">
            <summary>Sets the shim of ClrObjectFactory.CreateFromAssembly(String AssemblyName, String TypeName, String Mode)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.CreateFromMailboxStringString">
            <summary>Sets the shim of ClrObjectFactory.CreateFromMailbox(String Mailbox, String Mode)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.CreateFromVrootStringString">
            <summary>Sets the shim of ClrObjectFactory.CreateFromVroot(String VrootUrl, String Mode)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.CreateFromWsdlStringString">
            <summary>Sets the shim of ClrObjectFactory.CreateFromWsdl(String WsdlUrl, String Mode)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.StaticConstructor">
            <summary>Sets the shim of ClrObjectFactory.ClrObjectFactory()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.AllInstances.CreateFromAssemblyStringStringString">
            <summary>Sets the shim of ClrObjectFactory.CreateFromAssembly(String AssemblyName, String TypeName, String Mode)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.AllInstances.CreateFromMailboxStringString">
            <summary>Sets the shim of ClrObjectFactory.CreateFromMailbox(String Mailbox, String Mode)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.AllInstances.CreateFromVrootStringString">
            <summary>Sets the shim of ClrObjectFactory.CreateFromVroot(String VrootUrl, String Mode)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimClrObjectFactory.AllInstances.CreateFromWsdlStringString">
            <summary>Sets the shim of ClrObjectFactory.CreateFromWsdl(String WsdlUrl, String Mode)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimComManagedImportUtil">
            <summary>Shim type of System.EnterpriseServices.Internal.ComManagedImportUtil</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimComManagedImportUtil.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimComManagedImportUtil.#ctor(System.EnterpriseServices.Internal.ComManagedImportUtil)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimComManagedImportUtil.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimComManagedImportUtil.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimComManagedImportUtil.Bind(System.EnterpriseServices.Internal.IComManagedImportUtil)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimComManagedImportUtil.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimComManagedImportUtil.Constructor">
            <summary>Sets the shim of ComManagedImportUtil.ComManagedImportUtil()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimComManagedImportUtil.GetComponentInfoStringStringOutStringOut">
            <summary>Sets the shim of ComManagedImportUtil.GetComponentInfo(String assemblyPath, String&amp; numComponents, String&amp; componentInfo)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimComManagedImportUtil.InstallAssemblyStringStringString">
            <summary>Sets the shim of ComManagedImportUtil.InstallAssembly(String asmpath, String parname, String appname)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimComManagedImportUtil.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimComManagedImportUtil.AllInstances.GetComponentInfoStringStringOutStringOut">
            <summary>Sets the shim of ComManagedImportUtil.GetComponentInfo(String assemblyPath, String&amp; numComponents, String&amp; componentInfo)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimComManagedImportUtil.AllInstances.InstallAssemblyStringStringString">
            <summary>Sets the shim of ComManagedImportUtil.InstallAssembly(String asmpath, String parname, String appname)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimComSoapPublishError">
            <summary>Shim type of System.EnterpriseServices.Internal.ComSoapPublishError</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimComSoapPublishError.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimComSoapPublishError.#ctor(System.EnterpriseServices.Internal.ComSoapPublishError)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimComSoapPublishError.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimComSoapPublishError.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimComSoapPublishError.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimComSoapPublishError.Constructor">
            <summary>Sets the shim of ComSoapPublishError.ComSoapPublishError()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimComSoapPublishError.ReportString">
            <summary>Sets the shim of ComSoapPublishError.Report(String s)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimComSoapPublishError.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata">
            <summary>Shim type of System.EnterpriseServices.Internal.GenerateMetadata</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.#ctor(System.EnterpriseServices.Internal.GenerateMetadata)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.Bind(System.EnterpriseServices.Internal.IComSoapMetadata)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.Constructor">
            <summary>Sets the shim of GenerateMetadata.GenerateMetadata()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.GenerateMetaDataStringStringByteArrayStrongNameKeyPair">
            <summary>Sets the shim of GenerateMetadata.GenerateMetaData(String strSrcTypeLib, String outPath, Byte[] PublicKey, StrongNameKeyPair KeyPair)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.GenerateSignedStringStringBooleanStringOut">
            <summary>Sets the shim of GenerateMetadata.GenerateSigned(String strSrcTypeLib, String outPath, Boolean InstallGac, String&amp; Error)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.GenerateStringString">
            <summary>Sets the shim of GenerateMetadata.Generate(String strSrcTypeLib, String outPath)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.AllInstances.GenerateMetaDataStringStringByteArrayStrongNameKeyPair">
            <summary>Sets the shim of GenerateMetadata.GenerateMetaData(String strSrcTypeLib, String outPath, Byte[] PublicKey, StrongNameKeyPair KeyPair)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.AllInstances.GenerateSignedStringStringBooleanStringOut">
            <summary>Sets the shim of GenerateMetadata.GenerateSigned(String strSrcTypeLib, String outPath, Boolean InstallGac, String&amp; Error)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimGenerateMetadata.AllInstances.GenerateStringString">
            <summary>Sets the shim of GenerateMetadata.Generate(String strSrcTypeLib, String outPath)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimIISVirtualRoot">
            <summary>Shim type of System.EnterpriseServices.Internal.IISVirtualRoot</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimIISVirtualRoot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimIISVirtualRoot.#ctor(System.EnterpriseServices.Internal.IISVirtualRoot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimIISVirtualRoot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimIISVirtualRoot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimIISVirtualRoot.Bind(System.EnterpriseServices.Internal.IComSoapIISVRoot)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimIISVirtualRoot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimIISVirtualRoot.Constructor">
            <summary>Sets the shim of IISVirtualRoot.IISVirtualRoot()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimIISVirtualRoot.CreateStringStringStringStringOut">
            <summary>Sets the shim of IISVirtualRoot.Create(String RootWeb, String inPhysicalDirectory, String VirtualDirectory, String&amp; Error)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimIISVirtualRoot.DeleteStringStringStringStringOut">
            <summary>Sets the shim of IISVirtualRoot.Delete(String RootWeb, String PhysicalDirectory, String VirtualDirectory, String&amp; Error)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimIISVirtualRoot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimIISVirtualRoot.AllInstances.CreateStringStringStringStringOut">
            <summary>Sets the shim of IISVirtualRoot.Create(String RootWeb, String inPhysicalDirectory, String VirtualDirectory, String&amp; Error)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimIISVirtualRoot.AllInstances.DeleteStringStringStringStringOut">
            <summary>Sets the shim of IISVirtualRoot.Delete(String RootWeb, String PhysicalDirectory, String VirtualDirectory, String&amp; Error)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimPublish">
            <summary>Shim type of System.EnterpriseServices.Internal.Publish</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimPublish.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimPublish.#ctor(System.EnterpriseServices.Internal.Publish)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimPublish.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimPublish.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimPublish.Bind(System.EnterpriseServices.Internal.IComSoapPublisher)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.Constructor">
            <summary>Sets the shim of Publish.Publish()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.DeleteMailBoxStringStringStringOut">
            <summary>Sets the shim of Publish.DeleteMailBox(String RootMailServer, String MailBox, String&amp; Error)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.DeleteVirtualRootStringStringStringOut">
            <summary>Sets the shim of Publish.DeleteVirtualRoot(String RootWebServer, String FullUrl, String&amp; Error)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.GacInstallString">
            <summary>Sets the shim of Publish.GacInstall(String AssemblyPath)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.GacRemoveString">
            <summary>Sets the shim of Publish.GacRemove(String AssemblyPath)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.GetAssemblyNameForCacheStringStringOut">
            <summary>Sets the shim of Publish.GetAssemblyNameForCache(String TypeLibPath, String&amp; CachePath)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.GetClientPhysicalPathBoolean">
            <summary>Sets the shim of Publish.GetClientPhysicalPath(Boolean CreateDir)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.GetTypeNameFromProgIdStringString">
            <summary>Sets the shim of Publish.GetTypeNameFromProgId(String AssemblyPath, String ProgId)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.ParseUrlStringStringOutStringOut">
            <summary>Sets the shim of Publish.ParseUrl(String FullUrl, String&amp; BaseUrl, String&amp; VirtualRoot)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.RegisterAssemblyString">
            <summary>Sets the shim of Publish.RegisterAssembly(String AssemblyPath)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.UnRegisterAssemblyString">
            <summary>Sets the shim of Publish.UnRegisterAssembly(String AssemblyPath)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimPublish.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.AllInstances.DeleteMailBoxStringStringStringOut">
            <summary>Sets the shim of Publish.DeleteMailBox(String RootMailServer, String MailBox, String&amp; Error)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.AllInstances.DeleteVirtualRootStringStringStringOut">
            <summary>Sets the shim of Publish.DeleteVirtualRoot(String RootWebServer, String FullUrl, String&amp; Error)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.AllInstances.GacInstallString">
            <summary>Sets the shim of Publish.GacInstall(String AssemblyPath)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.AllInstances.GacRemoveString">
            <summary>Sets the shim of Publish.GacRemove(String AssemblyPath)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.AllInstances.GetAssemblyNameForCacheStringStringOut">
            <summary>Sets the shim of Publish.GetAssemblyNameForCache(String TypeLibPath, String&amp; CachePath)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.AllInstances.GetTypeNameFromProgIdStringString">
            <summary>Sets the shim of Publish.GetTypeNameFromProgId(String AssemblyPath, String ProgId)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.AllInstances.RegisterAssemblyString">
            <summary>Sets the shim of Publish.RegisterAssembly(String AssemblyPath)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimPublish.AllInstances.UnRegisterAssemblyString">
            <summary>Sets the shim of Publish.UnRegisterAssembly(String AssemblyPath)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimServerWebConfig">
            <summary>Shim type of System.EnterpriseServices.Internal.ServerWebConfig</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimServerWebConfig.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimServerWebConfig.#ctor(System.EnterpriseServices.Internal.ServerWebConfig)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimServerWebConfig.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimServerWebConfig.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimServerWebConfig.Bind(System.EnterpriseServices.Internal.IServerWebConfig)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimServerWebConfig.AddElementStringStringStringStringStringStringOut">
            <summary>Sets the shim of ServerWebConfig.AddElement(String FilePath, String AssemblyName, String TypeName, String ProgId, String WkoMode, String&amp; Error)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimServerWebConfig.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimServerWebConfig.Constructor">
            <summary>Sets the shim of ServerWebConfig.ServerWebConfig()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimServerWebConfig.CreateStringStringStringOut">
            <summary>Sets the shim of ServerWebConfig.Create(String FilePath, String FilePrefix, String&amp; Error)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimServerWebConfig.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimServerWebConfig.AllInstances.AddElementStringStringStringStringStringStringOut">
            <summary>Sets the shim of ServerWebConfig.AddElement(String FilePath, String AssemblyName, String TypeName, String ProgId, String WkoMode, String&amp; Error)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimServerWebConfig.AllInstances.CreateStringStringStringOut">
            <summary>Sets the shim of ServerWebConfig.Create(String FilePath, String FilePrefix, String&amp; Error)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimSoapClientImport">
            <summary>Shim type of System.EnterpriseServices.Internal.SoapClientImport</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapClientImport.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapClientImport.#ctor(System.EnterpriseServices.Internal.SoapClientImport)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapClientImport.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapClientImport.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapClientImport.Bind(System.EnterpriseServices.Internal.ISoapClientImport)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapClientImport.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapClientImport.Constructor">
            <summary>Sets the shim of SoapClientImport.SoapClientImport()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapClientImport.ProcessClientTlbExStringStringStringStringStringString">
            <summary>Sets the shim of SoapClientImport.ProcessClientTlbEx(String progId, String virtualRoot, String baseUrl, String authentication, String assemblyName, String typeName)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimSoapClientImport.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapClientImport.AllInstances.ProcessClientTlbExStringStringStringStringStringString">
            <summary>Sets the shim of SoapClientImport.ProcessClientTlbEx(String progId, String virtualRoot, String baseUrl, String authentication, String assemblyName, String typeName)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimSoapServerTlb">
            <summary>Shim type of System.EnterpriseServices.Internal.SoapServerTlb</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapServerTlb.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapServerTlb.#ctor(System.EnterpriseServices.Internal.SoapServerTlb)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapServerTlb.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapServerTlb.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapServerTlb.Bind(System.EnterpriseServices.Internal.ISoapServerTlb)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapServerTlb.AddServerTlbStringStringStringStringStringStringStringStringStringStringStringStringOutStringOut">
            <summary>Sets the shim of SoapServerTlb.AddServerTlb(String progId, String classId, String interfaceId, String srcTlbPath, String rootWebServer, String inBaseUrl, String inVirtualRoot, String clientActivated, String wellKnown, String discoFile, String operation, String&amp; strAssemblyName, String&amp; typeName)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapServerTlb.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapServerTlb.Constructor">
            <summary>Sets the shim of SoapServerTlb.SoapServerTlb()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapServerTlb.DeleteServerTlbStringStringStringStringStringStringStringStringStringString">
            <summary>Sets the shim of SoapServerTlb.DeleteServerTlb(String progId, String classId, String interfaceId, String srcTlbPath, String rootWebServer, String baseUrl, String virtualRoot, String operation, String assemblyName, String typeName)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimSoapServerTlb.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapServerTlb.AllInstances.AddServerTlbStringStringStringStringStringStringStringStringStringStringStringStringOutStringOut">
            <summary>Sets the shim of SoapServerTlb.AddServerTlb(String progId, String classId, String interfaceId, String srcTlbPath, String rootWebServer, String inBaseUrl, String inVirtualRoot, String clientActivated, String wellKnown, String discoFile, String operation, String&amp; strAssemblyName, String&amp; typeName)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapServerTlb.AllInstances.DeleteServerTlbStringStringStringStringStringStringStringStringStringString">
            <summary>Sets the shim of SoapServerTlb.DeleteServerTlb(String progId, String classId, String interfaceId, String srcTlbPath, String rootWebServer, String baseUrl, String virtualRoot, String operation, String assemblyName, String typeName)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimSoapServerVRoot">
            <summary>Shim type of System.EnterpriseServices.Internal.SoapServerVRoot</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapServerVRoot.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapServerVRoot.#ctor(System.EnterpriseServices.Internal.SoapServerVRoot)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapServerVRoot.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapServerVRoot.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapServerVRoot.Bind(System.EnterpriseServices.Internal.ISoapServerVRoot)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapServerVRoot.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapServerVRoot.Constructor">
            <summary>Sets the shim of SoapServerVRoot.SoapServerVRoot()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapServerVRoot.DeleteVirtualRootExStringStringString">
            <summary>Sets the shim of SoapServerVRoot.DeleteVirtualRootEx(String rootWebServer, String inBaseUrl, String inVirtualRoot)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimSoapServerVRoot.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapServerVRoot.AllInstances.DeleteVirtualRootExStringStringString">
            <summary>Sets the shim of SoapServerVRoot.DeleteVirtualRootEx(String rootWebServer, String inBaseUrl, String inVirtualRoot)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility">
            <summary>Shim type of System.EnterpriseServices.Internal.SoapUtility</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.#ctor(System.EnterpriseServices.Internal.SoapUtility)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.Bind(System.EnterpriseServices.Internal.ISoapUtility)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.Constructor">
            <summary>Sets the shim of SoapUtility.SoapUtility()</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.GetServerBinPathStringStringStringStringOut">
            <summary>Sets the shim of SoapUtility.GetServerBinPath(String rootWebServer, String inBaseUrl, String inVirtualRoot, String&amp; binPath)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.GetServerPhysicalPathStringStringStringStringOut">
            <summary>Sets the shim of SoapUtility.GetServerPhysicalPath(String rootWebServer, String inBaseUrl, String inVirtualRoot, String&amp; physicalPath)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.Present">
            <summary>Sets the shim of SoapUtility.Present()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.AllInstances.GetServerBinPathStringStringStringStringOut">
            <summary>Sets the shim of SoapUtility.GetServerBinPath(String rootWebServer, String inBaseUrl, String inVirtualRoot, String&amp; binPath)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.AllInstances.GetServerPhysicalPathStringStringStringStringOut">
            <summary>Sets the shim of SoapUtility.GetServerPhysicalPath(String rootWebServer, String inBaseUrl, String inVirtualRoot, String&amp; physicalPath)</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.ShimSoapUtility.AllInstances.Present">
            <summary>Sets the shim of SoapUtility.Present()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubAppDomainHelper">
            <summary>Stub type of System.EnterpriseServices.Internal.AppDomainHelper</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubAppDomainHelper.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubAppDomainHelper.InitializeStub">
            <summary>Initializes a new instance of type StubAppDomainHelper</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubAppDomainHelper.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubAppDomainHelper.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubAppDomainHelper.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubAssemblyLocator">
            <summary>Stub type of System.EnterpriseServices.Internal.AssemblyLocator</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubAssemblyLocator.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubAssemblyLocator.InitializeStub">
            <summary>Initializes a new instance of type StubAssemblyLocator</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubAssemblyLocator.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubAssemblyLocator.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubAssemblyLocator.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubClientRemotingConfig">
            <summary>Stub type of System.EnterpriseServices.Internal.ClientRemotingConfig</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubClientRemotingConfig.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubClientRemotingConfig.InitializeStub">
            <summary>Initializes a new instance of type StubClientRemotingConfig</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubClientRemotingConfig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubClientRemotingConfig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubClientRemotingConfig.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubClrObjectFactory">
            <summary>Stub type of System.EnterpriseServices.Internal.ClrObjectFactory</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubClrObjectFactory.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubClrObjectFactory.InitializeStub">
            <summary>Initializes a new instance of type StubClrObjectFactory</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubClrObjectFactory.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubClrObjectFactory.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubClrObjectFactory.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubComManagedImportUtil">
            <summary>Stub type of System.EnterpriseServices.Internal.ComManagedImportUtil</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubComManagedImportUtil.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubComManagedImportUtil.InitializeStub">
            <summary>Initializes a new instance of type StubComManagedImportUtil</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubComManagedImportUtil.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubComManagedImportUtil.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubComManagedImportUtil.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubComSoapPublishError">
            <summary>Stub type of System.EnterpriseServices.Internal.ComSoapPublishError</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubComSoapPublishError.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubComSoapPublishError.InitializeStub">
            <summary>Initializes a new instance of type StubComSoapPublishError</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubComSoapPublishError.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubComSoapPublishError.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubComSoapPublishError.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubGenerateMetadata">
            <summary>Stub type of System.EnterpriseServices.Internal.GenerateMetadata</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubGenerateMetadata.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubGenerateMetadata.InitializeStub">
            <summary>Initializes a new instance of type StubGenerateMetadata</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubGenerateMetadata.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubGenerateMetadata.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubGenerateMetadata.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubIClrObjectFactory">
            <summary>Stub type of System.EnterpriseServices.Internal.IClrObjectFactory</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIClrObjectFactory.#ctor">
            <summary>Initializes a new instance of type StubIClrObjectFactory</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIClrObjectFactory.CreateFromAssemblyStringStringString">
            <summary>Sets the stub of IClrObjectFactory.CreateFromAssembly(String assembly, String type, String mode)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIClrObjectFactory.CreateFromMailboxStringString">
            <summary>Sets the stub of IClrObjectFactory.CreateFromMailbox(String Mailbox, String Mode)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIClrObjectFactory.CreateFromVrootStringString">
            <summary>Sets the stub of IClrObjectFactory.CreateFromVroot(String VrootUrl, String Mode)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIClrObjectFactory.CreateFromWsdlStringString">
            <summary>Sets the stub of IClrObjectFactory.CreateFromWsdl(String WsdlUrl, String Mode)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIClrObjectFactory.ses::System#EnterpriseServices#Internal#IClrObjectFactory#CreateFromAssembly(System.String,System.String,System.String)">
            <summary>Sets the stub of IClrObjectFactory.CreateFromAssembly(String assembly, String type, String mode)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIClrObjectFactory.ses::System#EnterpriseServices#Internal#IClrObjectFactory#CreateFromMailbox(System.String,System.String)">
            <summary>Sets the stub of IClrObjectFactory.CreateFromMailbox(String Mailbox, String Mode)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIClrObjectFactory.ses::System#EnterpriseServices#Internal#IClrObjectFactory#CreateFromVroot(System.String,System.String)">
            <summary>Sets the stub of IClrObjectFactory.CreateFromVroot(String VrootUrl, String Mode)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIClrObjectFactory.ses::System#EnterpriseServices#Internal#IClrObjectFactory#CreateFromWsdl(System.String,System.String)">
            <summary>Sets the stub of IClrObjectFactory.CreateFromWsdl(String WsdlUrl, String Mode)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubIComManagedImportUtil">
            <summary>Stub type of System.EnterpriseServices.Internal.IComManagedImportUtil</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComManagedImportUtil.#ctor">
            <summary>Initializes a new instance of type StubIComManagedImportUtil</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComManagedImportUtil.GetComponentInfoStringStringOutStringOut">
            <summary>Sets the stub of IComManagedImportUtil.GetComponentInfo(String assemblyPath, String&amp; numComponents, String&amp; componentInfo)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComManagedImportUtil.InstallAssemblyStringStringString">
            <summary>Sets the stub of IComManagedImportUtil.InstallAssembly(String filename, String parname, String appname)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComManagedImportUtil.ses::System#EnterpriseServices#Internal#IComManagedImportUtil#GetComponentInfo(System.String,System.String@,System.String@)">
            <summary>Sets the stub of IComManagedImportUtil.GetComponentInfo(String assemblyPath, String&amp; numComponents, String&amp; componentInfo)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComManagedImportUtil.ses::System#EnterpriseServices#Internal#IComManagedImportUtil#InstallAssembly(System.String,System.String,System.String)">
            <summary>Sets the stub of IComManagedImportUtil.InstallAssembly(String filename, String parname, String appname)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubIComSoapIISVRoot">
            <summary>Stub type of System.EnterpriseServices.Internal.IComSoapIISVRoot</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapIISVRoot.#ctor">
            <summary>Initializes a new instance of type StubIComSoapIISVRoot</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapIISVRoot.CreateStringStringStringStringOut">
            <summary>Sets the stub of IComSoapIISVRoot.Create(String RootWeb, String PhysicalDirectory, String VirtualDirectory, String&amp; Error)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapIISVRoot.DeleteStringStringStringStringOut">
            <summary>Sets the stub of IComSoapIISVRoot.Delete(String RootWeb, String PhysicalDirectory, String VirtualDirectory, String&amp; Error)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapIISVRoot.ses::System#EnterpriseServices#Internal#IComSoapIISVRoot#Create(System.String,System.String,System.String,System.String@)">
            <summary>Sets the stub of IComSoapIISVRoot.Create(String RootWeb, String PhysicalDirectory, String VirtualDirectory, String&amp; Error)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapIISVRoot.ses::System#EnterpriseServices#Internal#IComSoapIISVRoot#Delete(System.String,System.String,System.String,System.String@)">
            <summary>Sets the stub of IComSoapIISVRoot.Delete(String RootWeb, String PhysicalDirectory, String VirtualDirectory, String&amp; Error)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubIComSoapMetadata">
            <summary>Stub type of System.EnterpriseServices.Internal.IComSoapMetadata</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapMetadata.#ctor">
            <summary>Initializes a new instance of type StubIComSoapMetadata</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapMetadata.GenerateSignedStringStringBooleanStringOut">
            <summary>Sets the stub of IComSoapMetadata.GenerateSigned(String SrcTypeLibFileName, String OutPath, Boolean InstallGac, String&amp; Error)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapMetadata.GenerateStringString">
            <summary>Sets the stub of IComSoapMetadata.Generate(String SrcTypeLibFileName, String OutPath)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapMetadata.ses::System#EnterpriseServices#Internal#IComSoapMetadata#Generate(System.String,System.String)">
            <summary>Sets the stub of IComSoapMetadata.Generate(String SrcTypeLibFileName, String OutPath)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapMetadata.ses::System#EnterpriseServices#Internal#IComSoapMetadata#GenerateSigned(System.String,System.String,System.Boolean,System.String@)">
            <summary>Sets the stub of IComSoapMetadata.GenerateSigned(String SrcTypeLibFileName, String OutPath, Boolean InstallGac, String&amp; Error)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher">
            <summary>Stub type of System.EnterpriseServices.Internal.IComSoapPublisher</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.#ctor">
            <summary>Initializes a new instance of type StubIComSoapPublisher</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.CreateMailBoxStringStringStringOutStringOutStringOutStringOut">
            <summary>Sets the stub of IComSoapPublisher.CreateMailBox(String RootMailServer, String MailBox, String&amp; SmtpName, String&amp; Domain, String&amp; PhysicalPath, String&amp; Error)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.CreateVirtualRootStringStringStringOutStringOutStringOutStringOut">
            <summary>Sets the stub of IComSoapPublisher.CreateVirtualRoot(String Operation, String FullUrl, String&amp; BaseUrl, String&amp; VirtualRoot, String&amp; PhysicalPath, String&amp; Error)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.DeleteMailBoxStringStringStringOut">
            <summary>Sets the stub of IComSoapPublisher.DeleteMailBox(String RootMailServer, String MailBox, String&amp; Error)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.DeleteVirtualRootStringStringStringOut">
            <summary>Sets the stub of IComSoapPublisher.DeleteVirtualRoot(String RootWebServer, String FullUrl, String&amp; Error)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.GacInstallString">
            <summary>Sets the stub of IComSoapPublisher.GacInstall(String AssemblyPath)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.GacRemoveString">
            <summary>Sets the stub of IComSoapPublisher.GacRemove(String AssemblyPath)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.GetAssemblyNameForCacheStringStringOut">
            <summary>Sets the stub of IComSoapPublisher.GetAssemblyNameForCache(String TypeLibPath, String&amp; CachePath)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.GetTypeNameFromProgIdStringString">
            <summary>Sets the stub of IComSoapPublisher.GetTypeNameFromProgId(String AssemblyPath, String ProgId)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ProcessClientTlbStringStringStringStringStringStringStringStringOutStringOutStringOut">
            <summary>Sets the stub of IComSoapPublisher.ProcessClientTlb(String ProgId, String SrcTlbPath, String PhysicalPath, String VRoot, String BaseUrl, String Mode, String Transport, String&amp; AssemblyName, String&amp; TypeName, String&amp; Error)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ProcessServerTlbStringStringStringStringStringOutStringOutStringOut">
            <summary>Sets the stub of IComSoapPublisher.ProcessServerTlb(String ProgId, String SrcTlbPath, String PhysicalPath, String Operation, String&amp; AssemblyName, String&amp; TypeName, String&amp; Error)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.RegisterAssemblyString">
            <summary>Sets the stub of IComSoapPublisher.RegisterAssembly(String AssemblyPath)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ses::System#EnterpriseServices#Internal#IComSoapPublisher#CreateMailBox(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
            <summary>Sets the stub of IComSoapPublisher.CreateMailBox(String RootMailServer, String MailBox, String&amp; SmtpName, String&amp; Domain, String&amp; PhysicalPath, String&amp; Error)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ses::System#EnterpriseServices#Internal#IComSoapPublisher#CreateVirtualRoot(System.String,System.String,System.String@,System.String@,System.String@,System.String@)">
            <summary>Sets the stub of IComSoapPublisher.CreateVirtualRoot(String Operation, String FullUrl, String&amp; BaseUrl, String&amp; VirtualRoot, String&amp; PhysicalPath, String&amp; Error)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ses::System#EnterpriseServices#Internal#IComSoapPublisher#DeleteMailBox(System.String,System.String,System.String@)">
            <summary>Sets the stub of IComSoapPublisher.DeleteMailBox(String RootMailServer, String MailBox, String&amp; Error)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ses::System#EnterpriseServices#Internal#IComSoapPublisher#DeleteVirtualRoot(System.String,System.String,System.String@)">
            <summary>Sets the stub of IComSoapPublisher.DeleteVirtualRoot(String RootWebServer, String FullUrl, String&amp; Error)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ses::System#EnterpriseServices#Internal#IComSoapPublisher#GacInstall(System.String)">
            <summary>Sets the stub of IComSoapPublisher.GacInstall(String AssemblyPath)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ses::System#EnterpriseServices#Internal#IComSoapPublisher#GacRemove(System.String)">
            <summary>Sets the stub of IComSoapPublisher.GacRemove(String AssemblyPath)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ses::System#EnterpriseServices#Internal#IComSoapPublisher#GetAssemblyNameForCache(System.String,System.String@)">
            <summary>Sets the stub of IComSoapPublisher.GetAssemblyNameForCache(String TypeLibPath, String&amp; CachePath)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ses::System#EnterpriseServices#Internal#IComSoapPublisher#GetTypeNameFromProgId(System.String,System.String)">
            <summary>Sets the stub of IComSoapPublisher.GetTypeNameFromProgId(String AssemblyPath, String ProgId)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ses::System#EnterpriseServices#Internal#IComSoapPublisher#ProcessClientTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
            <summary>Sets the stub of IComSoapPublisher.ProcessClientTlb(String ProgId, String SrcTlbPath, String PhysicalPath, String VRoot, String BaseUrl, String Mode, String Transport, String&amp; AssemblyName, String&amp; TypeName, String&amp; Error)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ses::System#EnterpriseServices#Internal#IComSoapPublisher#ProcessServerTlb(System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
            <summary>Sets the stub of IComSoapPublisher.ProcessServerTlb(String ProgId, String SrcTlbPath, String PhysicalPath, String Operation, String&amp; AssemblyName, String&amp; TypeName, String&amp; Error)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ses::System#EnterpriseServices#Internal#IComSoapPublisher#RegisterAssembly(System.String)">
            <summary>Sets the stub of IComSoapPublisher.RegisterAssembly(String AssemblyPath)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.ses::System#EnterpriseServices#Internal#IComSoapPublisher#UnRegisterAssembly(System.String)">
            <summary>Sets the stub of IComSoapPublisher.UnRegisterAssembly(String AssemblyPath)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIComSoapPublisher.UnRegisterAssemblyString">
            <summary>Sets the stub of IComSoapPublisher.UnRegisterAssembly(String AssemblyPath)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubIISVirtualRoot">
            <summary>Stub type of System.EnterpriseServices.Internal.IISVirtualRoot</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIISVirtualRoot.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIISVirtualRoot.InitializeStub">
            <summary>Initializes a new instance of type StubIISVirtualRoot</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubIISVirtualRoot.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubIISVirtualRoot.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubIISVirtualRoot.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubIServerWebConfig">
            <summary>Stub type of System.EnterpriseServices.Internal.IServerWebConfig</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIServerWebConfig.#ctor">
            <summary>Initializes a new instance of type StubIServerWebConfig</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIServerWebConfig.AddElementStringStringStringStringStringStringOut">
            <summary>Sets the stub of IServerWebConfig.AddElement(String FilePath, String AssemblyName, String TypeName, String ProgId, String Mode, String&amp; Error)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubIServerWebConfig.CreateStringStringStringOut">
            <summary>Sets the stub of IServerWebConfig.Create(String FilePath, String FileRootName, String&amp; Error)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIServerWebConfig.ses::System#EnterpriseServices#Internal#IServerWebConfig#AddElement(System.String,System.String,System.String,System.String,System.String,System.String@)">
            <summary>Sets the stub of IServerWebConfig.AddElement(String FilePath, String AssemblyName, String TypeName, String ProgId, String Mode, String&amp; Error)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubIServerWebConfig.ses::System#EnterpriseServices#Internal#IServerWebConfig#Create(System.String,System.String,System.String@)">
            <summary>Sets the stub of IServerWebConfig.Create(String FilePath, String FileRootName, String&amp; Error)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubISoapClientImport">
            <summary>Stub type of System.EnterpriseServices.Internal.ISoapClientImport</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubISoapClientImport.#ctor">
            <summary>Initializes a new instance of type StubISoapClientImport</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubISoapClientImport.ProcessClientTlbExStringStringStringStringStringString">
            <summary>Sets the stub of ISoapClientImport.ProcessClientTlbEx(String progId, String virtualRoot, String baseUrl, String authentication, String assemblyName, String typeName)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubISoapClientImport.ses::System#EnterpriseServices#Internal#ISoapClientImport#ProcessClientTlbEx(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Sets the stub of ISoapClientImport.ProcessClientTlbEx(String progId, String virtualRoot, String baseUrl, String authentication, String assemblyName, String typeName)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubISoapServerTlb">
            <summary>Stub type of System.EnterpriseServices.Internal.ISoapServerTlb</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubISoapServerTlb.#ctor">
            <summary>Initializes a new instance of type StubISoapServerTlb</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubISoapServerTlb.AddServerTlbStringStringStringStringStringStringStringStringStringStringStringStringOutStringOut">
            <summary>Sets the stub of ISoapServerTlb.AddServerTlb(String progId, String classId, String interfaceId, String srcTlbPath, String rootWebServer, String baseUrl, String virtualRoot, String clientActivated, String wellKnown, String discoFile, String operation, String&amp; assemblyName, String&amp; typeName)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubISoapServerTlb.DeleteServerTlbStringStringStringStringStringStringStringStringStringString">
            <summary>Sets the stub of ISoapServerTlb.DeleteServerTlb(String progId, String classId, String interfaceId, String srcTlbPath, String rootWebServer, String baseUrl, String virtualRoot, String operation, String assemblyName, String typeName)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubISoapServerTlb.ses::System#EnterpriseServices#Internal#ISoapServerTlb#AddServerTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@)">
            <summary>Sets the stub of ISoapServerTlb.AddServerTlb(String progId, String classId, String interfaceId, String srcTlbPath, String rootWebServer, String baseUrl, String virtualRoot, String clientActivated, String wellKnown, String discoFile, String operation, String&amp; assemblyName, String&amp; typeName)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubISoapServerTlb.ses::System#EnterpriseServices#Internal#ISoapServerTlb#DeleteServerTlb(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>Sets the stub of ISoapServerTlb.DeleteServerTlb(String progId, String classId, String interfaceId, String srcTlbPath, String rootWebServer, String baseUrl, String virtualRoot, String operation, String assemblyName, String typeName)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubISoapServerVRoot">
            <summary>Stub type of System.EnterpriseServices.Internal.ISoapServerVRoot</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubISoapServerVRoot.#ctor">
            <summary>Initializes a new instance of type StubISoapServerVRoot</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubISoapServerVRoot.CreateVirtualRootExStringStringStringStringStringStringStringStringStringOutStringOutStringOut">
            <summary>Sets the stub of ISoapServerVRoot.CreateVirtualRootEx(String rootWebServer, String inBaseUrl, String inVirtualRoot, String homePage, String discoFile, String secureSockets, String authentication, String operation, String&amp; baseUrl, String&amp; virtualRoot, String&amp; physicalPath)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubISoapServerVRoot.DeleteVirtualRootExStringStringString">
            <summary>Sets the stub of ISoapServerVRoot.DeleteVirtualRootEx(String rootWebServer, String baseUrl, String virtualRoot)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubISoapServerVRoot.GetVirtualRootStatusStringStringStringStringOutStringOutStringOutStringOutStringOutStringOutStringOutStringOutStringOut">
            <summary>Sets the stub of ISoapServerVRoot.GetVirtualRootStatus(String rootWebServer, String inBaseUrl, String inVirtualRoot, String&amp; exists, String&amp; secureSockets, String&amp; windowsAuth, String&amp; anonymous, String&amp; homePage, String&amp; discoFile, String&amp; physicalPath, String&amp; baseUrl, String&amp; virtualRoot)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubISoapServerVRoot.ses::System#EnterpriseServices#Internal#ISoapServerVRoot#CreateVirtualRootEx(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String@,System.String@,System.String@)">
            <summary>Sets the stub of ISoapServerVRoot.CreateVirtualRootEx(String rootWebServer, String inBaseUrl, String inVirtualRoot, String homePage, String discoFile, String secureSockets, String authentication, String operation, String&amp; baseUrl, String&amp; virtualRoot, String&amp; physicalPath)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubISoapServerVRoot.ses::System#EnterpriseServices#Internal#ISoapServerVRoot#DeleteVirtualRootEx(System.String,System.String,System.String)">
            <summary>Sets the stub of ISoapServerVRoot.DeleteVirtualRootEx(String rootWebServer, String baseUrl, String virtualRoot)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubISoapServerVRoot.ses::System#EnterpriseServices#Internal#ISoapServerVRoot#GetVirtualRootStatus(System.String,System.String,System.String,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@,System.String@)">
            <summary>Sets the stub of ISoapServerVRoot.GetVirtualRootStatus(String rootWebServer, String inBaseUrl, String inVirtualRoot, String&amp; exists, String&amp; secureSockets, String&amp; windowsAuth, String&amp; anonymous, String&amp; homePage, String&amp; discoFile, String&amp; physicalPath, String&amp; baseUrl, String&amp; virtualRoot)</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubISoapUtility">
            <summary>Stub type of System.EnterpriseServices.Internal.ISoapUtility</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubISoapUtility.#ctor">
            <summary>Initializes a new instance of type StubISoapUtility</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubISoapUtility.GetServerBinPathStringStringStringStringOut">
            <summary>Sets the stub of ISoapUtility.GetServerBinPath(String rootWebServer, String inBaseUrl, String inVirtualRoot, String&amp; binPath)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubISoapUtility.GetServerPhysicalPathStringStringStringStringOut">
            <summary>Sets the stub of ISoapUtility.GetServerPhysicalPath(String rootWebServer, String inBaseUrl, String inVirtualRoot, String&amp; physicalPath)</summary>
        </member>
        <member name="F:System.EnterpriseServices.Internal.Fakes.StubISoapUtility.Present">
            <summary>Sets the stub of ISoapUtility.Present()</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubISoapUtility.ses::System#EnterpriseServices#Internal#ISoapUtility#GetServerBinPath(System.String,System.String,System.String,System.String@)">
            <summary>Sets the stub of ISoapUtility.GetServerBinPath(String rootWebServer, String inBaseUrl, String inVirtualRoot, String&amp; binPath)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubISoapUtility.ses::System#EnterpriseServices#Internal#ISoapUtility#GetServerPhysicalPath(System.String,System.String,System.String,System.String@)">
            <summary>Sets the stub of ISoapUtility.GetServerPhysicalPath(String rootWebServer, String inBaseUrl, String inVirtualRoot, String&amp; physicalPath)</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubISoapUtility.ses::System#EnterpriseServices#Internal#ISoapUtility#Present">
            <summary>Sets the stub of ISoapUtility.Present()</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubPublish">
            <summary>Stub type of System.EnterpriseServices.Internal.Publish</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubPublish.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubPublish.InitializeStub">
            <summary>Initializes a new instance of type StubPublish</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubPublish.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubPublish.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubPublish.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:System.EnterpriseServices.Internal.Fakes.StubServerWebConfig">
            <summary>Stub type of System.EnterpriseServices.Internal.ServerWebConfig</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubServerWebConfig.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:System.EnterpriseServices.Internal.Fakes.StubServerWebConfig.InitializeStub">
            <summary>Initializes a new instance of type StubServerWebConfig</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubServerWebConfig.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubServerWebConfig.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:System.EnterpriseServices.Internal.Fakes.StubServerWebConfig.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
    </members>
</doc>
