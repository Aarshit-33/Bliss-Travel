<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetOpenAuth.OpenId.4.0.0.0.Fakes</name>
    </assembly>
    <members>
        <member name="T:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimAXFetchAsSregTransformBase">
            <summary>Shim type of DotNetOpenAuth.OpenId.Behaviors.AXFetchAsSregTransformBase</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimAXFetchAsSregTransformBase.#ctor(DotNetOpenAuth.OpenId.Behaviors.AXFetchAsSregTransformBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimAXFetchAsSregTransformBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimAXFetchAsSregTransformBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimAXFetchAsSregTransformBase.AXFormatsGet">
            <summary>Sets the shim of AXFetchAsSregTransformBase.get_AXFormats()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimAXFetchAsSregTransformBase.AXFormatsSetAXAttributeFormats">
            <summary>Sets the shim of AXFetchAsSregTransformBase.set_AXFormats(AXAttributeFormats value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimAXFetchAsSregTransformBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimAXFetchAsSregTransformBase.Constructor">
            <summary>Sets the shim of AXFetchAsSregTransformBase.AXFetchAsSregTransformBase()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimAXFetchAsSregTransformBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimAXFetchAsSregTransformBase.AllInstances.AXFormatsGet">
            <summary>Sets the shim of AXFetchAsSregTransformBase.get_AXFormats()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimAXFetchAsSregTransformBase.AllInstances.AXFormatsSetAXAttributeFormats">
            <summary>Sets the shim of AXFetchAsSregTransformBase.set_AXFormats(AXAttributeFormats value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimGsaIcamProfileBase">
            <summary>Shim type of DotNetOpenAuth.OpenId.Behaviors.GsaIcamProfileBase</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimGsaIcamProfileBase.#ctor(DotNetOpenAuth.OpenId.Behaviors.GsaIcamProfileBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimGsaIcamProfileBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimGsaIcamProfileBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimGsaIcamProfileBase.AllowPersonallyIdentifiableInformationGet">
            <summary>Sets the shim of GsaIcamProfileBase.get_AllowPersonallyIdentifiableInformation()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimGsaIcamProfileBase.AllowPersonallyIdentifiableInformationSetBoolean">
            <summary>Sets the shim of GsaIcamProfileBase.set_AllowPersonallyIdentifiableInformation(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimGsaIcamProfileBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimGsaIcamProfileBase.Constructor">
            <summary>Sets the shim of GsaIcamProfileBase.GsaIcamProfileBase()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimGsaIcamProfileBase.DisableSslRequirementGet">
            <summary>Sets the shim of GsaIcamProfileBase.get_DisableSslRequirement()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimGsaIcamProfileBase.DisableSslRequirementSetBoolean">
            <summary>Sets the shim of GsaIcamProfileBase.set_DisableSslRequirement(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimGsaIcamProfileBase.StaticConstructor">
            <summary>Sets the shim of GsaIcamProfileBase.GsaIcamProfileBase()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Behaviors.Fakes.ShimGsaIcamProfileBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Behaviors.Fakes.StubAXFetchAsSregTransformBase">
            <summary>Stub type of DotNetOpenAuth.OpenId.Behaviors.AXFetchAsSregTransformBase</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Behaviors.Fakes.StubAXFetchAsSregTransformBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Behaviors.Fakes.StubAXFetchAsSregTransformBase.InitializeStub">
            <summary>Initializes a new instance of type StubAXFetchAsSregTransformBase</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.StubAXFetchAsSregTransformBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.StubAXFetchAsSregTransformBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.StubAXFetchAsSregTransformBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Behaviors.Fakes.StubGsaIcamProfileBase">
            <summary>Stub type of DotNetOpenAuth.OpenId.Behaviors.GsaIcamProfileBase</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Behaviors.Fakes.StubGsaIcamProfileBase.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Behaviors.Fakes.StubGsaIcamProfileBase.InitializeStub">
            <summary>Initializes a new instance of type StubGsaIcamProfileBase</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.StubGsaIcamProfileBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.StubGsaIcamProfileBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Behaviors.Fakes.StubGsaIcamProfileBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.ChannelElements.Fakes.StubIOpenIdExtensionFactory">
            <summary>Stub type of DotNetOpenAuth.OpenId.ChannelElements.IOpenIdExtensionFactory</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.ChannelElements.Fakes.StubIOpenIdExtensionFactory.#ctor">
            <summary>Initializes a new instance of type StubIOpenIdExtensionFactory</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.ChannelElements.Fakes.StubIOpenIdExtensionFactory.CreateStringIDictionaryOfStringStringIProtocolMessageWithExtensionsBoolean">
            <summary>Sets the stub of IOpenIdExtensionFactory.Create(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.ChannelElements.Fakes.StubIOpenIdExtensionFactory.dnoaoi::DotNetOpenAuth#OpenId#ChannelElements#IOpenIdExtensionFactory#Create(System.String,System.Collections.Generic.IDictionary{System.String,System.String},DotNetOpenAuth.Messaging.IProtocolMessageWithExtensions,System.Boolean)">
            <summary>Sets the stub of IOpenIdExtensionFactory.Create(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAXUtilities">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.AXUtilities</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAXUtilities.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAXUtilities.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAXUtilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAXUtilities.AddICollectionOfAttributeValuesStringStringArray">
            <summary>Sets the shim of AXUtilities.Add(ICollection`1&lt;AttributeValues&gt; collection, String typeUri, String[] values)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAXUtilities.AddOptionalICollectionOfAttributeRequestString">
            <summary>Sets the shim of AXUtilities.AddOptional(ICollection`1&lt;AttributeRequest&gt; collection, String typeUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAXUtilities.AddRequiredICollectionOfAttributeRequestString">
            <summary>Sets the shim of AXUtilities.AddRequired(ICollection`1&lt;AttributeRequest&gt; collection, String typeUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAXUtilities.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAXUtilities.DeserializeAttributesIDictionaryOfStringString">
            <summary>Sets the shim of AXUtilities.DeserializeAttributes(IDictionary`2&lt;String,String&gt; fields)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAXUtilities.SerializeAttributesIDictionaryOfStringStringIEnumerableOfAttributeValues">
            <summary>Sets the shim of AXUtilities.SerializeAttributes(IDictionary`2&lt;String,String&gt; fields, IEnumerable`1&lt;AttributeValues&gt; attributes)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.AttributeRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.#ctor(DotNetOpenAuth.OpenId.Extensions.AttributeExchange.AttributeRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.Constructor">
            <summary>Sets the shim of AttributeRequest.AttributeRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.ConstructorString">
            <summary>Sets the shim of AttributeRequest.AttributeRequest(String typeUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.ConstructorStringBoolean">
            <summary>Sets the shim of AttributeRequest.AttributeRequest(String typeUri, Boolean isRequired)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.ConstructorStringBooleanInt32">
            <summary>Sets the shim of AttributeRequest.AttributeRequest(String typeUri, Boolean isRequired, Int32 count)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.CountGet">
            <summary>Sets the shim of AttributeRequest.get_Count()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.CountSetInt32">
            <summary>Sets the shim of AttributeRequest.set_Count(Int32 value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.EqualsObject">
            <summary>Sets the shim of AttributeRequest.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.GetHashCode">
            <summary>Sets the shim of AttributeRequest.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.IsRequiredGet">
            <summary>Sets the shim of AttributeRequest.get_IsRequired()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.IsRequiredSetBoolean">
            <summary>Sets the shim of AttributeRequest.set_IsRequired(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.RespondStringArray">
            <summary>Sets the shim of AttributeRequest.Respond(String[] values)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.TypeUriGet">
            <summary>Sets the shim of AttributeRequest.get_TypeUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.TypeUriSetString">
            <summary>Sets the shim of AttributeRequest.set_TypeUri(String value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.AllInstances.CountGet">
            <summary>Sets the shim of AttributeRequest.get_Count()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.AllInstances.CountSetInt32">
            <summary>Sets the shim of AttributeRequest.set_Count(Int32 value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.AllInstances.EqualsObject">
            <summary>Sets the shim of AttributeRequest.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.AllInstances.GetHashCode01">
            <summary>Sets the shim of AttributeRequest.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.AllInstances.IsRequiredGet">
            <summary>Sets the shim of AttributeRequest.get_IsRequired()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.AllInstances.IsRequiredSetBoolean">
            <summary>Sets the shim of AttributeRequest.set_IsRequired(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.AllInstances.RespondStringArray">
            <summary>Sets the shim of AttributeRequest.Respond(String[] values)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.AllInstances.TypeUriGet">
            <summary>Sets the shim of AttributeRequest.get_TypeUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeRequest.AllInstances.TypeUriSetString">
            <summary>Sets the shim of AttributeRequest.set_TypeUri(String value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.AttributeValues</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.#ctor(DotNetOpenAuth.OpenId.Extensions.AttributeExchange.AttributeValues)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.Constructor">
            <summary>Sets the shim of AttributeValues.AttributeValues()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.ConstructorString">
            <summary>Sets the shim of AttributeValues.AttributeValues(String typeUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.ConstructorStringStringArray">
            <summary>Sets the shim of AttributeValues.AttributeValues(String typeUri, String[] values)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.EqualsObject">
            <summary>Sets the shim of AttributeValues.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.GetHashCode">
            <summary>Sets the shim of AttributeValues.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.TypeUriGet">
            <summary>Sets the shim of AttributeValues.get_TypeUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.TypeUriSetString">
            <summary>Sets the shim of AttributeValues.set_TypeUri(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.ValuesGet">
            <summary>Sets the shim of AttributeValues.get_Values()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.ValuesSetIListOfString">
            <summary>Sets the shim of AttributeValues.set_Values(IList`1&lt;String&gt; value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.AllInstances.EqualsObject">
            <summary>Sets the shim of AttributeValues.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.AllInstances.GetHashCode01">
            <summary>Sets the shim of AttributeValues.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.AllInstances.TypeUriGet">
            <summary>Sets the shim of AttributeValues.get_TypeUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.AllInstances.TypeUriSetString">
            <summary>Sets the shim of AttributeValues.set_TypeUri(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.AllInstances.ValuesGet">
            <summary>Sets the shim of AttributeValues.get_Values()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimAttributeValues.AllInstances.ValuesSetIListOfString">
            <summary>Sets the shim of AttributeValues.set_Values(IList`1&lt;String&gt; value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.FetchRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.#ctor(DotNetOpenAuth.OpenId.Extensions.AttributeExchange.FetchRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.Bind(DotNetOpenAuth.Messaging.IExtensionMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.Bind(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.Bind(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AttributesGet">
            <summary>Sets the shim of FetchRequest.get_Attributes()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.Constructor">
            <summary>Sets the shim of FetchRequest.FetchRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.DotNetOpenAuthMessagingIMessageWithEventsOnReceiving">
            <summary>Sets the shim of FetchRequest.DotNetOpenAuth.Messaging.IMessageWithEvents.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.DotNetOpenAuthMessagingIMessageWithEventsOnSending">
            <summary>Sets the shim of FetchRequest.DotNetOpenAuth.Messaging.IMessageWithEvents.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.EnsureValidMessage">
            <summary>Sets the shim of FetchRequest.EnsureValidMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.EqualsObject">
            <summary>Sets the shim of FetchRequest.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.GetHashCode">
            <summary>Sets the shim of FetchRequest.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.OptionalAliasesGet">
            <summary>Sets the shim of FetchRequest.get_OptionalAliases()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.OptionalAliasesSetString">
            <summary>Sets the shim of FetchRequest.set_OptionalAliases(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.ParseAliasListString">
            <summary>Sets the shim of FetchRequest.ParseAliasList(String aliasList)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.RequiredAliasesGet">
            <summary>Sets the shim of FetchRequest.get_RequiredAliases()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.RequiredAliasesSetString">
            <summary>Sets the shim of FetchRequest.set_RequiredAliases(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.StaticConstructor">
            <summary>Sets the shim of FetchRequest.FetchRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.UpdateUrlGet">
            <summary>Sets the shim of FetchRequest.get_UpdateUrl()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.UpdateUrlSetUri">
            <summary>Sets the shim of FetchRequest.set_UpdateUrl(Uri value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest._cctorb__3StringIDictionaryOfStringStringIProtocolMessageWithExtensionsBoolean">
            <summary>Sets the shim of FetchRequest.&lt;.cctor&gt;b__3(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest._ctorb__0AttributeRequest">
            <summary>Sets the shim of FetchRequest.&lt;.ctor&gt;b__0(AttributeRequest ar)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AllInstances.AttributesGet">
            <summary>Sets the shim of FetchRequest.get_Attributes()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AllInstances.DotNetOpenAuthMessagingIMessageWithEventsOnReceiving">
            <summary>Sets the shim of FetchRequest.DotNetOpenAuth.Messaging.IMessageWithEvents.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AllInstances.DotNetOpenAuthMessagingIMessageWithEventsOnSending">
            <summary>Sets the shim of FetchRequest.DotNetOpenAuth.Messaging.IMessageWithEvents.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AllInstances.EnsureValidMessage">
            <summary>Sets the shim of FetchRequest.EnsureValidMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AllInstances.EqualsObject">
            <summary>Sets the shim of FetchRequest.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AllInstances.GetHashCode01">
            <summary>Sets the shim of FetchRequest.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AllInstances.OptionalAliasesGet">
            <summary>Sets the shim of FetchRequest.get_OptionalAliases()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AllInstances.OptionalAliasesSetString">
            <summary>Sets the shim of FetchRequest.set_OptionalAliases(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AllInstances.RequiredAliasesGet">
            <summary>Sets the shim of FetchRequest.get_RequiredAliases()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AllInstances.RequiredAliasesSetString">
            <summary>Sets the shim of FetchRequest.set_RequiredAliases(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AllInstances.UpdateUrlGet">
            <summary>Sets the shim of FetchRequest.get_UpdateUrl()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchRequest.AllInstances.UpdateUrlSetUri">
            <summary>Sets the shim of FetchRequest.set_UpdateUrl(Uri value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.FetchResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.#ctor(DotNetOpenAuth.OpenId.Extensions.AttributeExchange.FetchResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.Bind(DotNetOpenAuth.Messaging.IExtensionMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.Bind(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.Bind(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.AttributesGet">
            <summary>Sets the shim of FetchResponse.get_Attributes()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.Constructor">
            <summary>Sets the shim of FetchResponse.FetchResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.DotNetOpenAuthMessagingIMessageWithEventsOnReceiving">
            <summary>Sets the shim of FetchResponse.DotNetOpenAuth.Messaging.IMessageWithEvents.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.DotNetOpenAuthMessagingIMessageWithEventsOnSending">
            <summary>Sets the shim of FetchResponse.DotNetOpenAuth.Messaging.IMessageWithEvents.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.EnsureValidMessage">
            <summary>Sets the shim of FetchResponse.EnsureValidMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.EqualsObject">
            <summary>Sets the shim of FetchResponse.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.GetAttributeValueString">
            <summary>Sets the shim of FetchResponse.GetAttributeValue(String typeUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.GetHashCode">
            <summary>Sets the shim of FetchResponse.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.IsSignedByProviderGet">
            <summary>Sets the shim of FetchResponse.get_IsSignedByProvider()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.StaticConstructor">
            <summary>Sets the shim of FetchResponse.FetchResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.UpdateUrlGet">
            <summary>Sets the shim of FetchResponse.get_UpdateUrl()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.UpdateUrlSetUri">
            <summary>Sets the shim of FetchResponse.set_UpdateUrl(Uri value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.UpdateUrlSupportedGet">
            <summary>Sets the shim of FetchResponse.get_UpdateUrlSupported()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse._cctorb__2StringIDictionaryOfStringStringIProtocolMessageWithExtensionsBoolean">
            <summary>Sets the shim of FetchResponse.&lt;.cctor&gt;b__2(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse._ctorb__0AttributeValues">
            <summary>Sets the shim of FetchResponse.&lt;.ctor&gt;b__0(AttributeValues av)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.AllInstances.AttributesGet">
            <summary>Sets the shim of FetchResponse.get_Attributes()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.AllInstances.DotNetOpenAuthMessagingIMessageWithEventsOnReceiving">
            <summary>Sets the shim of FetchResponse.DotNetOpenAuth.Messaging.IMessageWithEvents.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.AllInstances.DotNetOpenAuthMessagingIMessageWithEventsOnSending">
            <summary>Sets the shim of FetchResponse.DotNetOpenAuth.Messaging.IMessageWithEvents.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.AllInstances.EnsureValidMessage">
            <summary>Sets the shim of FetchResponse.EnsureValidMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.AllInstances.EqualsObject">
            <summary>Sets the shim of FetchResponse.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.AllInstances.GetAttributeValueString">
            <summary>Sets the shim of FetchResponse.GetAttributeValue(String typeUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.AllInstances.GetHashCode01">
            <summary>Sets the shim of FetchResponse.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.AllInstances.IsSignedByProviderGet">
            <summary>Sets the shim of FetchResponse.get_IsSignedByProvider()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.AllInstances.UpdateUrlGet">
            <summary>Sets the shim of FetchResponse.get_UpdateUrl()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.AllInstances.UpdateUrlSetUri">
            <summary>Sets the shim of FetchResponse.set_UpdateUrl(Uri value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimFetchResponse.AllInstances.UpdateUrlSupportedGet">
            <summary>Sets the shim of FetchResponse.get_UpdateUrlSupported()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.StoreRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.#ctor(DotNetOpenAuth.OpenId.Extensions.AttributeExchange.StoreRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.Bind(DotNetOpenAuth.Messaging.IExtensionMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.Bind(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.Bind(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.AttributesGet">
            <summary>Sets the shim of StoreRequest.get_Attributes()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.Constructor">
            <summary>Sets the shim of StoreRequest.StoreRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.DotNetOpenAuthMessagingIMessageWithEventsOnReceiving">
            <summary>Sets the shim of StoreRequest.DotNetOpenAuth.Messaging.IMessageWithEvents.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.DotNetOpenAuthMessagingIMessageWithEventsOnSending">
            <summary>Sets the shim of StoreRequest.DotNetOpenAuth.Messaging.IMessageWithEvents.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.EqualsObject">
            <summary>Sets the shim of StoreRequest.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.GetHashCode">
            <summary>Sets the shim of StoreRequest.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.StaticConstructor">
            <summary>Sets the shim of StoreRequest.StoreRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest._cctorb__2StringIDictionaryOfStringStringIProtocolMessageWithExtensionsBoolean">
            <summary>Sets the shim of StoreRequest.&lt;.cctor&gt;b__2(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest._ctorb__0AttributeValues">
            <summary>Sets the shim of StoreRequest.&lt;.ctor&gt;b__0(AttributeValues av)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.AllInstances.AttributesGet">
            <summary>Sets the shim of StoreRequest.get_Attributes()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.AllInstances.DotNetOpenAuthMessagingIMessageWithEventsOnReceiving">
            <summary>Sets the shim of StoreRequest.DotNetOpenAuth.Messaging.IMessageWithEvents.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.AllInstances.DotNetOpenAuthMessagingIMessageWithEventsOnSending">
            <summary>Sets the shim of StoreRequest.DotNetOpenAuth.Messaging.IMessageWithEvents.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.AllInstances.EqualsObject">
            <summary>Sets the shim of StoreRequest.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreRequest.AllInstances.GetHashCode01">
            <summary>Sets the shim of StoreRequest.GetHashCode()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.StoreResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.#ctor(DotNetOpenAuth.OpenId.Extensions.AttributeExchange.StoreResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.Bind(DotNetOpenAuth.Messaging.IExtensionMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.Bind(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.Bind(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.Constructor">
            <summary>Sets the shim of StoreResponse.StoreResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.ConstructorString">
            <summary>Sets the shim of StoreResponse.StoreResponse(String failureReason)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.EnsureValidMessage">
            <summary>Sets the shim of StoreResponse.EnsureValidMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.EqualsObject">
            <summary>Sets the shim of StoreResponse.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.FailureReasonGet">
            <summary>Sets the shim of StoreResponse.get_FailureReason()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.FailureReasonSetString">
            <summary>Sets the shim of StoreResponse.set_FailureReason(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.GetHashCode">
            <summary>Sets the shim of StoreResponse.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.IsSignedByProviderGet">
            <summary>Sets the shim of StoreResponse.get_IsSignedByProvider()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.ModeGet">
            <summary>Sets the shim of StoreResponse.get_Mode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.ModeSetString">
            <summary>Sets the shim of StoreResponse.set_Mode(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.StaticConstructor">
            <summary>Sets the shim of StoreResponse.StoreResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.SucceededGet">
            <summary>Sets the shim of StoreResponse.get_Succeeded()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.SucceededSetBoolean">
            <summary>Sets the shim of StoreResponse.set_Succeeded(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse._cctorb__0StringIDictionaryOfStringStringIProtocolMessageWithExtensionsBoolean">
            <summary>Sets the shim of StoreResponse.&lt;.cctor&gt;b__0(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.AllInstances.EnsureValidMessage">
            <summary>Sets the shim of StoreResponse.EnsureValidMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.AllInstances.EqualsObject">
            <summary>Sets the shim of StoreResponse.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.AllInstances.FailureReasonGet">
            <summary>Sets the shim of StoreResponse.get_FailureReason()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.AllInstances.FailureReasonSetString">
            <summary>Sets the shim of StoreResponse.set_FailureReason(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.AllInstances.GetHashCode01">
            <summary>Sets the shim of StoreResponse.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.AllInstances.IsSignedByProviderGet">
            <summary>Sets the shim of StoreResponse.get_IsSignedByProvider()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.AllInstances.ModeGet">
            <summary>Sets the shim of StoreResponse.get_Mode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.AllInstances.ModeSetString">
            <summary>Sets the shim of StoreResponse.set_Mode(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.AllInstances.SucceededGet">
            <summary>Sets the shim of StoreResponse.get_Succeeded()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimStoreResponse.AllInstances.SucceededSetBoolean">
            <summary>Sets the shim of StoreResponse.set_Succeeded(Boolean value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimBirthDate">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes+BirthDate</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimBirthDate.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimBirthDate.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimBirthDate.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimBirthDate.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimCompany">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes+Company</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimCompany.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimCompany.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimCompany.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimCompany.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes+Contact</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimHomeAddress">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes+Contact+HomeAddress</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimHomeAddress.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimHomeAddress.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimHomeAddress.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimHomeAddress.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimIM">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes+Contact+IM</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimIM.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimIM.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimIM.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimIM.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimPhone">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes+Contact+Phone</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimPhone.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimPhone.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimPhone.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimPhone.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimWeb">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes+Contact+Web</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimWeb.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimWeb.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimWeb.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimWeb.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimWorkAddress">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes+Contact+WorkAddress</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimWorkAddress.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimWorkAddress.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimWorkAddress.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimContact.ShimWorkAddress.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimMedia">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes+Media</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimMedia.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimMedia.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimMedia.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimMedia.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimMedia.ShimImages">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes+Media+Images</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimMedia.ShimImages.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimMedia.ShimImages.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimMedia.ShimImages.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimMedia.ShimImages.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimName">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes+Name</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimName.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimName.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimName.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimName.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimPerson">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes+Person</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimPerson.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimPerson.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimPerson.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimPerson.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimPreferences">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.WellKnownAttributes+Preferences</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimPreferences.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimPreferences.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimPreferences.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.ShimWellKnownAttributes.ShimPreferences.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeRequest">
            <summary>Stub type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.AttributeRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeRequest.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeRequest.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeRequest.#ctor(System.String,System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeRequest.#ctor(System.String,System.Boolean,System.Int32)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeRequest.Equals(System.Object)">
            <summary>Sets the stub of AttributeRequest.Equals(Object obj)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeRequest.EqualsObject">
            <summary>Sets the stub of AttributeRequest.Equals(Object obj)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeRequest.GetHashCode">
            <summary>Sets the stub of AttributeRequest.GetHashCode()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeRequest.GetHashCode01">
            <summary>Sets the stub of AttributeRequest.GetHashCode()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeRequest.InitializeStub">
            <summary>Initializes a new instance of type StubAttributeRequest</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeRequest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeRequest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeRequest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeValues">
            <summary>Stub type of DotNetOpenAuth.OpenId.Extensions.AttributeExchange.AttributeValues</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeValues.#ctor(System.String,System.String[])">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeValues.Equals(System.Object)">
            <summary>Sets the stub of AttributeValues.Equals(Object obj)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeValues.EqualsObject">
            <summary>Sets the stub of AttributeValues.Equals(Object obj)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeValues.GetHashCode">
            <summary>Sets the stub of AttributeValues.GetHashCode()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeValues.GetHashCode01">
            <summary>Sets the stub of AttributeValues.GetHashCode()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeValues.InitializeStub">
            <summary>Initializes a new instance of type StubAttributeValues</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeValues.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeValues.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.AttributeExchange.Fakes.StubAttributeValues.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.ExtensionBase</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.#ctor(DotNetOpenAuth.OpenId.Extensions.ExtensionBase)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.Bind(DotNetOpenAuth.Messaging.IExtensionMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.Bind(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.Bind(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AdditionalSupportedTypeUrisDotNetOpenAuthOpenIdMessagesIOpenIdMessageExtensionget">
            <summary>Sets the shim of ExtensionBase.DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension.get_AdditionalSupportedTypeUris()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AdditionalSupportedTypeUrisGet">
            <summary>Sets the shim of ExtensionBase.get_AdditionalSupportedTypeUris()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.ConstructorVersionStringIEnumerableOfString">
            <summary>Sets the shim of ExtensionBase.ExtensionBase(Version version, String typeUri, IEnumerable`1&lt;String&gt; additionalSupportedTypeUris)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.DotNetOpenAuthMessagingIMessageEnsureValidMessage">
            <summary>Sets the shim of ExtensionBase.DotNetOpenAuth.Messaging.IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.EnsureValidMessage">
            <summary>Sets the shim of ExtensionBase.EnsureValidMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.ExtraDataDotNetOpenAuthMessagingIMessageget">
            <summary>Sets the shim of ExtensionBase.DotNetOpenAuth.Messaging.IMessage.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.ExtraDataGet">
            <summary>Sets the shim of ExtensionBase.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.IsSignedByRemotePartyDotNetOpenAuthOpenIdMessagesIOpenIdMessageExtensionget">
            <summary>Sets the shim of ExtensionBase.DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension.get_IsSignedByRemoteParty()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.IsSignedByRemotePartyDotNetOpenAuthOpenIdMessagesIOpenIdMessageExtensionsetBoolean">
            <summary>Sets the shim of ExtensionBase.DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension.set_IsSignedByRemoteParty(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.IsSignedByRemotePartyGet">
            <summary>Sets the shim of ExtensionBase.get_IsSignedByRemoteParty()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.IsSignedByRemotePartySetBoolean">
            <summary>Sets the shim of ExtensionBase.set_IsSignedByRemoteParty(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.TypeUriDotNetOpenAuthOpenIdMessagesIOpenIdMessageExtensionget">
            <summary>Sets the shim of ExtensionBase.DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension.get_TypeUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.TypeUriGet">
            <summary>Sets the shim of ExtensionBase.get_TypeUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.VersionGet">
            <summary>Sets the shim of ExtensionBase.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.VersionSetVersion">
            <summary>Sets the shim of ExtensionBase.set_Version(Version value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.AdditionalSupportedTypeUrisDotNetOpenAuthOpenIdMessagesIOpenIdMessageExtensionget">
            <summary>Sets the shim of ExtensionBase.DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension.get_AdditionalSupportedTypeUris()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.AdditionalSupportedTypeUrisGet">
            <summary>Sets the shim of ExtensionBase.get_AdditionalSupportedTypeUris()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.DotNetOpenAuthMessagingIMessageEnsureValidMessage">
            <summary>Sets the shim of ExtensionBase.DotNetOpenAuth.Messaging.IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.EnsureValidMessage">
            <summary>Sets the shim of ExtensionBase.EnsureValidMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.ExtraDataDotNetOpenAuthMessagingIMessageget">
            <summary>Sets the shim of ExtensionBase.DotNetOpenAuth.Messaging.IMessage.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.ExtraDataGet">
            <summary>Sets the shim of ExtensionBase.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.IsSignedByRemotePartyDotNetOpenAuthOpenIdMessagesIOpenIdMessageExtensionget">
            <summary>Sets the shim of ExtensionBase.DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension.get_IsSignedByRemoteParty()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.IsSignedByRemotePartyDotNetOpenAuthOpenIdMessagesIOpenIdMessageExtensionsetBoolean">
            <summary>Sets the shim of ExtensionBase.DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension.set_IsSignedByRemoteParty(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.IsSignedByRemotePartyGet">
            <summary>Sets the shim of ExtensionBase.get_IsSignedByRemoteParty()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.IsSignedByRemotePartySetBoolean">
            <summary>Sets the shim of ExtensionBase.set_IsSignedByRemoteParty(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.TypeUriDotNetOpenAuthOpenIdMessagesIOpenIdMessageExtensionget">
            <summary>Sets the shim of ExtensionBase.DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension.get_TypeUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.TypeUriGet">
            <summary>Sets the shim of ExtensionBase.get_TypeUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.VersionGet">
            <summary>Sets the shim of ExtensionBase.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.ShimExtensionBase.AllInstances.VersionSetVersion">
            <summary>Sets the shim of ExtensionBase.set_Version(Version value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.Fakes.StubExtensionBase">
            <summary>Stub type of DotNetOpenAuth.OpenId.Extensions.ExtensionBase</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.Fakes.StubExtensionBase.#ctor(System.Version,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.Fakes.StubExtensionBase.EnsureValidMessage">
            <summary>Sets the stub of ExtensionBase.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Extensions.Fakes.StubExtensionBase.EnsureValidMessage01">
            <summary>Sets the stub of ExtensionBase.EnsureValidMessage()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.Fakes.StubExtensionBase.InitializeStub">
            <summary>Initializes a new instance of type StubExtensionBase</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.StubExtensionBase.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.StubExtensionBase.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.StubExtensionBase.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.Fakes.StubIClientScriptExtensionResponse">
            <summary>Stub type of DotNetOpenAuth.OpenId.Extensions.IClientScriptExtensionResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.Fakes.StubIClientScriptExtensionResponse.#ctor">
            <summary>Initializes a new instance of type StubIClientScriptExtensionResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.Fakes.StubIClientScriptExtensionResponse.dnoac::DotNetOpenAuth#Messaging#IMessage#EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.Fakes.StubIClientScriptExtensionResponse.dnoaoi::DotNetOpenAuth#OpenId#Extensions#IClientScriptExtensionResponse#InitializeJavaScriptData(DotNetOpenAuth.Messaging.IProtocolMessageWithExtensions)">
            <summary>Sets the stub of IClientScriptExtensionResponse.InitializeJavaScriptData(IProtocolMessageWithExtensions response)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Extensions.Fakes.StubIClientScriptExtensionResponse.EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Extensions.Fakes.StubIClientScriptExtensionResponse.ExtraDataGet">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Extensions.Fakes.StubIClientScriptExtensionResponse.InitializeJavaScriptDataIProtocolMessageWithExtensions">
            <summary>Sets the stub of IClientScriptExtensionResponse.InitializeJavaScriptData(IProtocolMessageWithExtensions response)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Extensions.Fakes.StubIClientScriptExtensionResponse.VersionGet">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.StubIClientScriptExtensionResponse.dnoac::DotNetOpenAuth#Messaging#IMessage#ExtraData">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.Fakes.StubIClientScriptExtensionResponse.dnoac::DotNetOpenAuth#Messaging#IMessage#Version">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.OAuth.AuthorizationApprovedResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.#ctor(DotNetOpenAuth.OpenId.Extensions.OAuth.AuthorizationApprovedResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.Bind(DotNetOpenAuth.Messaging.IExtensionMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.Bind(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.Bind(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.Constructor">
            <summary>Sets the shim of AuthorizationApprovedResponse.AuthorizationApprovedResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.RequestTokenGet">
            <summary>Sets the shim of AuthorizationApprovedResponse.get_RequestToken()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.RequestTokenSetString">
            <summary>Sets the shim of AuthorizationApprovedResponse.set_RequestToken(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.ScopeGet">
            <summary>Sets the shim of AuthorizationApprovedResponse.get_Scope()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.ScopeSetString">
            <summary>Sets the shim of AuthorizationApprovedResponse.set_Scope(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.StaticConstructor">
            <summary>Sets the shim of AuthorizationApprovedResponse.AuthorizationApprovedResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse._cctorb__0StringIDictionaryOfStringStringIProtocolMessageWithExtensionsBoolean">
            <summary>Sets the shim of AuthorizationApprovedResponse.&lt;.cctor&gt;b__0(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.AllInstances.RequestTokenGet">
            <summary>Sets the shim of AuthorizationApprovedResponse.get_RequestToken()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.AllInstances.RequestTokenSetString">
            <summary>Sets the shim of AuthorizationApprovedResponse.set_RequestToken(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.AllInstances.ScopeGet">
            <summary>Sets the shim of AuthorizationApprovedResponse.get_Scope()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationApprovedResponse.AllInstances.ScopeSetString">
            <summary>Sets the shim of AuthorizationApprovedResponse.set_Scope(String value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationDeclinedResponse">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.OAuth.AuthorizationDeclinedResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationDeclinedResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationDeclinedResponse.#ctor(DotNetOpenAuth.OpenId.Extensions.OAuth.AuthorizationDeclinedResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationDeclinedResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationDeclinedResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationDeclinedResponse.Bind(DotNetOpenAuth.Messaging.IExtensionMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationDeclinedResponse.Bind(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationDeclinedResponse.Bind(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationDeclinedResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationDeclinedResponse.Constructor">
            <summary>Sets the shim of AuthorizationDeclinedResponse.AuthorizationDeclinedResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationDeclinedResponse.StaticConstructor">
            <summary>Sets the shim of AuthorizationDeclinedResponse.AuthorizationDeclinedResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationDeclinedResponse._cctorb__0StringIDictionaryOfStringStringIProtocolMessageWithExtensionsBoolean">
            <summary>Sets the shim of AuthorizationDeclinedResponse.&lt;.cctor&gt;b__0(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationDeclinedResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.OAuth.AuthorizationRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.#ctor(DotNetOpenAuth.OpenId.Extensions.OAuth.AuthorizationRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.Bind(DotNetOpenAuth.Messaging.IExtensionMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.Bind(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.Bind(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.Constructor">
            <summary>Sets the shim of AuthorizationRequest.AuthorizationRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.ConsumerGet">
            <summary>Sets the shim of AuthorizationRequest.get_Consumer()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.ConsumerSetString">
            <summary>Sets the shim of AuthorizationRequest.set_Consumer(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.ScopeGet">
            <summary>Sets the shim of AuthorizationRequest.get_Scope()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.ScopeSetString">
            <summary>Sets the shim of AuthorizationRequest.set_Scope(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.StaticConstructor">
            <summary>Sets the shim of AuthorizationRequest.AuthorizationRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest._cctorb__0StringIDictionaryOfStringStringIProtocolMessageWithExtensionsBoolean">
            <summary>Sets the shim of AuthorizationRequest.&lt;.cctor&gt;b__0(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.AllInstances.ConsumerGet">
            <summary>Sets the shim of AuthorizationRequest.get_Consumer()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.AllInstances.ConsumerSetString">
            <summary>Sets the shim of AuthorizationRequest.set_Consumer(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.AllInstances.ScopeGet">
            <summary>Sets the shim of AuthorizationRequest.get_Scope()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.ShimAuthorizationRequest.AllInstances.ScopeSetString">
            <summary>Sets the shim of AuthorizationRequest.set_Scope(String value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationApprovedResponse">
            <summary>Stub type of DotNetOpenAuth.OpenId.Extensions.OAuth.AuthorizationApprovedResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationApprovedResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationApprovedResponse.EnsureValidMessage">
            <summary>Sets the stub of ExtensionBase.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationApprovedResponse.EnsureValidMessage01">
            <summary>Sets the stub of ExtensionBase.EnsureValidMessage()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationApprovedResponse.InitializeStub">
            <summary>Initializes a new instance of type StubAuthorizationApprovedResponse</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationApprovedResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationApprovedResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationApprovedResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationDeclinedResponse">
            <summary>Stub type of DotNetOpenAuth.OpenId.Extensions.OAuth.AuthorizationDeclinedResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationDeclinedResponse.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationDeclinedResponse.EnsureValidMessage">
            <summary>Sets the stub of ExtensionBase.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationDeclinedResponse.EnsureValidMessage01">
            <summary>Sets the stub of ExtensionBase.EnsureValidMessage()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationDeclinedResponse.InitializeStub">
            <summary>Initializes a new instance of type StubAuthorizationDeclinedResponse</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationDeclinedResponse.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationDeclinedResponse.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationDeclinedResponse.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationRequest">
            <summary>Stub type of DotNetOpenAuth.OpenId.Extensions.OAuth.AuthorizationRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationRequest.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationRequest.EnsureValidMessage">
            <summary>Sets the stub of ExtensionBase.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationRequest.EnsureValidMessage01">
            <summary>Sets the stub of ExtensionBase.EnsureValidMessage()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationRequest.InitializeStub">
            <summary>Initializes a new instance of type StubAuthorizationRequest</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationRequest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationRequest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.OAuth.Fakes.StubAuthorizationRequest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimAuthenticationPolicies">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.AuthenticationPolicies</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimAuthenticationPolicies.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimAuthenticationPolicies.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimAuthenticationPolicies.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimAuthenticationPolicies.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.PolicyRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.#ctor(DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.PolicyRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.Bind(DotNetOpenAuth.Messaging.IExtensionMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.Bind(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.Bind(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.Constructor">
            <summary>Sets the shim of PolicyRequest.PolicyRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.DotNetOpenAuthMessagingIMessageWithEventsOnReceiving">
            <summary>Sets the shim of PolicyRequest.DotNetOpenAuth.Messaging.IMessageWithEvents.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.DotNetOpenAuthMessagingIMessageWithEventsOnSending">
            <summary>Sets the shim of PolicyRequest.DotNetOpenAuth.Messaging.IMessageWithEvents.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.EqualsObject">
            <summary>Sets the shim of PolicyRequest.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.GetHashCode">
            <summary>Sets the shim of PolicyRequest.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.MaximumAuthenticationAgeGet">
            <summary>Sets the shim of PolicyRequest.get_MaximumAuthenticationAge()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.MaximumAuthenticationAgeSetNullableOfTimeSpan">
            <summary>Sets the shim of PolicyRequest.set_MaximumAuthenticationAge(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.PreferredAuthLevelTypesGet">
            <summary>Sets the shim of PolicyRequest.get_PreferredAuthLevelTypes()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.PreferredAuthLevelTypesSetIListOfString">
            <summary>Sets the shim of PolicyRequest.set_PreferredAuthLevelTypes(IList`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.PreferredPoliciesGet">
            <summary>Sets the shim of PolicyRequest.get_PreferredPolicies()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.PreferredPoliciesSetIListOfString">
            <summary>Sets the shim of PolicyRequest.set_PreferredPolicies(IList`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.SerializePoliciesIEnumerableOfString">
            <summary>Sets the shim of PolicyRequest.SerializePolicies(IEnumerable`1&lt;String&gt; policies)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.StaticConstructor">
            <summary>Sets the shim of PolicyRequest.PolicyRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest._cctorb__0StringIDictionaryOfStringStringIProtocolMessageWithExtensionsBoolean">
            <summary>Sets the shim of PolicyRequest.&lt;.cctor&gt;b__0(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.AllInstances.DotNetOpenAuthMessagingIMessageWithEventsOnReceiving">
            <summary>Sets the shim of PolicyRequest.DotNetOpenAuth.Messaging.IMessageWithEvents.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.AllInstances.DotNetOpenAuthMessagingIMessageWithEventsOnSending">
            <summary>Sets the shim of PolicyRequest.DotNetOpenAuth.Messaging.IMessageWithEvents.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.AllInstances.EqualsObject">
            <summary>Sets the shim of PolicyRequest.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.AllInstances.GetHashCode01">
            <summary>Sets the shim of PolicyRequest.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.AllInstances.MaximumAuthenticationAgeGet">
            <summary>Sets the shim of PolicyRequest.get_MaximumAuthenticationAge()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.AllInstances.MaximumAuthenticationAgeSetNullableOfTimeSpan">
            <summary>Sets the shim of PolicyRequest.set_MaximumAuthenticationAge(Nullable`1&lt;TimeSpan&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.AllInstances.PreferredAuthLevelTypesGet">
            <summary>Sets the shim of PolicyRequest.get_PreferredAuthLevelTypes()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.AllInstances.PreferredAuthLevelTypesSetIListOfString">
            <summary>Sets the shim of PolicyRequest.set_PreferredAuthLevelTypes(IList`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.AllInstances.PreferredPoliciesGet">
            <summary>Sets the shim of PolicyRequest.get_PreferredPolicies()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyRequest.AllInstances.PreferredPoliciesSetIListOfString">
            <summary>Sets the shim of PolicyRequest.set_PreferredPolicies(IList`1&lt;String&gt; value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.PolicyResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.#ctor(DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.PolicyResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.Bind(DotNetOpenAuth.Messaging.IExtensionMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.Bind(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.Bind(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.ActualPoliciesGet">
            <summary>Sets the shim of PolicyResponse.get_ActualPolicies()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.ActualPoliciesSetIListOfString">
            <summary>Sets the shim of PolicyResponse.set_ActualPolicies(IList`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AssuranceLevelsGet">
            <summary>Sets the shim of PolicyResponse.get_AssuranceLevels()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AssuranceLevelsSetIDictionaryOfStringString">
            <summary>Sets the shim of PolicyResponse.set_AssuranceLevels(IDictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AuthenticationTimeUtcGet">
            <summary>Sets the shim of PolicyResponse.get_AuthenticationTimeUtc()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AuthenticationTimeUtcSetNullableOfDateTime">
            <summary>Sets the shim of PolicyResponse.set_AuthenticationTimeUtc(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.Constructor">
            <summary>Sets the shim of PolicyResponse.PolicyResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.DotNetOpenAuthMessagingIMessageWithEventsOnReceiving">
            <summary>Sets the shim of PolicyResponse.DotNetOpenAuth.Messaging.IMessageWithEvents.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.DotNetOpenAuthMessagingIMessageWithEventsOnSending">
            <summary>Sets the shim of PolicyResponse.DotNetOpenAuth.Messaging.IMessageWithEvents.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.EqualsObject">
            <summary>Sets the shim of PolicyResponse.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.GetHashCode">
            <summary>Sets the shim of PolicyResponse.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.IsSignedByProviderGet">
            <summary>Sets the shim of PolicyResponse.get_IsSignedByProvider()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.NistAssuranceLevelGet">
            <summary>Sets the shim of PolicyResponse.get_NistAssuranceLevel()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.NistAssuranceLevelSetNullableOfNistAssuranceLevel">
            <summary>Sets the shim of PolicyResponse.set_NistAssuranceLevel(Nullable`1&lt;NistAssuranceLevel&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.SerializePoliciesIListOfString">
            <summary>Sets the shim of PolicyResponse.SerializePolicies(IList`1&lt;String&gt; policies)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.StaticConstructor">
            <summary>Sets the shim of PolicyResponse.PolicyResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse._cctorb__0StringIDictionaryOfStringStringIProtocolMessageWithExtensionsBoolean">
            <summary>Sets the shim of PolicyResponse.&lt;.cctor&gt;b__0(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances.ActualPoliciesGet">
            <summary>Sets the shim of PolicyResponse.get_ActualPolicies()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances.ActualPoliciesSetIListOfString">
            <summary>Sets the shim of PolicyResponse.set_ActualPolicies(IList`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances.AssuranceLevelsGet">
            <summary>Sets the shim of PolicyResponse.get_AssuranceLevels()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances.AssuranceLevelsSetIDictionaryOfStringString">
            <summary>Sets the shim of PolicyResponse.set_AssuranceLevels(IDictionary`2&lt;String,String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances.AuthenticationTimeUtcGet">
            <summary>Sets the shim of PolicyResponse.get_AuthenticationTimeUtc()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances.AuthenticationTimeUtcSetNullableOfDateTime">
            <summary>Sets the shim of PolicyResponse.set_AuthenticationTimeUtc(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances.DotNetOpenAuthMessagingIMessageWithEventsOnReceiving">
            <summary>Sets the shim of PolicyResponse.DotNetOpenAuth.Messaging.IMessageWithEvents.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances.DotNetOpenAuthMessagingIMessageWithEventsOnSending">
            <summary>Sets the shim of PolicyResponse.DotNetOpenAuth.Messaging.IMessageWithEvents.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances.EqualsObject">
            <summary>Sets the shim of PolicyResponse.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances.GetHashCode01">
            <summary>Sets the shim of PolicyResponse.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances.IsSignedByProviderGet">
            <summary>Sets the shim of PolicyResponse.get_IsSignedByProvider()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances.NistAssuranceLevelGet">
            <summary>Sets the shim of PolicyResponse.get_NistAssuranceLevel()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.ProviderAuthenticationPolicy.Fakes.ShimPolicyResponse.AllInstances.NistAssuranceLevelSetNullableOfNistAssuranceLevel">
            <summary>Sets the shim of PolicyResponse.set_NistAssuranceLevel(Nullable`1&lt;NistAssuranceLevel&gt; value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.ClaimsRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.#ctor(DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.ClaimsRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.Bind(DotNetOpenAuth.Messaging.IExtensionMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.Bind(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.Bind(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AssembleProfileFieldsDemandLevel">
            <summary>Sets the shim of ClaimsRequest.AssembleProfileFields(DemandLevel level)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.BirthDateGet">
            <summary>Sets the shim of ClaimsRequest.get_BirthDate()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.BirthDateSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_BirthDate(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.Constructor">
            <summary>Sets the shim of ClaimsRequest.ClaimsRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.ConstructorString">
            <summary>Sets the shim of ClaimsRequest.ClaimsRequest(String typeUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.CountryGet">
            <summary>Sets the shim of ClaimsRequest.get_Country()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.CountrySetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_Country(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.CreateResponse">
            <summary>Sets the shim of ClaimsRequest.CreateResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.EmailGet">
            <summary>Sets the shim of ClaimsRequest.get_Email()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.EmailSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_Email(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.EqualityOpClaimsRequestClaimsRequest">
            <summary>Sets the shim of ClaimsRequest.op_Equality(ClaimsRequest one, ClaimsRequest other)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.EqualsObject">
            <summary>Sets the shim of ClaimsRequest.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.FullNameGet">
            <summary>Sets the shim of ClaimsRequest.get_FullName()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.FullNameSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_FullName(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.GenderGet">
            <summary>Sets the shim of ClaimsRequest.get_Gender()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.GenderSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_Gender(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.GetHashCode">
            <summary>Sets the shim of ClaimsRequest.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.InequalityOpClaimsRequestClaimsRequest">
            <summary>Sets the shim of ClaimsRequest.op_Inequality(ClaimsRequest one, ClaimsRequest other)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.LanguageGet">
            <summary>Sets the shim of ClaimsRequest.get_Language()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.LanguageSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_Language(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.NicknameGet">
            <summary>Sets the shim of ClaimsRequest.get_Nickname()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.NicknameSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_Nickname(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.OptionalListGet">
            <summary>Sets the shim of ClaimsRequest.get_OptionalList()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.OptionalListSetString">
            <summary>Sets the shim of ClaimsRequest.set_OptionalList(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.PolicyUrlGet">
            <summary>Sets the shim of ClaimsRequest.get_PolicyUrl()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.PolicyUrlSetUri">
            <summary>Sets the shim of ClaimsRequest.set_PolicyUrl(Uri value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.PostalCodeGet">
            <summary>Sets the shim of ClaimsRequest.get_PostalCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.PostalCodeSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_PostalCode(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.RequiredListGet">
            <summary>Sets the shim of ClaimsRequest.get_RequiredList()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.RequiredListSetString">
            <summary>Sets the shim of ClaimsRequest.set_RequiredList(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.SetProfileRequestFromListIEnumerableOfStringDemandLevel">
            <summary>Sets the shim of ClaimsRequest.SetProfileRequestFromList(IEnumerable`1&lt;String&gt; fieldNames, DemandLevel requestLevel)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.StaticConstructor">
            <summary>Sets the shim of ClaimsRequest.ClaimsRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.SynthesizedGet">
            <summary>Sets the shim of ClaimsRequest.get_Synthesized()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.SynthesizedSetBoolean">
            <summary>Sets the shim of ClaimsRequest.set_Synthesized(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.TimeZoneGet">
            <summary>Sets the shim of ClaimsRequest.get_TimeZone()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.TimeZoneSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_TimeZone(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.ToString">
            <summary>Sets the shim of ClaimsRequest.ToString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest._cctorb__0StringIDictionaryOfStringStringIProtocolMessageWithExtensionsBoolean">
            <summary>Sets the shim of ClaimsRequest.&lt;.cctor&gt;b__0(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.AssembleProfileFieldsDemandLevel">
            <summary>Sets the shim of ClaimsRequest.AssembleProfileFields(DemandLevel level)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.BirthDateGet">
            <summary>Sets the shim of ClaimsRequest.get_BirthDate()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.BirthDateSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_BirthDate(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.CountryGet">
            <summary>Sets the shim of ClaimsRequest.get_Country()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.CountrySetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_Country(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.CreateResponse">
            <summary>Sets the shim of ClaimsRequest.CreateResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.EmailGet">
            <summary>Sets the shim of ClaimsRequest.get_Email()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.EmailSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_Email(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.EqualsObject">
            <summary>Sets the shim of ClaimsRequest.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.FullNameGet">
            <summary>Sets the shim of ClaimsRequest.get_FullName()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.FullNameSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_FullName(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.GenderGet">
            <summary>Sets the shim of ClaimsRequest.get_Gender()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.GenderSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_Gender(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.GetHashCode01">
            <summary>Sets the shim of ClaimsRequest.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.LanguageGet">
            <summary>Sets the shim of ClaimsRequest.get_Language()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.LanguageSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_Language(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.NicknameGet">
            <summary>Sets the shim of ClaimsRequest.get_Nickname()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.NicknameSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_Nickname(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.OptionalListGet">
            <summary>Sets the shim of ClaimsRequest.get_OptionalList()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.OptionalListSetString">
            <summary>Sets the shim of ClaimsRequest.set_OptionalList(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.PolicyUrlGet">
            <summary>Sets the shim of ClaimsRequest.get_PolicyUrl()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.PolicyUrlSetUri">
            <summary>Sets the shim of ClaimsRequest.set_PolicyUrl(Uri value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.PostalCodeGet">
            <summary>Sets the shim of ClaimsRequest.get_PostalCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.PostalCodeSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_PostalCode(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.RequiredListGet">
            <summary>Sets the shim of ClaimsRequest.get_RequiredList()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.RequiredListSetString">
            <summary>Sets the shim of ClaimsRequest.set_RequiredList(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.SetProfileRequestFromListIEnumerableOfStringDemandLevel">
            <summary>Sets the shim of ClaimsRequest.SetProfileRequestFromList(IEnumerable`1&lt;String&gt; fieldNames, DemandLevel requestLevel)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.SynthesizedGet">
            <summary>Sets the shim of ClaimsRequest.get_Synthesized()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.SynthesizedSetBoolean">
            <summary>Sets the shim of ClaimsRequest.set_Synthesized(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.TimeZoneGet">
            <summary>Sets the shim of ClaimsRequest.get_TimeZone()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.TimeZoneSetDemandLevel">
            <summary>Sets the shim of ClaimsRequest.set_TimeZone(DemandLevel value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsRequest.AllInstances.ToString01">
            <summary>Sets the shim of ClaimsRequest.ToString()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.ClaimsResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.#ctor(DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.ClaimsResponse)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.Bind(DotNetOpenAuth.Messaging.IExtensionMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.Bind(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.Bind(DotNetOpenAuth.OpenId.Extensions.IClientScriptExtensionResponse)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.Bind(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.BirthDateGet">
            <summary>Sets the shim of ClaimsResponse.get_BirthDate()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.BirthDateRawGet">
            <summary>Sets the shim of ClaimsResponse.get_BirthDateRaw()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.BirthDateRawSetString">
            <summary>Sets the shim of ClaimsResponse.set_BirthDateRaw(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.BirthDateSetNullableOfDateTime">
            <summary>Sets the shim of ClaimsResponse.set_BirthDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.Constructor">
            <summary>Sets the shim of ClaimsResponse.ClaimsResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.ConstructorString">
            <summary>Sets the shim of ClaimsResponse.ClaimsResponse(String typeUriToUse)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.CountryGet">
            <summary>Sets the shim of ClaimsResponse.get_Country()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.CountrySetString">
            <summary>Sets the shim of ClaimsResponse.set_Country(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.CultureGet">
            <summary>Sets the shim of ClaimsResponse.get_Culture()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.CultureSetCultureInfo">
            <summary>Sets the shim of ClaimsResponse.set_Culture(CultureInfo value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.DotNetOpenAuthMessagingIMessageWithEventsOnReceiving">
            <summary>Sets the shim of ClaimsResponse.DotNetOpenAuth.Messaging.IMessageWithEvents.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.DotNetOpenAuthMessagingIMessageWithEventsOnSending">
            <summary>Sets the shim of ClaimsResponse.DotNetOpenAuth.Messaging.IMessageWithEvents.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.DotNetOpenAuthOpenIdExtensionsIClientScriptExtensionResponseInitializeJavaScriptDataIProtocolMessageWithExtensions">
            <summary>Sets the shim of ClaimsResponse.DotNetOpenAuth.OpenId.Extensions.IClientScriptExtensionResponse.InitializeJavaScriptData(IProtocolMessageWithExtensions response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.EmailGet">
            <summary>Sets the shim of ClaimsResponse.get_Email()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.EmailSetString">
            <summary>Sets the shim of ClaimsResponse.set_Email(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.EmptyToNullString">
            <summary>Sets the shim of ClaimsResponse.EmptyToNull(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.EqualityOpClaimsResponseClaimsResponse">
            <summary>Sets the shim of ClaimsResponse.op_Equality(ClaimsResponse one, ClaimsResponse other)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.EqualsObject">
            <summary>Sets the shim of ClaimsResponse.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.FullNameGet">
            <summary>Sets the shim of ClaimsResponse.get_FullName()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.FullNameSetString">
            <summary>Sets the shim of ClaimsResponse.set_FullName(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.GenderGet">
            <summary>Sets the shim of ClaimsResponse.get_Gender()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.GenderSetNullableOfGender">
            <summary>Sets the shim of ClaimsResponse.set_Gender(Nullable`1&lt;Gender&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.GetHashCode">
            <summary>Sets the shim of ClaimsResponse.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.InequalityOpClaimsResponseClaimsResponse">
            <summary>Sets the shim of ClaimsResponse.op_Inequality(ClaimsResponse one, ClaimsResponse other)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.IsSignedByProviderGet">
            <summary>Sets the shim of ClaimsResponse.get_IsSignedByProvider()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.LanguageGet">
            <summary>Sets the shim of ClaimsResponse.get_Language()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.LanguageSetString">
            <summary>Sets the shim of ClaimsResponse.set_Language(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.MailAddressGet">
            <summary>Sets the shim of ClaimsResponse.get_MailAddress()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.NicknameGet">
            <summary>Sets the shim of ClaimsResponse.get_Nickname()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.NicknameSetString">
            <summary>Sets the shim of ClaimsResponse.set_Nickname(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.PostalCodeGet">
            <summary>Sets the shim of ClaimsResponse.get_PostalCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.PostalCodeSetString">
            <summary>Sets the shim of ClaimsResponse.set_PostalCode(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.StaticConstructor">
            <summary>Sets the shim of ClaimsResponse.ClaimsResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.TimeZoneGet">
            <summary>Sets the shim of ClaimsResponse.get_TimeZone()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.TimeZoneSetString">
            <summary>Sets the shim of ClaimsResponse.set_TimeZone(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse._cctorb__0StringIDictionaryOfStringStringIProtocolMessageWithExtensionsBoolean">
            <summary>Sets the shim of ClaimsResponse.&lt;.cctor&gt;b__0(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.BirthDateGet">
            <summary>Sets the shim of ClaimsResponse.get_BirthDate()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.BirthDateRawGet">
            <summary>Sets the shim of ClaimsResponse.get_BirthDateRaw()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.BirthDateRawSetString">
            <summary>Sets the shim of ClaimsResponse.set_BirthDateRaw(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.BirthDateSetNullableOfDateTime">
            <summary>Sets the shim of ClaimsResponse.set_BirthDate(Nullable`1&lt;DateTime&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.CountryGet">
            <summary>Sets the shim of ClaimsResponse.get_Country()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.CountrySetString">
            <summary>Sets the shim of ClaimsResponse.set_Country(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.CultureGet">
            <summary>Sets the shim of ClaimsResponse.get_Culture()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.CultureSetCultureInfo">
            <summary>Sets the shim of ClaimsResponse.set_Culture(CultureInfo value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.DotNetOpenAuthMessagingIMessageWithEventsOnReceiving">
            <summary>Sets the shim of ClaimsResponse.DotNetOpenAuth.Messaging.IMessageWithEvents.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.DotNetOpenAuthMessagingIMessageWithEventsOnSending">
            <summary>Sets the shim of ClaimsResponse.DotNetOpenAuth.Messaging.IMessageWithEvents.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.DotNetOpenAuthOpenIdExtensionsIClientScriptExtensionResponseInitializeJavaScriptDataIProtocolMessageWithExtensions">
            <summary>Sets the shim of ClaimsResponse.DotNetOpenAuth.OpenId.Extensions.IClientScriptExtensionResponse.InitializeJavaScriptData(IProtocolMessageWithExtensions response)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.EmailGet">
            <summary>Sets the shim of ClaimsResponse.get_Email()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.EmailSetString">
            <summary>Sets the shim of ClaimsResponse.set_Email(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.EqualsObject">
            <summary>Sets the shim of ClaimsResponse.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.FullNameGet">
            <summary>Sets the shim of ClaimsResponse.get_FullName()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.FullNameSetString">
            <summary>Sets the shim of ClaimsResponse.set_FullName(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.GenderGet">
            <summary>Sets the shim of ClaimsResponse.get_Gender()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.GenderSetNullableOfGender">
            <summary>Sets the shim of ClaimsResponse.set_Gender(Nullable`1&lt;Gender&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.GetHashCode01">
            <summary>Sets the shim of ClaimsResponse.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.IsSignedByProviderGet">
            <summary>Sets the shim of ClaimsResponse.get_IsSignedByProvider()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.LanguageGet">
            <summary>Sets the shim of ClaimsResponse.get_Language()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.LanguageSetString">
            <summary>Sets the shim of ClaimsResponse.set_Language(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.MailAddressGet">
            <summary>Sets the shim of ClaimsResponse.get_MailAddress()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.NicknameGet">
            <summary>Sets the shim of ClaimsResponse.get_Nickname()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.NicknameSetString">
            <summary>Sets the shim of ClaimsResponse.set_Nickname(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.PostalCodeGet">
            <summary>Sets the shim of ClaimsResponse.get_PostalCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.PostalCodeSetString">
            <summary>Sets the shim of ClaimsResponse.set_PostalCode(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.TimeZoneGet">
            <summary>Sets the shim of ClaimsResponse.get_TimeZone()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.SimpleRegistration.Fakes.ShimClaimsResponse.AllInstances.TimeZoneSetString">
            <summary>Sets the shim of ClaimsResponse.set_TimeZone(String value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIModes">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.UI.UIModes</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIModes.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIModes.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIModes.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIModes.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.UI.UIRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.#ctor(DotNetOpenAuth.OpenId.Extensions.UI.UIRequest)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.Bind(DotNetOpenAuth.Messaging.IExtensionMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.Bind(DotNetOpenAuth.Messaging.IMessage)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.Bind(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AdditionalSupportedTypeUrisGet">
            <summary>Sets the shim of UIRequest.get_AdditionalSupportedTypeUris()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.Constructor">
            <summary>Sets the shim of UIRequest.UIRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.EnsureValidMessage">
            <summary>Sets the shim of UIRequest.EnsureValidMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.ExtraDataGet">
            <summary>Sets the shim of UIRequest.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.IconGet">
            <summary>Sets the shim of UIRequest.get_Icon()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.IconSetNullableOfBoolean">
            <summary>Sets the shim of UIRequest.set_Icon(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.IsSignedByRemotePartyGet">
            <summary>Sets the shim of UIRequest.get_IsSignedByRemoteParty()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.IsSignedByRemotePartySetBoolean">
            <summary>Sets the shim of UIRequest.set_IsSignedByRemoteParty(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.LanguagePreferenceGet">
            <summary>Sets the shim of UIRequest.get_LanguagePreference()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.LanguagePreferenceSetCultureInfoArray">
            <summary>Sets the shim of UIRequest.set_LanguagePreference(CultureInfo[] value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.ModeGet">
            <summary>Sets the shim of UIRequest.get_Mode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.ModeSetString">
            <summary>Sets the shim of UIRequest.set_Mode(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.OnReceiving">
            <summary>Sets the shim of UIRequest.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.OnSending">
            <summary>Sets the shim of UIRequest.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.StaticConstructor">
            <summary>Sets the shim of UIRequest.UIRequest()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.TypeUriGet">
            <summary>Sets the shim of UIRequest.get_TypeUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.VersionGet">
            <summary>Sets the shim of UIRequest.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest._cctorb__0StringIDictionaryOfStringStringIProtocolMessageWithExtensionsBoolean">
            <summary>Sets the shim of UIRequest.&lt;.cctor&gt;b__0(String typeUri, IDictionary`2&lt;String,String&gt; data, IProtocolMessageWithExtensions baseMessage, Boolean isProviderRole)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.AdditionalSupportedTypeUrisGet">
            <summary>Sets the shim of UIRequest.get_AdditionalSupportedTypeUris()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.EnsureValidMessage">
            <summary>Sets the shim of UIRequest.EnsureValidMessage()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.ExtraDataGet">
            <summary>Sets the shim of UIRequest.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.IconGet">
            <summary>Sets the shim of UIRequest.get_Icon()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.IconSetNullableOfBoolean">
            <summary>Sets the shim of UIRequest.set_Icon(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.IsSignedByRemotePartyGet">
            <summary>Sets the shim of UIRequest.get_IsSignedByRemoteParty()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.IsSignedByRemotePartySetBoolean">
            <summary>Sets the shim of UIRequest.set_IsSignedByRemoteParty(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.LanguagePreferenceGet">
            <summary>Sets the shim of UIRequest.get_LanguagePreference()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.LanguagePreferenceSetCultureInfoArray">
            <summary>Sets the shim of UIRequest.set_LanguagePreference(CultureInfo[] value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.ModeGet">
            <summary>Sets the shim of UIRequest.get_Mode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.ModeSetString">
            <summary>Sets the shim of UIRequest.set_Mode(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.OnReceiving">
            <summary>Sets the shim of UIRequest.OnReceiving()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.OnSending">
            <summary>Sets the shim of UIRequest.OnSending()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.TypeUriGet">
            <summary>Sets the shim of UIRequest.get_TypeUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIRequest.AllInstances.VersionGet">
            <summary>Sets the shim of UIRequest.get_Version()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIUtilities">
            <summary>Shim type of DotNetOpenAuth.OpenId.Extensions.UI.UIUtilities</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIUtilities.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIUtilities.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIUtilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.ShimUIUtilities.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.StubUIRequest">
            <summary>Stub type of DotNetOpenAuth.OpenId.Extensions.UI.UIRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.StubUIRequest.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.StubUIRequest.InitializeStub">
            <summary>Initializes a new instance of type StubUIRequest</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.StubUIRequest.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.StubUIRequest.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Extensions.UI.Fakes.StubUIRequest.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimAssociation">
            <summary>Shim type of DotNetOpenAuth.OpenId.Association</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.#ctor(DotNetOpenAuth.OpenId.Association)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.ConstructorStringByteArrayTimeSpanDateTime">
            <summary>Sets the shim of Association.Association(String handle, Byte[] secret, TimeSpan totalLifeLength, DateTime issued)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.DeserializeStringDateTimeByteArray">
            <summary>Sets the shim of Association.Deserialize(String handle, DateTime expiresUtc, Byte[] privateData)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.DumbSecretLifetimeGet">
            <summary>Sets the shim of Association.get_DumbSecretLifetime()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.EqualsObject">
            <summary>Sets the shim of Association.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.ExpiresGet">
            <summary>Sets the shim of Association.get_Expires()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.GetHashCode">
            <summary>Sets the shim of Association.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.HandleGet">
            <summary>Sets the shim of Association.get_Handle()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.HandleSetString">
            <summary>Sets the shim of Association.set_Handle(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.HasUsefulLifeRemainingGet">
            <summary>Sets the shim of Association.get_HasUsefulLifeRemaining()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.IsExpiredGet">
            <summary>Sets the shim of Association.get_IsExpired()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.IssuedGet">
            <summary>Sets the shim of Association.get_Issued()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.IssuedSetDateTime">
            <summary>Sets the shim of Association.set_Issued(DateTime value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.MinimumUsefulAssociationLifetimeGet">
            <summary>Sets the shim of Association.get_MinimumUsefulAssociationLifetime()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.SecondsTillExpirationGet">
            <summary>Sets the shim of Association.get_SecondsTillExpiration()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.SecretKeyGet">
            <summary>Sets the shim of Association.get_SecretKey()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.SecretKeySetByteArray">
            <summary>Sets the shim of Association.set_SecretKey(Byte[] value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.SerializePrivateData">
            <summary>Sets the shim of Association.SerializePrivateData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.SignByteArray">
            <summary>Sets the shim of Association.Sign(Byte[] data)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.TimeTillExpirationGet">
            <summary>Sets the shim of Association.get_TimeTillExpiration()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.TotalLifeLengthGet">
            <summary>Sets the shim of Association.get_TotalLifeLength()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.TotalLifeLengthSetTimeSpan">
            <summary>Sets the shim of Association.set_TotalLifeLength(TimeSpan value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.EqualsObject">
            <summary>Sets the shim of Association.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.ExpiresGet">
            <summary>Sets the shim of Association.get_Expires()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.GetHashCode01">
            <summary>Sets the shim of Association.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.HandleGet">
            <summary>Sets the shim of Association.get_Handle()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.HandleSetString">
            <summary>Sets the shim of Association.set_Handle(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.HasUsefulLifeRemainingGet">
            <summary>Sets the shim of Association.get_HasUsefulLifeRemaining()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.IsExpiredGet">
            <summary>Sets the shim of Association.get_IsExpired()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.IssuedGet">
            <summary>Sets the shim of Association.get_Issued()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.IssuedSetDateTime">
            <summary>Sets the shim of Association.set_Issued(DateTime value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.SecondsTillExpirationGet">
            <summary>Sets the shim of Association.get_SecondsTillExpiration()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.SecretKeyGet">
            <summary>Sets the shim of Association.get_SecretKey()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.SecretKeySetByteArray">
            <summary>Sets the shim of Association.set_SecretKey(Byte[] value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.SerializePrivateData">
            <summary>Sets the shim of Association.SerializePrivateData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.SignByteArray">
            <summary>Sets the shim of Association.Sign(Byte[] data)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.TimeTillExpirationGet">
            <summary>Sets the shim of Association.get_TimeTillExpiration()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.TotalLifeLengthGet">
            <summary>Sets the shim of Association.get_TotalLifeLength()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimAssociation.AllInstances.TotalLifeLengthSetTimeSpan">
            <summary>Sets the shim of Association.set_TotalLifeLength(TimeSpan value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier">
            <summary>Shim type of DotNetOpenAuth.OpenId.Identifier</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.#ctor(DotNetOpenAuth.OpenId.Identifier)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.ConstructorStringBoolean">
            <summary>Sets the shim of Identifier.Identifier(String originalString, Boolean isDiscoverySecureEndToEnd)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.EqualityOnStringsGet">
            <summary>Sets the shim of Identifier.get_EqualityOnStrings()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.EqualityOnStringsSetBoolean">
            <summary>Sets the shim of Identifier.set_EqualityOnStrings(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.EqualityOpIdentifierIdentifier">
            <summary>Sets the shim of Identifier.op_Equality(Identifier id1, Identifier id2)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.EqualsObject">
            <summary>Sets the shim of Identifier.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.GetHashCode">
            <summary>Sets the shim of Identifier.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.ImplicitOpIdentifierString">
            <summary>Sets the shim of Identifier.op_Implicit(Identifier identifier)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.ImplicitOpStringIdentifier">
            <summary>Sets the shim of Identifier.op_Implicit(String identifier)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.ImplicitOpUriIdentifier">
            <summary>Sets the shim of Identifier.op_Implicit(Uri identifier)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.InequalityOpIdentifierIdentifier">
            <summary>Sets the shim of Identifier.op_Inequality(Identifier id1, Identifier id2)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.IsDeserializedInstanceGet">
            <summary>Sets the shim of Identifier.get_IsDeserializedInstance()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.IsDeserializedInstanceSetBoolean">
            <summary>Sets the shim of Identifier.set_IsDeserializedInstance(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.IsDiscoverySecureEndToEndGet">
            <summary>Sets the shim of Identifier.get_IsDiscoverySecureEndToEnd()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.IsDiscoverySecureEndToEndSetBoolean">
            <summary>Sets the shim of Identifier.set_IsDiscoverySecureEndToEnd(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.IsValidString">
            <summary>Sets the shim of Identifier.IsValid(String identifier)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.OriginalStringGet">
            <summary>Sets the shim of Identifier.get_OriginalString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.OriginalStringSetString">
            <summary>Sets the shim of Identifier.set_OriginalString(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.ParseString">
            <summary>Sets the shim of Identifier.Parse(String identifier)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.ParseStringBoolean">
            <summary>Sets the shim of Identifier.Parse(String identifier, Boolean serializeExactValue)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.ReparseIdentifier">
            <summary>Sets the shim of Identifier.Reparse(Identifier identifier)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.SerializedStringGet">
            <summary>Sets the shim of Identifier.get_SerializedString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.TryParseStringIdentifierOut">
            <summary>Sets the shim of Identifier.TryParse(String value, Identifier&amp; result)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.AllInstances.EqualsObject">
            <summary>Sets the shim of Identifier.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.AllInstances.GetHashCode01">
            <summary>Sets the shim of Identifier.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.AllInstances.IsDeserializedInstanceGet">
            <summary>Sets the shim of Identifier.get_IsDeserializedInstance()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.AllInstances.IsDeserializedInstanceSetBoolean">
            <summary>Sets the shim of Identifier.set_IsDeserializedInstance(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.AllInstances.IsDiscoverySecureEndToEndGet">
            <summary>Sets the shim of Identifier.get_IsDiscoverySecureEndToEnd()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.AllInstances.IsDiscoverySecureEndToEndSetBoolean">
            <summary>Sets the shim of Identifier.set_IsDiscoverySecureEndToEnd(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.AllInstances.OriginalStringGet">
            <summary>Sets the shim of Identifier.get_OriginalString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.AllInstances.OriginalStringSetString">
            <summary>Sets the shim of Identifier.set_OriginalString(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifier.AllInstances.SerializedStringGet">
            <summary>Sets the shim of Identifier.get_SerializedString()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult">
            <summary>Shim type of DotNetOpenAuth.OpenId.IdentifierDiscoveryResult</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.#ctor(DotNetOpenAuth.OpenId.IdentifierDiscoveryResult)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.Bind(DotNetOpenAuth.OpenId.RelyingParty.IProviderEndpoint)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.IsExtensionSupportedOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets the shim of IdentifierDiscoveryResult.IsExtensionSupported()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.CapabilitiesGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_Capabilities()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.CapabilitiesSetReadOnlyCollectionOfString">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_Capabilities(ReadOnlyCollection`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.ClaimedIdentifierGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_ClaimedIdentifier()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.ClaimedIdentifierSetIdentifier">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_ClaimedIdentifier(Identifier value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.EndpointOrderGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_EndpointOrder()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.EqualityOpIdentifierDiscoveryResultIdentifierDiscoveryResult">
            <summary>Sets the shim of IdentifierDiscoveryResult.op_Equality(IdentifierDiscoveryResult se1, IdentifierDiscoveryResult se2)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.EqualsObject">
            <summary>Sets the shim of IdentifierDiscoveryResult.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.FriendlyIdentifierForDisplayGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_FriendlyIdentifierForDisplay()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.GetEndpointPrecedenceOrderByServiceTypeIdentifierDiscoveryResult">
            <summary>Sets the shim of IdentifierDiscoveryResult.GetEndpointPrecedenceOrderByServiceType(IdentifierDiscoveryResult endpoint)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.GetHashCode">
            <summary>Sets the shim of IdentifierDiscoveryResult.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.InequalityOpIdentifierDiscoveryResultIdentifierDiscoveryResult">
            <summary>Sets the shim of IdentifierDiscoveryResult.op_Inequality(IdentifierDiscoveryResult se1, IdentifierDiscoveryResult se2)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.IsExtensionSupportedIOpenIdMessageExtension">
            <summary>Sets the shim of IdentifierDiscoveryResult.IsExtensionSupported(IOpenIdMessageExtension extension)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.IsExtensionSupportedType">
            <summary>Sets the shim of IdentifierDiscoveryResult.IsExtensionSupported(Type extensionType)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.IsTypeUriPresentString">
            <summary>Sets the shim of IdentifierDiscoveryResult.IsTypeUriPresent(String typeUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.ProviderEndpointGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_ProviderEndpoint()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.ProviderEndpointPriorityGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_ProviderEndpointPriority()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.ProviderEndpointPrioritySetNullableOfInt32">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_ProviderEndpointPriority(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.ProviderEndpointSetUri">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_ProviderEndpoint(Uri value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.ProviderLocalIdentifierGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_ProviderLocalIdentifier()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.ProviderLocalIdentifierSetIdentifier">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_ProviderLocalIdentifier(Identifier value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.ServicePriorityGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_ServicePriority()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.ServicePrioritySetNullableOfInt32">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_ServicePriority(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.SetCapabilitiesForTestHookReadOnlyCollectionOfString">
            <summary>Sets the shim of IdentifierDiscoveryResult.SetCapabilitiesForTestHook(ReadOnlyCollection`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.ToString">
            <summary>Sets the shim of IdentifierDiscoveryResult.ToString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.UriDotNetOpenAuthOpenIdRelyingPartyIProviderEndpointget">
            <summary>Sets the shim of IdentifierDiscoveryResult.DotNetOpenAuth.OpenId.RelyingParty.IProviderEndpoint.get_Uri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.UserSuppliedIdentifierGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_UserSuppliedIdentifier()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.UserSuppliedIdentifierSetIdentifier">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_UserSuppliedIdentifier(Identifier value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.VersionGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.VersionSetVersion">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_Version(Version value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult._IsExtensionSupportedb__2String">
            <summary>Sets the shim of IdentifierDiscoveryResult.&lt;IsExtensionSupported&gt;b__2(String typeUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult._get_EndpointOrderb__0IdentifierDiscoveryResultIdentifierDiscoveryResult">
            <summary>Sets the shim of IdentifierDiscoveryResult.&lt;get_EndpointOrder&gt;b__0(IdentifierDiscoveryResult se1, IdentifierDiscoveryResult se2)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.IsExtensionSupportedOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{DotNetOpenAuth.OpenId.IdentifierDiscoveryResult,System.Boolean})">
            <summary>Sets the shim of IdentifierDiscoveryResult.IsExtensionSupported()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.CapabilitiesGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_Capabilities()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.CapabilitiesSetReadOnlyCollectionOfString">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_Capabilities(ReadOnlyCollection`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.ClaimedIdentifierGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_ClaimedIdentifier()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.ClaimedIdentifierSetIdentifier">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_ClaimedIdentifier(Identifier value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.EqualsObject">
            <summary>Sets the shim of IdentifierDiscoveryResult.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.FriendlyIdentifierForDisplayGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_FriendlyIdentifierForDisplay()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.GetHashCode01">
            <summary>Sets the shim of IdentifierDiscoveryResult.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.IsExtensionSupportedIOpenIdMessageExtension">
            <summary>Sets the shim of IdentifierDiscoveryResult.IsExtensionSupported(IOpenIdMessageExtension extension)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.IsExtensionSupportedType">
            <summary>Sets the shim of IdentifierDiscoveryResult.IsExtensionSupported(Type extensionType)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.IsTypeUriPresentString">
            <summary>Sets the shim of IdentifierDiscoveryResult.IsTypeUriPresent(String typeUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.ProviderEndpointGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_ProviderEndpoint()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.ProviderEndpointPriorityGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_ProviderEndpointPriority()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.ProviderEndpointPrioritySetNullableOfInt32">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_ProviderEndpointPriority(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.ProviderEndpointSetUri">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_ProviderEndpoint(Uri value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.ProviderLocalIdentifierGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_ProviderLocalIdentifier()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.ProviderLocalIdentifierSetIdentifier">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_ProviderLocalIdentifier(Identifier value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.ServicePriorityGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_ServicePriority()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.ServicePrioritySetNullableOfInt32">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_ServicePriority(Nullable`1&lt;Int32&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.SetCapabilitiesForTestHookReadOnlyCollectionOfString">
            <summary>Sets the shim of IdentifierDiscoveryResult.SetCapabilitiesForTestHook(ReadOnlyCollection`1&lt;String&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.ToString01">
            <summary>Sets the shim of IdentifierDiscoveryResult.ToString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.UriDotNetOpenAuthOpenIdRelyingPartyIProviderEndpointget">
            <summary>Sets the shim of IdentifierDiscoveryResult.DotNetOpenAuth.OpenId.RelyingParty.IProviderEndpoint.get_Uri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.UserSuppliedIdentifierGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_UserSuppliedIdentifier()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.UserSuppliedIdentifierSetIdentifier">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_UserSuppliedIdentifier(Identifier value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.VersionGet">
            <summary>Sets the shim of IdentifierDiscoveryResult.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances.VersionSetVersion">
            <summary>Sets the shim of IdentifierDiscoveryResult.set_Version(Version value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimIdentifierDiscoveryResult.AllInstances._IsExtensionSupportedb__2String">
            <summary>Sets the shim of IdentifierDiscoveryResult.&lt;IsExtensionSupported&gt;b__2(String typeUri)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimOpenIdUtilities">
            <summary>Shim type of DotNetOpenAuth.OpenId.OpenIdUtilities</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimOpenIdUtilities.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimOpenIdUtilities.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimOpenIdUtilities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimOpenIdUtilities.MoveToOf1IListOfM0Int32M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Collections.Generic.IList{``0},System.Int32,``0})">
            <summary>Sets the shim of OpenIdUtilities.MoveTo(IList`1&lt;!!0&gt; list, Int32 position, !!0 value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimOpenIdUtilities.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimOpenIdUtilities.CutToSecondDateTime">
            <summary>Sets the shim of OpenIdUtilities.CutToSecond(DateTime dateTime)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimOpenIdUtilities.FixDoublyUriDecodedBase64StringString">
            <summary>Sets the shim of OpenIdUtilities.FixDoublyUriDecodedBase64String(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimOpenIdUtilities.GenerateRandomAssociationHandle">
            <summary>Sets the shim of OpenIdUtilities.GenerateRandomAssociationHandle()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimOpenIdUtilities.GetExtensionFactoriesChannel">
            <summary>Sets the shim of OpenIdUtilities.GetExtensionFactories(Channel channel)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimOpenIdUtilities.GetResolvedRealmPageStringHttpRequestBase">
            <summary>Sets the shim of OpenIdUtilities.GetResolvedRealm(Page page, String realm, HttpRequestBase requestContext)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimOpenIdUtilities.IsDiffieHellmanPresentGet">
            <summary>Sets the shim of OpenIdUtilities.get_IsDiffieHellmanPresent()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimOpenIdUtilities.LoadDiffieHellmanTypes">
            <summary>Sets the shim of OpenIdUtilities.LoadDiffieHellmanTypes()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimRealm">
            <summary>Shim type of DotNetOpenAuth.OpenId.Realm</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimRealm.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimRealm.#ctor(DotNetOpenAuth.OpenId.Realm)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimRealm.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimRealm.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AbsolutePathGet">
            <summary>Sets the shim of Realm.get_AbsolutePath()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AutoDetectGet">
            <summary>Sets the shim of Realm.get_AutoDetect()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.ConstructorString">
            <summary>Sets the shim of Realm.Realm(String realmUrl)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.ConstructorUri">
            <summary>Sets the shim of Realm.Realm(Uri realmUrl)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.ConstructorUriBuilder">
            <summary>Sets the shim of Realm.Realm(UriBuilder realmUriBuilder)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.ContainsString">
            <summary>Sets the shim of Realm.Contains(String url)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.ContainsUri">
            <summary>Sets the shim of Realm.Contains(Uri url)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.DomainWildcardGet">
            <summary>Sets the shim of Realm.get_DomainWildcard()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.DomainWildcardSetBoolean">
            <summary>Sets the shim of Realm.set_DomainWildcard(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.EqualsObject">
            <summary>Sets the shim of Realm.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.GetHashCode">
            <summary>Sets the shim of Realm.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.HostGet">
            <summary>Sets the shim of Realm.get_Host()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.ImplicitOpRealmString">
            <summary>Sets the shim of Realm.op_Implicit(Realm realm)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.ImplicitOpStringRealm">
            <summary>Sets the shim of Realm.op_Implicit(String uri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.ImplicitOpUriRealm">
            <summary>Sets the shim of Realm.op_Implicit(Uri uri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.IsSaneGet">
            <summary>Sets the shim of Realm.get_IsSane()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.NoWildcardUriGet">
            <summary>Sets the shim of Realm.get_NoWildcardUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.OriginalStringGet">
            <summary>Sets the shim of Realm.get_OriginalString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.PathAndQueryGet">
            <summary>Sets the shim of Realm.get_PathAndQuery()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.PortGet">
            <summary>Sets the shim of Realm.get_Port()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.SafeUriBuilderToStringUriBuilder">
            <summary>Sets the shim of Realm.SafeUriBuilderToString(UriBuilder realmUriBuilder)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.SchemeGet">
            <summary>Sets the shim of Realm.get_Scheme()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.StaticConstructor">
            <summary>Sets the shim of Realm.Realm()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.ToString">
            <summary>Sets the shim of Realm.ToString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.UriWithWildcardChangedToWwwGet">
            <summary>Sets the shim of Realm.get_UriWithWildcardChangedToWww()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm._ctorb__0Match">
            <summary>Sets the shim of Realm.&lt;.ctor&gt;b__0(Match m)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.AbsolutePathGet">
            <summary>Sets the shim of Realm.get_AbsolutePath()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.ContainsString">
            <summary>Sets the shim of Realm.Contains(String url)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.ContainsUri">
            <summary>Sets the shim of Realm.Contains(Uri url)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.DomainWildcardGet">
            <summary>Sets the shim of Realm.get_DomainWildcard()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.DomainWildcardSetBoolean">
            <summary>Sets the shim of Realm.set_DomainWildcard(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.EqualsObject">
            <summary>Sets the shim of Realm.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.GetHashCode01">
            <summary>Sets the shim of Realm.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.HostGet">
            <summary>Sets the shim of Realm.get_Host()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.IsSaneGet">
            <summary>Sets the shim of Realm.get_IsSane()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.NoWildcardUriGet">
            <summary>Sets the shim of Realm.get_NoWildcardUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.OriginalStringGet">
            <summary>Sets the shim of Realm.get_OriginalString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.PathAndQueryGet">
            <summary>Sets the shim of Realm.get_PathAndQuery()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.PortGet">
            <summary>Sets the shim of Realm.get_Port()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.SchemeGet">
            <summary>Sets the shim of Realm.get_Scheme()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.ToString01">
            <summary>Sets the shim of Realm.ToString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimRealm.AllInstances.UriWithWildcardChangedToWwwGet">
            <summary>Sets the shim of Realm.get_UriWithWildcardChangedToWww()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings">
            <summary>Shim type of DotNetOpenAuth.OpenId.SecuritySettings</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.#ctor(DotNetOpenAuth.OpenId.SecuritySettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.AllowDualPurposeIdentifiersGet">
            <summary>Sets the shim of SecuritySettings.get_AllowDualPurposeIdentifiers()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.AllowDualPurposeIdentifiersSetBoolean">
            <summary>Sets the shim of SecuritySettings.set_AllowDualPurposeIdentifiers(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.ConstructorBoolean">
            <summary>Sets the shim of SecuritySettings.SecuritySettings(Boolean isProvider)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.IsAssociationInPermittedRangeAssociation">
            <summary>Sets the shim of SecuritySettings.IsAssociationInPermittedRange(Association association)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.MaximumHashBitLengthGet">
            <summary>Sets the shim of SecuritySettings.get_MaximumHashBitLength()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.MaximumHashBitLengthSetInt32">
            <summary>Sets the shim of SecuritySettings.set_MaximumHashBitLength(Int32 value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.MinimumHashBitLengthGet">
            <summary>Sets the shim of SecuritySettings.get_MinimumHashBitLength()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.MinimumHashBitLengthSetInt32">
            <summary>Sets the shim of SecuritySettings.set_MinimumHashBitLength(Int32 value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.AllInstances.AllowDualPurposeIdentifiersGet">
            <summary>Sets the shim of SecuritySettings.get_AllowDualPurposeIdentifiers()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.AllInstances.AllowDualPurposeIdentifiersSetBoolean">
            <summary>Sets the shim of SecuritySettings.set_AllowDualPurposeIdentifiers(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.AllInstances.IsAssociationInPermittedRangeAssociation">
            <summary>Sets the shim of SecuritySettings.IsAssociationInPermittedRange(Association association)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.AllInstances.MaximumHashBitLengthGet">
            <summary>Sets the shim of SecuritySettings.get_MaximumHashBitLength()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.AllInstances.MaximumHashBitLengthSetInt32">
            <summary>Sets the shim of SecuritySettings.set_MaximumHashBitLength(Int32 value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.AllInstances.MinimumHashBitLengthGet">
            <summary>Sets the shim of SecuritySettings.get_MinimumHashBitLength()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimSecuritySettings.AllInstances.MinimumHashBitLengthSetInt32">
            <summary>Sets the shim of SecuritySettings.set_MinimumHashBitLength(Int32 value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimUriDiscoveryService">
            <summary>Shim type of DotNetOpenAuth.OpenId.UriDiscoveryService</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimUriDiscoveryService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimUriDiscoveryService.#ctor(DotNetOpenAuth.OpenId.UriDiscoveryService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimUriDiscoveryService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimUriDiscoveryService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimUriDiscoveryService.Bind(DotNetOpenAuth.OpenId.IIdentifierDiscoveryService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriDiscoveryService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriDiscoveryService.Constructor">
            <summary>Sets the shim of UriDiscoveryService.UriDiscoveryService()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriDiscoveryService.DiscoverFromHtmlUriUriIdentifierString">
            <summary>Sets the shim of UriDiscoveryService.DiscoverFromHtml(Uri claimedIdentifier, UriIdentifier userSuppliedIdentifier, String html)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriDiscoveryService.DiscoverIdentifierIDirectWebRequestHandlerBooleanOut">
            <summary>Sets the shim of UriDiscoveryService.Discover(Identifier identifier, IDirectWebRequestHandler requestHandler, Boolean&amp; abortDiscoveryChain)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriDiscoveryService._Discoverb__0IdentifierDiscoveryResult">
            <summary>Sets the shim of UriDiscoveryService.&lt;Discover&gt;b__0(IdentifierDiscoveryResult se)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimUriDiscoveryService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriDiscoveryService.AllInstances.DiscoverIdentifierIDirectWebRequestHandlerBooleanOut">
            <summary>Sets the shim of UriDiscoveryService.Discover(Identifier identifier, IDirectWebRequestHandler requestHandler, Boolean&amp; abortDiscoveryChain)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier">
            <summary>Shim type of DotNetOpenAuth.OpenId.UriIdentifier</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.#ctor(DotNetOpenAuth.OpenId.UriIdentifier)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.ConstructorString">
            <summary>Sets the shim of UriIdentifier.UriIdentifier(String uri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.ConstructorStringBoolean">
            <summary>Sets the shim of UriIdentifier.UriIdentifier(String uri, Boolean requireSslDiscovery)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.ConstructorUri">
            <summary>Sets the shim of UriIdentifier.UriIdentifier(Uri uri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.ConstructorUriBoolean">
            <summary>Sets the shim of UriIdentifier.UriIdentifier(Uri uri, Boolean requireSslDiscovery)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.DoSimpleCanonicalizeStringBooleanBooleanOut">
            <summary>Sets the shim of UriIdentifier.DoSimpleCanonicalize(String uri, Boolean forceHttpsDefaultScheme, Boolean&amp; schemePrepended)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.EqualsObject">
            <summary>Sets the shim of UriIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.GetHashCode">
            <summary>Sets the shim of UriIdentifier.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.ImplicitOpUriIdentifierUri">
            <summary>Sets the shim of UriIdentifier.op_Implicit(UriIdentifier identifier)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.ImplicitOpUriUriIdentifier">
            <summary>Sets the shim of UriIdentifier.op_Implicit(Uri identifier)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.IsAllowedSchemeString">
            <summary>Sets the shim of UriIdentifier.IsAllowedScheme(String uri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.IsAllowedSchemeUri">
            <summary>Sets the shim of UriIdentifier.IsAllowedScheme(Uri uri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.IsValidUriString">
            <summary>Sets the shim of UriIdentifier.IsValidUri(String uri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.IsValidUriUri">
            <summary>Sets the shim of UriIdentifier.IsValidUri(Uri uri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.NormalSchemeToSpecialRoundTrippingSchemeString">
            <summary>Sets the shim of UriIdentifier.NormalSchemeToSpecialRoundTrippingScheme(String normal)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.ProblematicNormalizationGet">
            <summary>Sets the shim of UriIdentifier.get_ProblematicNormalization()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.SchemeImplicitlyPrependedGet">
            <summary>Sets the shim of UriIdentifier.get_SchemeImplicitlyPrepended()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.SchemeImplicitlyPrependedSetBoolean">
            <summary>Sets the shim of UriIdentifier.set_SchemeImplicitlyPrepended(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.SchemeSubstitutionTestHookGet">
            <summary>Sets the shim of UriIdentifier.get_SchemeSubstitutionTestHook()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.SchemeSubstitutionTestHookSetBoolean">
            <summary>Sets the shim of UriIdentifier.set_SchemeSubstitutionTestHook(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.StaticConstructor">
            <summary>Sets the shim of UriIdentifier.UriIdentifier()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.ToString">
            <summary>Sets the shim of UriIdentifier.ToString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.TrimFragment">
            <summary>Sets the shim of UriIdentifier.TrimFragment()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.TryCanonicalizeStringUriOut">
            <summary>Sets the shim of UriIdentifier.TryCanonicalize(String uri, Uri&amp; canonicalUri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.TryCanonicalizeStringUriOutBooleanBooleanOut">
            <summary>Sets the shim of UriIdentifier.TryCanonicalize(String uri, Uri&amp; canonicalUri, Boolean forceHttpsDefaultScheme, Boolean&amp; schemePrepended)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.TryRequireSslIdentifierOut">
            <summary>Sets the shim of UriIdentifier.TryRequireSsl(Identifier&amp; secureIdentifier)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.UriGet">
            <summary>Sets the shim of UriIdentifier.get_Uri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.UriSetUri">
            <summary>Sets the shim of UriIdentifier.set_Uri(Uri value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.AllInstances.EqualsObject">
            <summary>Sets the shim of UriIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.AllInstances.GetHashCode01">
            <summary>Sets the shim of UriIdentifier.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.AllInstances.ProblematicNormalizationGet">
            <summary>Sets the shim of UriIdentifier.get_ProblematicNormalization()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.AllInstances.SchemeImplicitlyPrependedGet">
            <summary>Sets the shim of UriIdentifier.get_SchemeImplicitlyPrepended()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.AllInstances.SchemeImplicitlyPrependedSetBoolean">
            <summary>Sets the shim of UriIdentifier.set_SchemeImplicitlyPrepended(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.AllInstances.ToString01">
            <summary>Sets the shim of UriIdentifier.ToString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.AllInstances.TrimFragment">
            <summary>Sets the shim of UriIdentifier.TrimFragment()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.AllInstances.TryRequireSslIdentifierOut">
            <summary>Sets the shim of UriIdentifier.TryRequireSsl(Identifier&amp; secureIdentifier)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.AllInstances.UriGet">
            <summary>Sets the shim of UriIdentifier.get_Uri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimUriIdentifier.AllInstances.UriSetUri">
            <summary>Sets the shim of UriIdentifier.set_Uri(Uri value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimXriDiscoveryProxyService">
            <summary>Shim type of DotNetOpenAuth.OpenId.XriDiscoveryProxyService</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimXriDiscoveryProxyService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimXriDiscoveryProxyService.#ctor(DotNetOpenAuth.OpenId.XriDiscoveryProxyService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimXriDiscoveryProxyService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimXriDiscoveryProxyService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimXriDiscoveryProxyService.Bind(DotNetOpenAuth.OpenId.IIdentifierDiscoveryService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriDiscoveryProxyService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriDiscoveryProxyService.Constructor">
            <summary>Sets the shim of XriDiscoveryProxyService.XriDiscoveryProxyService()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriDiscoveryProxyService.DiscoverIdentifierIDirectWebRequestHandlerBooleanOut">
            <summary>Sets the shim of XriDiscoveryProxyService.Discover(Identifier identifier, IDirectWebRequestHandler requestHandler, Boolean&amp; abortDiscoveryChain)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriDiscoveryProxyService.GetXrdsUrlXriIdentifier">
            <summary>Sets the shim of XriDiscoveryProxyService.GetXrdsUrl(XriIdentifier identifier)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimXriDiscoveryProxyService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriDiscoveryProxyService.AllInstances.DiscoverIdentifierIDirectWebRequestHandlerBooleanOut">
            <summary>Sets the shim of XriDiscoveryProxyService.Discover(Identifier identifier, IDirectWebRequestHandler requestHandler, Boolean&amp; abortDiscoveryChain)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier">
            <summary>Shim type of DotNetOpenAuth.OpenId.XriIdentifier</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.#ctor(DotNetOpenAuth.OpenId.XriIdentifier)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.CanonicalXriGet">
            <summary>Sets the shim of XriIdentifier.get_CanonicalXri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.CanonicalizeXriString">
            <summary>Sets the shim of XriIdentifier.CanonicalizeXri(String xri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.ConstructorString">
            <summary>Sets the shim of XriIdentifier.XriIdentifier(String xri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.ConstructorStringBoolean">
            <summary>Sets the shim of XriIdentifier.XriIdentifier(String xri, Boolean requireSsl)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.EqualsObject">
            <summary>Sets the shim of XriIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.GetHashCode">
            <summary>Sets the shim of XriIdentifier.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.IsValidXriString">
            <summary>Sets the shim of XriIdentifier.IsValidXri(String xri)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.OriginalXriGet">
            <summary>Sets the shim of XriIdentifier.get_OriginalXri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.OriginalXriSetString">
            <summary>Sets the shim of XriIdentifier.set_OriginalXri(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.StaticConstructor">
            <summary>Sets the shim of XriIdentifier.XriIdentifier()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.ToString">
            <summary>Sets the shim of XriIdentifier.ToString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.TrimFragment">
            <summary>Sets the shim of XriIdentifier.TrimFragment()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.TryRequireSslIdentifierOut">
            <summary>Sets the shim of XriIdentifier.TryRequireSsl(Identifier&amp; secureIdentifier)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.AllInstances.CanonicalXriGet">
            <summary>Sets the shim of XriIdentifier.get_CanonicalXri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.AllInstances.EqualsObject">
            <summary>Sets the shim of XriIdentifier.Equals(Object obj)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.AllInstances.GetHashCode01">
            <summary>Sets the shim of XriIdentifier.GetHashCode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.AllInstances.OriginalXriGet">
            <summary>Sets the shim of XriIdentifier.get_OriginalXri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.AllInstances.OriginalXriSetString">
            <summary>Sets the shim of XriIdentifier.set_OriginalXri(String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.AllInstances.ToString01">
            <summary>Sets the shim of XriIdentifier.ToString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.AllInstances.TrimFragment">
            <summary>Sets the shim of XriIdentifier.TrimFragment()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.ShimXriIdentifier.AllInstances.TryRequireSslIdentifierOut">
            <summary>Sets the shim of XriIdentifier.TryRequireSsl(Identifier&amp; secureIdentifier)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.StubIIdentifierDiscoveryService">
            <summary>Stub type of DotNetOpenAuth.OpenId.IIdentifierDiscoveryService</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubIIdentifierDiscoveryService.#ctor">
            <summary>Initializes a new instance of type StubIIdentifierDiscoveryService</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Fakes.StubIIdentifierDiscoveryService.DiscoverIdentifierIDirectWebRequestHandlerBooleanOut">
            <summary>Sets the stub of IIdentifierDiscoveryService.Discover(Identifier identifier, IDirectWebRequestHandler requestHandler, Boolean&amp; abortDiscoveryChain)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubIIdentifierDiscoveryService.dnoaoi::DotNetOpenAuth#OpenId#IIdentifierDiscoveryService#Discover(DotNetOpenAuth.OpenId.Identifier,DotNetOpenAuth.Messaging.IDirectWebRequestHandler,System.Boolean@)">
            <summary>Sets the stub of IIdentifierDiscoveryService.Discover(Identifier identifier, IDirectWebRequestHandler requestHandler, Boolean&amp; abortDiscoveryChain)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.StubIOpenIdApplicationStore">
            <summary>Stub type of DotNetOpenAuth.OpenId.IOpenIdApplicationStore</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubIOpenIdApplicationStore.#ctor">
            <summary>Initializes a new instance of type StubIOpenIdApplicationStore</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubIOpenIdApplicationStore.dnoac::DotNetOpenAuth#Messaging#Bindings#ICryptoKeyStore#GetKey(System.String,System.String)">
            <summary>Sets the stub of ICryptoKeyStore.GetKey(String bucket, String handle)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubIOpenIdApplicationStore.dnoac::DotNetOpenAuth#Messaging#Bindings#ICryptoKeyStore#GetKeys(System.String)">
            <summary>Sets the stub of ICryptoKeyStore.GetKeys(String bucket)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubIOpenIdApplicationStore.dnoac::DotNetOpenAuth#Messaging#Bindings#ICryptoKeyStore#RemoveKey(System.String,System.String)">
            <summary>Sets the stub of ICryptoKeyStore.RemoveKey(String bucket, String handle)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubIOpenIdApplicationStore.dnoac::DotNetOpenAuth#Messaging#Bindings#ICryptoKeyStore#StoreKey(System.String,System.String,DotNetOpenAuth.Messaging.Bindings.CryptoKey)">
            <summary>Sets the stub of ICryptoKeyStore.StoreKey(String bucket, String handle, CryptoKey key)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubIOpenIdApplicationStore.dnoac::DotNetOpenAuth#Messaging#Bindings#INonceStore#StoreNonce(System.String,System.String,System.DateTime)">
            <summary>Sets the stub of INonceStore.StoreNonce(String context, String nonce, DateTime timestampUtc)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Fakes.StubIOpenIdApplicationStore.GetKeyStringString">
            <summary>Sets the stub of ICryptoKeyStore.GetKey(String bucket, String handle)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Fakes.StubIOpenIdApplicationStore.GetKeysString">
            <summary>Sets the stub of ICryptoKeyStore.GetKeys(String bucket)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Fakes.StubIOpenIdApplicationStore.RemoveKeyStringString">
            <summary>Sets the stub of ICryptoKeyStore.RemoveKey(String bucket, String handle)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Fakes.StubIOpenIdApplicationStore.StoreKeyStringStringCryptoKey">
            <summary>Sets the stub of ICryptoKeyStore.StoreKey(String bucket, String handle, CryptoKey key)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Fakes.StubIOpenIdApplicationStore.StoreNonceStringStringDateTime">
            <summary>Sets the stub of INonceStore.StoreNonce(String context, String nonce, DateTime timestampUtc)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.StubRealm">
            <summary>Stub type of DotNetOpenAuth.OpenId.Realm</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubRealm.#ctor(System.Uri)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubRealm.#ctor(System.String)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubRealm.Equals(System.Object)">
            <summary>Sets the stub of Realm.Equals(Object obj)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Fakes.StubRealm.EqualsObject">
            <summary>Sets the stub of Realm.Equals(Object obj)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubRealm.GetHashCode">
            <summary>Sets the stub of Realm.GetHashCode()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Fakes.StubRealm.GetHashCode01">
            <summary>Sets the stub of Realm.GetHashCode()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubRealm.InitializeStub">
            <summary>Initializes a new instance of type StubRealm</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubRealm.ToString">
            <summary>Sets the stub of Realm.ToString()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Fakes.StubRealm.ToString01">
            <summary>Sets the stub of Realm.ToString()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.StubRealm.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.StubRealm.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.StubRealm.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.StubSecuritySettings">
            <summary>Stub type of DotNetOpenAuth.OpenId.SecuritySettings</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubSecuritySettings.#ctor(System.Boolean)">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubSecuritySettings.InitializeStub">
            <summary>Initializes a new instance of type StubSecuritySettings</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.StubSecuritySettings.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.StubSecuritySettings.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.StubSecuritySettings.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.StubUriDiscoveryService">
            <summary>Stub type of DotNetOpenAuth.OpenId.UriDiscoveryService</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubUriDiscoveryService.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubUriDiscoveryService.InitializeStub">
            <summary>Initializes a new instance of type StubUriDiscoveryService</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.StubUriDiscoveryService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.StubUriDiscoveryService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.StubUriDiscoveryService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Fakes.StubXriDiscoveryProxyService">
            <summary>Stub type of DotNetOpenAuth.OpenId.XriDiscoveryProxyService</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubXriDiscoveryProxyService.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Fakes.StubXriDiscoveryProxyService.InitializeStub">
            <summary>Initializes a new instance of type StubXriDiscoveryProxyService</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.StubXriDiscoveryProxyService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.StubXriDiscoveryProxyService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Fakes.StubXriDiscoveryProxyService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension">
            <summary>Stub type of DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.#ctor">
            <summary>Initializes a new instance of type StubIOpenIdMessageExtension</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.AdditionalSupportedTypeUrisGet">
            <summary>Sets the stub of IOpenIdMessageExtension.get_AdditionalSupportedTypeUris()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.AttachBackingFieldToIsSignedByRemoteParty">
            <summary>Attaches delegates to emulate StubIOpenIdMessageExtension.IsSignedByRemoteParty as a property with a backing field.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.dnoac::DotNetOpenAuth#Messaging#IMessage#EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.EnsureValidMessage">
            <summary>Sets the stub of IMessage.EnsureValidMessage()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.ExtraDataGet">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.IsSignedByRemotePartyGet">
            <summary>Sets the stub of IOpenIdMessageExtension.get_IsSignedByRemoteParty()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.IsSignedByRemotePartySetBoolean">
            <summary>Sets the stub of IOpenIdMessageExtension.set_IsSignedByRemoteParty(Boolean value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.TypeUriGet">
            <summary>Sets the stub of IOpenIdMessageExtension.get_TypeUri()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.VersionGet">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.dnoaoi::DotNetOpenAuth#OpenId#Messages#IOpenIdMessageExtension#AdditionalSupportedTypeUris">
            <summary>Sets the stub of IOpenIdMessageExtension.get_AdditionalSupportedTypeUris()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.dnoac::DotNetOpenAuth#Messaging#IMessage#ExtraData">
            <summary>Sets the stub of IMessage.get_ExtraData()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.dnoaoi::DotNetOpenAuth#OpenId#Messages#IOpenIdMessageExtension#IsSignedByRemoteParty">
            <summary>Sets the stub of IOpenIdMessageExtension.get_IsSignedByRemoteParty()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.dnoaoi::DotNetOpenAuth#OpenId#Messages#IOpenIdMessageExtension#TypeUri">
            <summary>Sets the stub of IOpenIdMessageExtension.get_TypeUri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Messages.Fakes.StubIOpenIdMessageExtension.dnoac::DotNetOpenAuth#Messaging#IMessage#Version">
            <summary>Sets the stub of IMessage.get_Version()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings">
            <summary>Shim type of DotNetOpenAuth.OpenId.Provider.ProviderSecuritySettings</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.#ctor(DotNetOpenAuth.OpenId.Provider.ProviderSecuritySettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AssociationLifetimesGet">
            <summary>Sets the shim of ProviderSecuritySettings.get_AssociationLifetimes()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.Clone">
            <summary>Sets the shim of ProviderSecuritySettings.Clone()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.Constructor">
            <summary>Sets the shim of ProviderSecuritySettings.ProviderSecuritySettings()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.EncodeAssociationSecretsInHandlesGet">
            <summary>Sets the shim of ProviderSecuritySettings.get_EncodeAssociationSecretsInHandles()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.EncodeAssociationSecretsInHandlesSetBoolean">
            <summary>Sets the shim of ProviderSecuritySettings.set_EncodeAssociationSecretsInHandles(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.ProtectDownlevelReplayAttacksGet">
            <summary>Sets the shim of ProviderSecuritySettings.get_ProtectDownlevelReplayAttacks()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.ProtectDownlevelReplayAttacksSetBoolean">
            <summary>Sets the shim of ProviderSecuritySettings.set_ProtectDownlevelReplayAttacks(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.RequireSslGet">
            <summary>Sets the shim of ProviderSecuritySettings.get_RequireSsl()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.RequireSslSetBoolean">
            <summary>Sets the shim of ProviderSecuritySettings.set_RequireSsl(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.SignOutgoingExtensionsGet">
            <summary>Sets the shim of ProviderSecuritySettings.get_SignOutgoingExtensions()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.SignOutgoingExtensionsSetBoolean">
            <summary>Sets the shim of ProviderSecuritySettings.set_SignOutgoingExtensions(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.UnsolicitedAssertionVerificationGet">
            <summary>Sets the shim of ProviderSecuritySettings.get_UnsolicitedAssertionVerification()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.UnsolicitedAssertionVerificationSetProviderSecuritySettingsUnsolicitedAssertionVerificationLevel">
            <summary>Sets the shim of ProviderSecuritySettings.set_UnsolicitedAssertionVerification(UnsolicitedAssertionVerificationLevel value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AllInstances.AssociationLifetimesGet">
            <summary>Sets the shim of ProviderSecuritySettings.get_AssociationLifetimes()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AllInstances.Clone">
            <summary>Sets the shim of ProviderSecuritySettings.Clone()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AllInstances.EncodeAssociationSecretsInHandlesGet">
            <summary>Sets the shim of ProviderSecuritySettings.get_EncodeAssociationSecretsInHandles()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AllInstances.EncodeAssociationSecretsInHandlesSetBoolean">
            <summary>Sets the shim of ProviderSecuritySettings.set_EncodeAssociationSecretsInHandles(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AllInstances.ProtectDownlevelReplayAttacksGet">
            <summary>Sets the shim of ProviderSecuritySettings.get_ProtectDownlevelReplayAttacks()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AllInstances.ProtectDownlevelReplayAttacksSetBoolean">
            <summary>Sets the shim of ProviderSecuritySettings.set_ProtectDownlevelReplayAttacks(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AllInstances.RequireSslGet">
            <summary>Sets the shim of ProviderSecuritySettings.get_RequireSsl()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AllInstances.RequireSslSetBoolean">
            <summary>Sets the shim of ProviderSecuritySettings.set_RequireSsl(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AllInstances.SignOutgoingExtensionsGet">
            <summary>Sets the shim of ProviderSecuritySettings.get_SignOutgoingExtensions()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AllInstances.SignOutgoingExtensionsSetBoolean">
            <summary>Sets the shim of ProviderSecuritySettings.set_SignOutgoingExtensions(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AllInstances.UnsolicitedAssertionVerificationGet">
            <summary>Sets the shim of ProviderSecuritySettings.get_UnsolicitedAssertionVerification()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.ShimProviderSecuritySettings.AllInstances.UnsolicitedAssertionVerificationSetProviderSecuritySettingsUnsolicitedAssertionVerificationLevel">
            <summary>Sets the shim of ProviderSecuritySettings.set_UnsolicitedAssertionVerification(UnsolicitedAssertionVerificationLevel value)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest">
            <summary>Stub type of DotNetOpenAuth.OpenId.Provider.IAuthenticationRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.#ctor">
            <summary>Initializes a new instance of type StubIAuthenticationRequest</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.AddResponseExtensionIOpenIdMessageExtension">
            <summary>Sets the stub of IRequest.AddResponseExtension(IOpenIdMessageExtension extension)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.AttachBackingFieldToClaimedIdentifier">
            <summary>Attaches delegates to emulate StubIAuthenticationRequest.ClaimedIdentifier as a property with a backing field.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.AttachBackingFieldToIsAuthenticated">
            <summary>Attaches delegates to emulate StubIAuthenticationRequest.IsAuthenticated as a property with a backing field.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.AttachBackingFieldToLocalIdentifier">
            <summary>Attaches delegates to emulate StubIAuthenticationRequest.LocalIdentifier as a property with a backing field.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.AttachBackingFieldToProviderEndpoint">
            <summary>Attaches delegates to emulate StubIAuthenticationRequest.ProviderEndpoint as a property with a backing field.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.AttachBackingFieldToSecuritySettings">
            <summary>Attaches delegates to emulate StubIAuthenticationRequest.SecuritySettings as a property with a backing field.</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.ClaimedIdentifierGet">
            <summary>Sets the stub of IAuthenticationRequest.get_ClaimedIdentifier()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.ClaimedIdentifierSetIdentifier">
            <summary>Sets the stub of IAuthenticationRequest.set_ClaimedIdentifier(Identifier value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.ClearResponseExtensions">
            <summary>Sets the stub of IRequest.ClearResponseExtensions()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IAuthenticationRequest#SetClaimedIdentifierFragment(System.String)">
            <summary>Sets the stub of IAuthenticationRequest.SetClaimedIdentifierFragment(String fragment)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IHostProcessedRequest#IsReturnUrlDiscoverable(DotNetOpenAuth.Messaging.IDirectWebRequestHandler)">
            <summary>Sets the stub of IHostProcessedRequest.IsReturnUrlDiscoverable(IDirectWebRequestHandler webRequestHandler)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#AddResponseExtension(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Sets the stub of IRequest.AddResponseExtension(IOpenIdMessageExtension extension)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#ClearResponseExtensions">
            <summary>Sets the stub of IRequest.ClearResponseExtensions()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#GetExtension``1">
            <summary>Sets the stub of IRequest.GetExtension()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#GetExtension(System.Type)">
            <summary>Sets the stub of IRequest.GetExtension(Type extensionType)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.GetExtensionOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetExtension()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.GetExtensionType">
            <summary>Sets the stub of IRequest.GetExtension(Type extensionType)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.ImmediateGet">
            <summary>Sets the stub of IHostProcessedRequest.get_Immediate()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.IsAuthenticatedGet">
            <summary>Sets the stub of IAuthenticationRequest.get_IsAuthenticated()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.IsAuthenticatedSetNullableOfBoolean">
            <summary>Sets the stub of IAuthenticationRequest.set_IsAuthenticated(Nullable`1&lt;Boolean&gt; value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.IsDelegatedIdentifierGet">
            <summary>Sets the stub of IAuthenticationRequest.get_IsDelegatedIdentifier()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.IsDirectedIdentityGet">
            <summary>Sets the stub of IAuthenticationRequest.get_IsDirectedIdentity()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.IsResponseReadyGet">
            <summary>Sets the stub of IRequest.get_IsResponseReady()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.IsReturnUrlDiscoverableIDirectWebRequestHandler">
            <summary>Sets the stub of IHostProcessedRequest.IsReturnUrlDiscoverable(IDirectWebRequestHandler webRequestHandler)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.LocalIdentifierGet">
            <summary>Sets the stub of IAuthenticationRequest.get_LocalIdentifier()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.LocalIdentifierSetIdentifier">
            <summary>Sets the stub of IAuthenticationRequest.set_LocalIdentifier(Identifier value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.ProviderEndpointGet">
            <summary>Sets the stub of IHostProcessedRequest.get_ProviderEndpoint()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.ProviderEndpointSetUri">
            <summary>Sets the stub of IHostProcessedRequest.set_ProviderEndpoint(Uri value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.RealmGet">
            <summary>Sets the stub of IHostProcessedRequest.get_Realm()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.RelyingPartyVersionGet">
            <summary>Sets the stub of IHostProcessedRequest.get_RelyingPartyVersion()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.SecuritySettingsGet">
            <summary>Sets the stub of IRequest.get_SecuritySettings()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.SecuritySettingsSetProviderSecuritySettings">
            <summary>Sets the stub of IRequest.set_SecuritySettings(ProviderSecuritySettings value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.SetClaimedIdentifierFragmentString">
            <summary>Sets the stub of IAuthenticationRequest.SetClaimedIdentifierFragment(String fragment)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IAuthenticationRequest#ClaimedIdentifier">
            <summary>Sets the stub of IAuthenticationRequest.get_ClaimedIdentifier()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IHostProcessedRequest#Immediate">
            <summary>Sets the stub of IHostProcessedRequest.get_Immediate()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IAuthenticationRequest#IsAuthenticated">
            <summary>Sets the stub of IAuthenticationRequest.get_IsAuthenticated()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IAuthenticationRequest#IsDelegatedIdentifier">
            <summary>Sets the stub of IAuthenticationRequest.get_IsDelegatedIdentifier()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IAuthenticationRequest#IsDirectedIdentity">
            <summary>Sets the stub of IAuthenticationRequest.get_IsDirectedIdentity()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#IsResponseReady">
            <summary>Sets the stub of IRequest.get_IsResponseReady()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IAuthenticationRequest#LocalIdentifier">
            <summary>Sets the stub of IAuthenticationRequest.get_LocalIdentifier()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IHostProcessedRequest#ProviderEndpoint">
            <summary>Sets the stub of IHostProcessedRequest.get_ProviderEndpoint()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IHostProcessedRequest#Realm">
            <summary>Sets the stub of IHostProcessedRequest.get_Realm()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IHostProcessedRequest#RelyingPartyVersion">
            <summary>Sets the stub of IHostProcessedRequest.get_RelyingPartyVersion()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#SecuritySettings">
            <summary>Sets the stub of IRequest.get_SecuritySettings()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest">
            <summary>Stub type of DotNetOpenAuth.OpenId.Provider.IHostProcessedRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.#ctor">
            <summary>Initializes a new instance of type StubIHostProcessedRequest</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.AddResponseExtensionIOpenIdMessageExtension">
            <summary>Sets the stub of IRequest.AddResponseExtension(IOpenIdMessageExtension extension)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.AttachBackingFieldToProviderEndpoint">
            <summary>Attaches delegates to emulate StubIHostProcessedRequest.ProviderEndpoint as a property with a backing field.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.AttachBackingFieldToSecuritySettings">
            <summary>Attaches delegates to emulate StubIHostProcessedRequest.SecuritySettings as a property with a backing field.</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.ClearResponseExtensions">
            <summary>Sets the stub of IRequest.ClearResponseExtensions()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IHostProcessedRequest#IsReturnUrlDiscoverable(DotNetOpenAuth.Messaging.IDirectWebRequestHandler)">
            <summary>Sets the stub of IHostProcessedRequest.IsReturnUrlDiscoverable(IDirectWebRequestHandler webRequestHandler)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#AddResponseExtension(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Sets the stub of IRequest.AddResponseExtension(IOpenIdMessageExtension extension)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#ClearResponseExtensions">
            <summary>Sets the stub of IRequest.ClearResponseExtensions()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#GetExtension(System.Type)">
            <summary>Sets the stub of IRequest.GetExtension(Type extensionType)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#GetExtension``1">
            <summary>Sets the stub of IRequest.GetExtension()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.GetExtensionOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetExtension()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.GetExtensionType">
            <summary>Sets the stub of IRequest.GetExtension(Type extensionType)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.ImmediateGet">
            <summary>Sets the stub of IHostProcessedRequest.get_Immediate()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.IsResponseReadyGet">
            <summary>Sets the stub of IRequest.get_IsResponseReady()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.IsReturnUrlDiscoverableIDirectWebRequestHandler">
            <summary>Sets the stub of IHostProcessedRequest.IsReturnUrlDiscoverable(IDirectWebRequestHandler webRequestHandler)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.ProviderEndpointGet">
            <summary>Sets the stub of IHostProcessedRequest.get_ProviderEndpoint()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.ProviderEndpointSetUri">
            <summary>Sets the stub of IHostProcessedRequest.set_ProviderEndpoint(Uri value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.RealmGet">
            <summary>Sets the stub of IHostProcessedRequest.get_Realm()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.RelyingPartyVersionGet">
            <summary>Sets the stub of IHostProcessedRequest.get_RelyingPartyVersion()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.SecuritySettingsGet">
            <summary>Sets the stub of IRequest.get_SecuritySettings()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.SecuritySettingsSetProviderSecuritySettings">
            <summary>Sets the stub of IRequest.set_SecuritySettings(ProviderSecuritySettings value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IHostProcessedRequest#Immediate">
            <summary>Sets the stub of IHostProcessedRequest.get_Immediate()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#IsResponseReady">
            <summary>Sets the stub of IRequest.get_IsResponseReady()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IHostProcessedRequest#ProviderEndpoint">
            <summary>Sets the stub of IHostProcessedRequest.get_ProviderEndpoint()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IHostProcessedRequest#Realm">
            <summary>Sets the stub of IHostProcessedRequest.get_Realm()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IHostProcessedRequest#RelyingPartyVersion">
            <summary>Sets the stub of IHostProcessedRequest.get_RelyingPartyVersion()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIHostProcessedRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#SecuritySettings">
            <summary>Sets the stub of IRequest.get_SecuritySettings()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Provider.Fakes.StubIProviderBehavior">
            <summary>Stub type of DotNetOpenAuth.OpenId.Provider.IProviderBehavior</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIProviderBehavior.#ctor">
            <summary>Initializes a new instance of type StubIProviderBehavior</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIProviderBehavior.ApplySecuritySettingsProviderSecuritySettings">
            <summary>Sets the stub of IProviderBehavior.ApplySecuritySettings(ProviderSecuritySettings securitySettings)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIProviderBehavior.dnoaoi::DotNetOpenAuth#OpenId#Provider#IProviderBehavior#ApplySecuritySettings(DotNetOpenAuth.OpenId.Provider.ProviderSecuritySettings)">
            <summary>Sets the stub of IProviderBehavior.ApplySecuritySettings(ProviderSecuritySettings securitySettings)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIProviderBehavior.dnoaoi::DotNetOpenAuth#OpenId#Provider#IProviderBehavior#OnIncomingRequest(DotNetOpenAuth.OpenId.Provider.IRequest)">
            <summary>Sets the stub of IProviderBehavior.OnIncomingRequest(IRequest request)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIProviderBehavior.dnoaoi::DotNetOpenAuth#OpenId#Provider#IProviderBehavior#OnOutgoingResponse(DotNetOpenAuth.OpenId.Provider.IAuthenticationRequest)">
            <summary>Sets the stub of IProviderBehavior.OnOutgoingResponse(IAuthenticationRequest request)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIProviderBehavior.OnIncomingRequestIRequest">
            <summary>Sets the stub of IProviderBehavior.OnIncomingRequest(IRequest request)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIProviderBehavior.OnOutgoingResponseIAuthenticationRequest">
            <summary>Sets the stub of IProviderBehavior.OnOutgoingResponse(IAuthenticationRequest request)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest">
            <summary>Stub type of DotNetOpenAuth.OpenId.Provider.IRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.#ctor">
            <summary>Initializes a new instance of type StubIRequest</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.AddResponseExtensionIOpenIdMessageExtension">
            <summary>Sets the stub of IRequest.AddResponseExtension(IOpenIdMessageExtension extension)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.AttachBackingFieldToSecuritySettings">
            <summary>Attaches delegates to emulate StubIRequest.SecuritySettings as a property with a backing field.</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.ClearResponseExtensions">
            <summary>Sets the stub of IRequest.ClearResponseExtensions()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#AddResponseExtension(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Sets the stub of IRequest.AddResponseExtension(IOpenIdMessageExtension extension)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#ClearResponseExtensions">
            <summary>Sets the stub of IRequest.ClearResponseExtensions()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#GetExtension``1">
            <summary>Sets the stub of IRequest.GetExtension()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#GetExtension(System.Type)">
            <summary>Sets the stub of IRequest.GetExtension(Type extensionType)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.GetExtensionOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetExtension()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.GetExtensionType">
            <summary>Sets the stub of IRequest.GetExtension(Type extensionType)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.IsResponseReadyGet">
            <summary>Sets the stub of IRequest.get_IsResponseReady()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.SecuritySettingsGet">
            <summary>Sets the stub of IRequest.get_SecuritySettings()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.SecuritySettingsSetProviderSecuritySettings">
            <summary>Sets the stub of IRequest.set_SecuritySettings(ProviderSecuritySettings value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#IsResponseReady">
            <summary>Sets the stub of IRequest.get_IsResponseReady()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.Provider.Fakes.StubIRequest.dnoaoi::DotNetOpenAuth#OpenId#Provider#IRequest#SecuritySettings">
            <summary>Sets the stub of IRequest.get_SecuritySettings()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings">
            <summary>Shim type of DotNetOpenAuth.OpenId.RelyingParty.RelyingPartySecuritySettings</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.#ctor(DotNetOpenAuth.OpenId.RelyingParty.RelyingPartySecuritySettings)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllowApproximateIdentifierDiscoveryGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_AllowApproximateIdentifierDiscovery()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllowApproximateIdentifierDiscoverySetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_AllowApproximateIdentifierDiscovery(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.Constructor">
            <summary>Sets the shim of RelyingPartySecuritySettings.RelyingPartySecuritySettings()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.FilterEndpointsIEnumerableOfIdentifierDiscoveryResult">
            <summary>Sets the shim of RelyingPartySecuritySettings.FilterEndpoints(IEnumerable`1&lt;IdentifierDiscoveryResult&gt; endpoints)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.IgnoreUnsignedExtensionsGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_IgnoreUnsignedExtensions()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.IgnoreUnsignedExtensionsSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_IgnoreUnsignedExtensions(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.MinimumRequiredOpenIdVersionGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_MinimumRequiredOpenIdVersion()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.MinimumRequiredOpenIdVersionSetProtocolVersion">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_MinimumRequiredOpenIdVersion(ProtocolVersion value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.PrivateSecretMaximumAgeGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_PrivateSecretMaximumAge()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.PrivateSecretMaximumAgeSetTimeSpan">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_PrivateSecretMaximumAge(TimeSpan value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.ProtectDownlevelReplayAttacksGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_ProtectDownlevelReplayAttacks()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.ProtectDownlevelReplayAttacksSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_ProtectDownlevelReplayAttacks(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.RejectAssertionsFromUntrustedProvidersGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_RejectAssertionsFromUntrustedProviders()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.RejectAssertionsFromUntrustedProvidersSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_RejectAssertionsFromUntrustedProviders(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.RejectDelegatingIdentifiersGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_RejectDelegatingIdentifiers()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.RejectDelegatingIdentifiersSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_RejectDelegatingIdentifiers(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.RejectUnsolicitedAssertionsGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_RejectUnsolicitedAssertions()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.RejectUnsolicitedAssertionsSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_RejectUnsolicitedAssertions(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.RequireAssociationGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_RequireAssociation()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.RequireAssociationSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_RequireAssociation(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.RequireDirectedIdentityGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_RequireDirectedIdentity()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.RequireDirectedIdentitySetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_RequireDirectedIdentity(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.RequireSslGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_RequireSsl()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.RequireSslSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_RequireSsl(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.TrustedProviderEndpointsGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_TrustedProviderEndpoints()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.TrustedProviderEndpointsSetHashSetOfUri">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_TrustedProviderEndpoints(HashSet`1&lt;Uri&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings._FilterEndpointsb__0IdentifierDiscoveryResult">
            <summary>Sets the shim of RelyingPartySecuritySettings.&lt;FilterEndpoints&gt;b__0(IdentifierDiscoveryResult se)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings._FilterEndpointsb__1IdentifierDiscoveryResult">
            <summary>Sets the shim of RelyingPartySecuritySettings.&lt;FilterEndpoints&gt;b__1(IdentifierDiscoveryResult se)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.AllowApproximateIdentifierDiscoveryGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_AllowApproximateIdentifierDiscovery()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.AllowApproximateIdentifierDiscoverySetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_AllowApproximateIdentifierDiscovery(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.FilterEndpointsIEnumerableOfIdentifierDiscoveryResult">
            <summary>Sets the shim of RelyingPartySecuritySettings.FilterEndpoints(IEnumerable`1&lt;IdentifierDiscoveryResult&gt; endpoints)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.IgnoreUnsignedExtensionsGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_IgnoreUnsignedExtensions()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.IgnoreUnsignedExtensionsSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_IgnoreUnsignedExtensions(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.MinimumRequiredOpenIdVersionGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_MinimumRequiredOpenIdVersion()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.MinimumRequiredOpenIdVersionSetProtocolVersion">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_MinimumRequiredOpenIdVersion(ProtocolVersion value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.PrivateSecretMaximumAgeGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_PrivateSecretMaximumAge()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.PrivateSecretMaximumAgeSetTimeSpan">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_PrivateSecretMaximumAge(TimeSpan value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.ProtectDownlevelReplayAttacksGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_ProtectDownlevelReplayAttacks()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.ProtectDownlevelReplayAttacksSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_ProtectDownlevelReplayAttacks(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.RejectAssertionsFromUntrustedProvidersGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_RejectAssertionsFromUntrustedProviders()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.RejectAssertionsFromUntrustedProvidersSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_RejectAssertionsFromUntrustedProviders(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.RejectDelegatingIdentifiersGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_RejectDelegatingIdentifiers()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.RejectDelegatingIdentifiersSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_RejectDelegatingIdentifiers(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.RejectUnsolicitedAssertionsGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_RejectUnsolicitedAssertions()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.RejectUnsolicitedAssertionsSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_RejectUnsolicitedAssertions(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.RequireAssociationGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_RequireAssociation()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.RequireAssociationSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_RequireAssociation(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.RequireDirectedIdentityGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_RequireDirectedIdentity()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.RequireDirectedIdentitySetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_RequireDirectedIdentity(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.RequireSslGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_RequireSsl()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.RequireSslSetBoolean">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_RequireSsl(Boolean value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.TrustedProviderEndpointsGet">
            <summary>Sets the shim of RelyingPartySecuritySettings.get_TrustedProviderEndpoints()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances.TrustedProviderEndpointsSetHashSetOfUri">
            <summary>Sets the shim of RelyingPartySecuritySettings.set_TrustedProviderEndpoints(HashSet`1&lt;Uri&gt; value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances._FilterEndpointsb__0IdentifierDiscoveryResult">
            <summary>Sets the shim of RelyingPartySecuritySettings.&lt;FilterEndpoints&gt;b__0(IdentifierDiscoveryResult se)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.ShimRelyingPartySecuritySettings.AllInstances._FilterEndpointsb__1IdentifierDiscoveryResult">
            <summary>Sets the shim of RelyingPartySecuritySettings.&lt;FilterEndpoints&gt;b__1(IdentifierDiscoveryResult se)</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest">
            <summary>Stub type of DotNetOpenAuth.OpenId.RelyingParty.IAuthenticationRequest</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.#ctor">
            <summary>Initializes a new instance of type StubIAuthenticationRequest</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.AddCallbackArgumentsIDictionaryOfStringString">
            <summary>Sets the stub of IAuthenticationRequest.AddCallbackArguments(IDictionary`2&lt;String,String&gt; arguments)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.AddCallbackArgumentsStringString">
            <summary>Sets the stub of IAuthenticationRequest.AddCallbackArguments(String key, String value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.AddExtensionIOpenIdMessageExtension">
            <summary>Sets the stub of IAuthenticationRequest.AddExtension(IOpenIdMessageExtension extension)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.AttachBackingFieldToIsExtensionOnly">
            <summary>Attaches delegates to emulate StubIAuthenticationRequest.IsExtensionOnly as a property with a backing field.</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.AttachBackingFieldToMode">
            <summary>Attaches delegates to emulate StubIAuthenticationRequest.Mode as a property with a backing field.</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.ClaimedIdentifierGet">
            <summary>Sets the stub of IAuthenticationRequest.get_ClaimedIdentifier()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.DiscoveryResultGet">
            <summary>Sets the stub of IAuthenticationRequest.get_DiscoveryResult()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#AddCallbackArguments(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>Sets the stub of IAuthenticationRequest.AddCallbackArguments(IDictionary`2&lt;String,String&gt; arguments)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#AddCallbackArguments(System.String,System.String)">
            <summary>Sets the stub of IAuthenticationRequest.AddCallbackArguments(String key, String value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#AddExtension(DotNetOpenAuth.OpenId.Messages.IOpenIdMessageExtension)">
            <summary>Sets the stub of IAuthenticationRequest.AddExtension(IOpenIdMessageExtension extension)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#RedirectToProvider">
            <summary>Sets the stub of IAuthenticationRequest.RedirectToProvider()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#SetCallbackArgument(System.String,System.String)">
            <summary>Sets the stub of IAuthenticationRequest.SetCallbackArgument(String key, String value)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#SetUntrustedCallbackArgument(System.String,System.String)">
            <summary>Sets the stub of IAuthenticationRequest.SetUntrustedCallbackArgument(String key, String value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.IsDirectedIdentityGet">
            <summary>Sets the stub of IAuthenticationRequest.get_IsDirectedIdentity()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.IsExtensionOnlyGet">
            <summary>Sets the stub of IAuthenticationRequest.get_IsExtensionOnly()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.IsExtensionOnlySetBoolean">
            <summary>Sets the stub of IAuthenticationRequest.set_IsExtensionOnly(Boolean value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.ModeGet">
            <summary>Sets the stub of IAuthenticationRequest.get_Mode()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.ModeSetAuthenticationRequestMode">
            <summary>Sets the stub of IAuthenticationRequest.set_Mode(AuthenticationRequestMode value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.ProviderGet">
            <summary>Sets the stub of IAuthenticationRequest.get_Provider()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.RealmGet">
            <summary>Sets the stub of IAuthenticationRequest.get_Realm()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.RedirectToProvider">
            <summary>Sets the stub of IAuthenticationRequest.RedirectToProvider()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.RedirectingResponseGet">
            <summary>Sets the stub of IAuthenticationRequest.get_RedirectingResponse()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.ReturnToUrlGet">
            <summary>Sets the stub of IAuthenticationRequest.get_ReturnToUrl()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.SetCallbackArgumentStringString">
            <summary>Sets the stub of IAuthenticationRequest.SetCallbackArgument(String key, String value)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.SetUntrustedCallbackArgumentStringString">
            <summary>Sets the stub of IAuthenticationRequest.SetUntrustedCallbackArgument(String key, String value)</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#ClaimedIdentifier">
            <summary>Sets the stub of IAuthenticationRequest.get_ClaimedIdentifier()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#DiscoveryResult">
            <summary>Sets the stub of IAuthenticationRequest.get_DiscoveryResult()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#IsDirectedIdentity">
            <summary>Sets the stub of IAuthenticationRequest.get_IsDirectedIdentity()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#IsExtensionOnly">
            <summary>Sets the stub of IAuthenticationRequest.get_IsExtensionOnly()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#Mode">
            <summary>Sets the stub of IAuthenticationRequest.get_Mode()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#Provider">
            <summary>Sets the stub of IAuthenticationRequest.get_Provider()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#Realm">
            <summary>Sets the stub of IAuthenticationRequest.get_Realm()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#RedirectingResponse">
            <summary>Sets the stub of IAuthenticationRequest.get_RedirectingResponse()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationRequest.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationRequest#ReturnToUrl">
            <summary>Sets the stub of IAuthenticationRequest.get_ReturnToUrl()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse">
            <summary>Stub type of DotNetOpenAuth.OpenId.RelyingParty.IAuthenticationResponse</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.#ctor">
            <summary>Initializes a new instance of type StubIAuthenticationResponse</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.ClaimedIdentifierGet">
            <summary>Sets the stub of IAuthenticationResponse.get_ClaimedIdentifier()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationResponse#GetCallbackArgument(System.String)">
            <summary>Sets the stub of IAuthenticationResponse.GetCallbackArgument(String key)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationResponse#GetCallbackArguments">
            <summary>Sets the stub of IAuthenticationResponse.GetCallbackArguments()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationResponse#GetExtension``1">
            <summary>Sets the stub of IAuthenticationResponse.GetExtension()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationResponse#GetExtension(System.Type)">
            <summary>Sets the stub of IAuthenticationResponse.GetExtension(Type extensionType)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationResponse#GetUntrustedCallbackArgument(System.String)">
            <summary>Sets the stub of IAuthenticationResponse.GetUntrustedCallbackArgument(String key)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationResponse#GetUntrustedCallbackArguments">
            <summary>Sets the stub of IAuthenticationResponse.GetUntrustedCallbackArguments()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationResponse#GetUntrustedExtension(System.Type)">
            <summary>Sets the stub of IAuthenticationResponse.GetUntrustedExtension(Type extensionType)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationResponse#GetUntrustedExtension``1">
            <summary>Sets the stub of IAuthenticationResponse.GetUntrustedExtension()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.ExceptionGet">
            <summary>Sets the stub of IAuthenticationResponse.get_Exception()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.FriendlyIdentifierForDisplayGet">
            <summary>Sets the stub of IAuthenticationResponse.get_FriendlyIdentifierForDisplay()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.GetCallbackArgumentString">
            <summary>Sets the stub of IAuthenticationResponse.GetCallbackArgument(String key)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.GetCallbackArguments">
            <summary>Sets the stub of IAuthenticationResponse.GetCallbackArguments()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.GetExtensionOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetExtension()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.GetExtensionType">
            <summary>Sets the stub of IAuthenticationResponse.GetExtension(Type extensionType)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.GetUntrustedCallbackArgumentString">
            <summary>Sets the stub of IAuthenticationResponse.GetUntrustedCallbackArgument(String key)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.GetUntrustedCallbackArguments">
            <summary>Sets the stub of IAuthenticationResponse.GetUntrustedCallbackArguments()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.GetUntrustedExtensionOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets stubs of GetUntrustedExtension()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.GetUntrustedExtensionType">
            <summary>Sets the stub of IAuthenticationResponse.GetUntrustedExtension(Type extensionType)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.ProviderGet">
            <summary>Sets the stub of IAuthenticationResponse.get_Provider()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.StatusGet">
            <summary>Sets the stub of IAuthenticationResponse.get_Status()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationResponse#ClaimedIdentifier">
            <summary>Sets the stub of IAuthenticationResponse.get_ClaimedIdentifier()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationResponse#Exception">
            <summary>Sets the stub of IAuthenticationResponse.get_Exception()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationResponse#FriendlyIdentifierForDisplay">
            <summary>Sets the stub of IAuthenticationResponse.get_FriendlyIdentifierForDisplay()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationResponse#Provider">
            <summary>Sets the stub of IAuthenticationResponse.get_Provider()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIAuthenticationResponse.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IAuthenticationResponse#Status">
            <summary>Sets the stub of IAuthenticationResponse.get_Status()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIProviderEndpoint">
            <summary>Stub type of DotNetOpenAuth.OpenId.RelyingParty.IProviderEndpoint</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIProviderEndpoint.#ctor">
            <summary>Initializes a new instance of type StubIProviderEndpoint</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIProviderEndpoint.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IProviderEndpoint#IsExtensionSupported``1">
            <summary>Sets the stub of IProviderEndpoint.IsExtensionSupported()</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIProviderEndpoint.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IProviderEndpoint#IsExtensionSupported(System.Type)">
            <summary>Sets the stub of IProviderEndpoint.IsExtensionSupported(Type extensionType)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIProviderEndpoint.IsExtensionSupportedOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets stubs of IsExtensionSupported()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIProviderEndpoint.IsExtensionSupportedType">
            <summary>Sets the stub of IProviderEndpoint.IsExtensionSupported(Type extensionType)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIProviderEndpoint.UriGet">
            <summary>Sets the stub of IProviderEndpoint.get_Uri()</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIProviderEndpoint.VersionGet">
            <summary>Sets the stub of IProviderEndpoint.get_Version()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIProviderEndpoint.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IProviderEndpoint#Uri">
            <summary>Sets the stub of IProviderEndpoint.get_Uri()</summary>
        </member>
        <member name="P:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIProviderEndpoint.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IProviderEndpoint#Version">
            <summary>Sets the stub of IProviderEndpoint.get_Version()</summary>
        </member>
        <member name="T:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIRelyingPartyBehavior">
            <summary>Stub type of DotNetOpenAuth.OpenId.RelyingParty.IRelyingPartyBehavior</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIRelyingPartyBehavior.#ctor">
            <summary>Initializes a new instance of type StubIRelyingPartyBehavior</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIRelyingPartyBehavior.ApplySecuritySettingsRelyingPartySecuritySettings">
            <summary>Sets the stub of IRelyingPartyBehavior.ApplySecuritySettings(RelyingPartySecuritySettings securitySettings)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIRelyingPartyBehavior.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IRelyingPartyBehavior#ApplySecuritySettings(DotNetOpenAuth.OpenId.RelyingParty.RelyingPartySecuritySettings)">
            <summary>Sets the stub of IRelyingPartyBehavior.ApplySecuritySettings(RelyingPartySecuritySettings securitySettings)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIRelyingPartyBehavior.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IRelyingPartyBehavior#OnIncomingPositiveAssertion(DotNetOpenAuth.OpenId.RelyingParty.IAuthenticationResponse)">
            <summary>Sets the stub of IRelyingPartyBehavior.OnIncomingPositiveAssertion(IAuthenticationResponse assertion)</summary>
        </member>
        <member name="M:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIRelyingPartyBehavior.dnoaoi::DotNetOpenAuth#OpenId#RelyingParty#IRelyingPartyBehavior#OnOutgoingAuthenticationRequest(DotNetOpenAuth.OpenId.RelyingParty.IAuthenticationRequest)">
            <summary>Sets the stub of IRelyingPartyBehavior.OnOutgoingAuthenticationRequest(IAuthenticationRequest request)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIRelyingPartyBehavior.OnIncomingPositiveAssertionIAuthenticationResponse">
            <summary>Sets the stub of IRelyingPartyBehavior.OnIncomingPositiveAssertion(IAuthenticationResponse assertion)</summary>
        </member>
        <member name="F:DotNetOpenAuth.OpenId.RelyingParty.Fakes.StubIRelyingPartyBehavior.OnOutgoingAuthenticationRequestIAuthenticationRequest">
            <summary>Sets the stub of IRelyingPartyBehavior.OnOutgoingAuthenticationRequest(IAuthenticationRequest request)</summary>
        </member>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.DotNetOpenAuthOpenIdDelegates">
            <summary>Contains custom delegates used for the stubs and shims of DotNetOpenAuth.OpenId</summary>
        </member>
    </members>
</doc>
